{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16.png","path":"images/favicon-16x16.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32.png","path":"images/favicon-32x32.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/fireworks.js","path":"js/fireworks.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon_io.zip","path":"images/favicon_io.zip","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1577320124290},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1577297787914},{"_id":"themes/hexo-theme-next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1577297787915},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1577297787915},{"_id":"themes/hexo-theme-next/.gitignore","hash":"d9021ac0041b511356fc7044cb02c6e0e567d706","modified":1577297787920},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1577297787920},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1577297787921},{"_id":"themes/hexo-theme-next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1577297787921},{"_id":"themes/hexo-theme-next/README.md","hash":"cf80e405a426235ae6239d8370a841ff21b99d79","modified":1577297787921},{"_id":"themes/hexo-theme-next/_config.yml","hash":"43277b40cca79297bbf6569feea1248bf590b181","modified":1579390838604},{"_id":"themes/hexo-theme-next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1577297787922},{"_id":"themes/hexo-theme-next/gulpfile.js","hash":"c4cffe4df4ba406d9ab347bc52a0c8059c5050b1","modified":1577297787930},{"_id":"themes/hexo-theme-next/package.json","hash":"652b12a6ac148ef2c7280fcc992a634ee5fdc56e","modified":1577297787961},{"_id":"source/404/index.md","hash":"fe341a32d9d0f5fec5099185a41bd165558836e8","modified":1577313625411},{"_id":"source/_data/styles.styl","hash":"0c33f779583e866bef80b15839ce177fd9206e98","modified":1577308901692},{"_id":"source/_posts/Algorithm 动态规划.md","hash":"ce58b0836efe57e524b499c6550edc0e279ce2ee","modified":1579390925739},{"_id":"source/_posts/Algorithm 字符串匹配KMP.md","hash":"bddbdb87dfd7c1c547acb99e641b7717836524c1","modified":1579390579074},{"_id":"source/_posts/Algorithm-排序.md","hash":"1209548617602fa1622f20387d4bd5a119aea98f","modified":1579657779418},{"_id":"source/_posts/C++ Template.md","hash":"23e7fb7675163f71df7f8cb261e26efafbefe5b3","modified":1579386728058},{"_id":"source/_posts/C++ new与malloc区别.md","hash":"3ee44e22a2ca4ceed59a645e456b8f38a49d5320","modified":1579386740562},{"_id":"source/_posts/C++ 内存.md","hash":"c21931755078d47d36e04f99d10fbb4ee12eb759","modified":1579386713878},{"_id":"source/_posts/C++ 多线程.md","hash":"83aa7a877522153156253382660d2ba2b4e1aab3","modified":1579386699871},{"_id":"source/_posts/C++ 宏.md","hash":"0dd3fede5b2544410ebcbb30cae6ee1b4f2420f0","modified":1579386635006},{"_id":"source/_posts/C++ 静态和动态链接库.md","hash":"0df8937886414e741272b9b7366ea741d4a7ac14","modified":1579386609442},{"_id":"source/_posts/C与C++语法区别.md","hash":"226c117981de0ea4bbc51e218e26667878323adb","modified":1580143724587},{"_id":"source/_posts/Leetcode 刷题技巧.md","hash":"f6acf9166ec91be51e124f7408fee93d418c511c","modified":1579828697352},{"_id":"source/_posts/Linux Debian10网络配置.md","hash":"9dff81abc55d6698db8e9f9a44d27ae39633c5a1","modified":1579230106820},{"_id":"source/_posts/Linux bash&shell.md","hash":"60686f2832e81f31e7d019d36fcbc3d68ff95054","modified":1579898935924},{"_id":"source/_posts/Linux 文件系统.md","hash":"6ae7b9647b199fd847cfe570f0fc0324ab9d7ec7","modified":1579891654416},{"_id":"source/_posts/Network 基础.md","hash":"930b2d3756bce07f700e9a14faeec2b3f6714cb0","modified":1579902357373},{"_id":"source/_posts/OS 虚拟内存.md","hash":"ffeb5dfb3c1d5cc26da22bb236f052143821985e","modified":1579902393967},{"_id":"source/_posts/Tool VSCode+Latex.md","hash":"dfaaf15b5cdf6aabef931531d6514764943e844d","modified":1579386446348},{"_id":"source/_posts/Tool git.md","hash":"0870d3ce176d85985f712dc710638c15ab4598a9","modified":1580313125600},{"_id":"source/_posts/Tool github-hexo搭建博客.md","hash":"ae34d3c7e512c32fc8c3446ff86e9535a82fa1e4","modified":1579386561407},{"_id":"source/_posts/Tool shadowsocks搭建.md","hash":"f173e1fcf6ba6bd5f126338a26b7923810f21926","modified":1579386434851},{"_id":"source/_posts/Tool 正则表达式.md","hash":"b841b453b14a317ac7c0029e447f78533b2edc3d","modified":1579386930762},{"_id":"source/about/index.md","hash":"547db744f5c7af1defa8e074f7a9e8456ce35d6e","modified":1577319959092},{"_id":"source/categories/index.md","hash":"1bae11cd0e740fc9165d432b6f4a235046852778","modified":1577316009749},{"_id":"source/tags/index.md","hash":"6bca7759e71a8e56846ac84efd4f6914a4efc654","modified":1577316019942},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"c8fee1aae903fe3c2b6b052a8c2f04c844a1bb4f","modified":1577297787931},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1577297787931},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"388fb5186919ac20c493628fbaa5cc635780a7d4","modified":1577297787931},{"_id":"themes/hexo-theme-next/languages/es.yml","hash":"e7d1533fe1b2f5946896348b7347c056e9558ef4","modified":1577297787932},{"_id":"themes/hexo-theme-next/languages/fa.yml","hash":"662f08d076e9bbe7bc67901b56716760211259c5","modified":1577297787932},{"_id":"themes/hexo-theme-next/languages/fr.yml","hash":"7175a8c3ba83befef9620dfd22e40bb1cfcb9c9e","modified":1577297787932},{"_id":"themes/hexo-theme-next/languages/hu.yml","hash":"96e7f749e88a2dde315b1421f4a121b73c71cea6","modified":1577297787933},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"21278ebca6994cda2e9761a89af574b7511f7b5f","modified":1577297787933},{"_id":"themes/hexo-theme-next/languages/it.yml","hash":"1ac08187ba87d34c367eb72f30517f4d25839fb9","modified":1577297787933},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"7d1e73011143437376d09093b2118ef010930fc1","modified":1577297787934},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"f6cd61bedfab340a322cacea8d112311f3ecf584","modified":1577297787934},{"_id":"themes/hexo-theme-next/languages/nl.yml","hash":"4b8a884271ed2a85391306c827ca56837bb9bcbe","modified":1577297787934},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"1f1b81d27753381257c0b958053a9d510b4e31df","modified":1577297787935},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"376f87ef8b5c798176aba7571ff0588e35f8c825","modified":1577297787935},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"8b73c200342ba9c4fe96540aceb5afe8d709f53e","modified":1577297787935},{"_id":"themes/hexo-theme-next/languages/tr.yml","hash":"cedbbf336959a927bd7710f12504db90b63c81e0","modified":1577297787936},{"_id":"themes/hexo-theme-next/languages/uk.yml","hash":"f02c673d48e597894f155d0b85fc75e6ed4d1d31","modified":1577297787936},{"_id":"themes/hexo-theme-next/languages/vi.yml","hash":"ce6acf1049d93cc73f5f77df2e1070420b4c2435","modified":1577297787936},{"_id":"themes/hexo-theme-next/languages/zh-CN.yml","hash":"a03e6796faa00c0390cc541049e3dcf6ad38a697","modified":1577297787936},{"_id":"themes/hexo-theme-next/languages/zh-HK.yml","hash":"759ea4759cc76a97cfec350ac2ceb53447fff76c","modified":1577297787937},{"_id":"themes/hexo-theme-next/languages/zh-TW.yml","hash":"995c94e5be02b909476c3c41c18e66af7c0db02c","modified":1577297787937},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"cecb41bdd856f01a3aab48139ee4503350533e07","modified":1577326170671},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"607d27c867a35dee55b4b49baae366a63f418688","modified":1577297787959},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"9febc49ff6f476fd0261c75aecbc67cc24c11667","modified":1577297787960},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"014202a6e316096f85f8c1489568d31212c5f1b2","modified":1577297787960},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"8322d902a8d870e6d0b0bc25750141c51749bf8b","modified":1577297787961},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"d75078e7acd9ead60dee9bec05b2b4f60e121177","modified":1577297787961},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"eedd3a19aa5222184ea6ee628fa46dfa0654ece8","modified":1577297787961},{"_id":"themes/hexo-theme-next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1577297787969},{"_id":"source/_posts/Algorithm 字符串匹配KMP/kmp.jpg","hash":"9139ca9f71a252b09682e310fb31bacb68359dd8","modified":1579384458610},{"_id":"source/_posts/Algorithm 字符串匹配KMP/next.png","hash":"bd0f385e17d37c81d10566b6e392d753c5f569e9","modified":1579389070828},{"_id":"source/_posts/C++ 静态和动态链接库/create static library.jpg","hash":"2d3a198dfb383605f3e608c25aa29a0aaee10d3a","modified":1577474889500},{"_id":"source/_posts/Linux Debian10网络配置/adapter1.jpg","hash":"df738709e10847e2432b564739a64e4656210b4e","modified":1577590989230},{"_id":"source/_posts/Linux Debian10网络配置/adapter2.jpg","hash":"b18eb310e04ce8d537457f6b72c97280017da0e3","modified":1577591072201},{"_id":"source/_posts/Linux Debian10网络配置/config.jpg","hash":"4369d0adce5aa9df985e1065fe025e50b465e561","modified":1577592018725},{"_id":"source/_posts/Linux Debian10网络配置/ipaddr.jpg","hash":"f7e35427ec7aa88f2aa8bf1b583c25820e613117","modified":1577591484975},{"_id":"source/_posts/Linux bash&shell/pipe.jpg","hash":"7da99a51a07709adbdae61cf9aba750233b5841a","modified":1579829159647},{"_id":"source/_posts/Linux bash&shell/数据流重导向.jpg","hash":"15913b5bb30ea648a721d14defbc01d38e8a5a41","modified":1578584934789},{"_id":"source/_posts/Linux 文件系统/tree.png","hash":"102881bde044a20fbeabe1dc1fdc1b818792676d","modified":1577892431879},{"_id":"source/_posts/Linux 文件系统/文件属性.jpg","hash":"506f40407d023a9c8242221425b0bcb2dad6206e","modified":1577492446990},{"_id":"source/_posts/Linux 文件系统/目录分类.jpg","hash":"0889a7cfcbbf464fc1ab42d7be1b1adb16e6d257","modified":1577495163679},{"_id":"source/_posts/Linux 文件系统/顺序式.jpg","hash":"d6524ec98af0ea800e8f516009df631fc0eec7d7","modified":1577897387045},{"_id":"source/_posts/Tool VSCode+Latex/settings.jpg","hash":"ab07f67ea3acb3e22e611fa1067026c6433be9c3","modified":1577561009301},{"_id":"source/_posts/Tool git/1checkinsOverTime.png","hash":"763aba1b1a7a2c99593984efcefa583d36d22f34","modified":1577389091391},{"_id":"source/_posts/Tool git/2status.png","hash":"a990ceb4480c54a2f1b6fd9c7e2c0669bd59fbf4","modified":1577389859754},{"_id":"source/_posts/Tool git/3lifecycle.png","hash":"4e259bf41d408d7e8b749d6a53cb41abbc16e88b","modified":1577390125803},{"_id":"source/_posts/Tool git/branch-and-history.png","hash":"003902474161650bcc984fa3965bfeba20398634","modified":1577397880570},{"_id":"source/_posts/Tool git/ssh-keys.png","hash":"ba2a0eb37836daefbf394479ffea092e51a69c22","modified":1577398959621},{"_id":"themes/hexo-theme-next/layout/_macro/passage-end-tag.swig","hash":"173d2d79f26fa53830c808c5824bba219ab9c6af","modified":1577309497984},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"db25de9ceaa1ec5650ff15cf4aee4399ed8f9c42","modified":1577297787938},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"3501144b62fe986d29c6b8afe281ccb88d59be81","modified":1577309558698},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"be603e35bea3431b133fcd4b9626993dcfb85c06","modified":1577297787939},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"ed7b2574d1fa57611dc887124a4df273b8d3d71c","modified":1577297787939},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"6a39e441ba3ef39056b7ddf00f60ddf7b67910bc","modified":1577310039759},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1577297787942},{"_id":"themes/hexo-theme-next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1577297787947},{"_id":"themes/hexo-theme-next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1577297787947},{"_id":"themes/hexo-theme-next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1577297787948},{"_id":"themes/hexo-theme-next/layout/_scripts/pjax.swig","hash":"f1c4611c543eddf364dce68dd9825f3df958aab3","modified":1577297787948},{"_id":"themes/hexo-theme-next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1577297787950},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1577297787950},{"_id":"themes/hexo-theme-next/layout/_third-party/baidu-push.swig","hash":"bd9ba0bf60cc3008ee14339fa395ee6af188e879","modified":1577297787952},{"_id":"themes/hexo-theme-next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1577297787955},{"_id":"themes/hexo-theme-next/layout/_third-party/quicklink.swig","hash":"fef4bfec70cb877c23c7a6b096d35b1579d0e2b2","modified":1577297787956},{"_id":"themes/hexo-theme-next/layout/_third-party/rating.swig","hash":"206644ff2c769226a58a9039eda9206302460626","modified":1577297787956},{"_id":"themes/hexo-theme-next/scripts/events/index.js","hash":"d263d0814d65ec38eec56ae004b6506533bd936d","modified":1577297787962},{"_id":"themes/hexo-theme-next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1577297787966},{"_id":"themes/hexo-theme-next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1577297787966},{"_id":"themes/hexo-theme-next/scripts/filters/locals.js","hash":"b1d33e92b2baaf83ebd3985e42ad767c1a0565c1","modified":1577297787966},{"_id":"themes/hexo-theme-next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1577297787967},{"_id":"themes/hexo-theme-next/scripts/filters/post.js","hash":"fcf1217ded1be1c9cabf0909c6a938ab546cbad2","modified":1577297787967},{"_id":"themes/hexo-theme-next/scripts/helpers/engine.js","hash":"a4031bea9d7fd0a25a37e1204733e392e67f8749","modified":1577297787967},{"_id":"themes/hexo-theme-next/scripts/helpers/font.js","hash":"20317a314d2283e4f87c8c8d247422f33427ebbe","modified":1577297787968},{"_id":"themes/hexo-theme-next/scripts/helpers/next-url.js","hash":"301c8061c17aa3394b726dc8f6a2863c176a03a6","modified":1577297787968},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"39156bf735c1d1ebd0d418c411f14ff4f0acdd75","modified":1577297787969},{"_id":"themes/hexo-theme-next/scripts/tags/caniuse.js","hash":"6fbc5764dddca114667f1487120a9ed32519857b","modified":1577297787969},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1577297787969},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1577297787970},{"_id":"themes/hexo-theme-next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1577297787970},{"_id":"themes/hexo-theme-next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1577297787970},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1577297787971},{"_id":"themes/hexo-theme-next/scripts/tags/pdf.js","hash":"ab995f0fc60d60f637220e2651111b775b8a06de","modified":1577297787971},{"_id":"themes/hexo-theme-next/scripts/tags/tabs.js","hash":"72a5adbd8f300bee1d0c289367598ca06b2bed17","modified":1577297787971},{"_id":"themes/hexo-theme-next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1577297787971},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"ee7c731c03d724827d9324d08be701c9d2f04c60","modified":1577297788003},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1577297788003},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1577297788003},{"_id":"themes/hexo-theme-next/source/images/avatar.jpg","hash":"f409ff53ef1d250a50561c90a5d3d0dafd934a4c","modified":1577311143614},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1577297788004},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1577297788004},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1577297788005},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1577297788005},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1577297788006},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1577297788066},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1577297788067},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1577297788067},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16.png","hash":"ae9a3aac9027f40ac7639dde8373485346b9afda","modified":1577311345595},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1577297788067},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32.png","hash":"873aa11f6e456794fec7deeb240a993c50e86d99","modified":1577311345624},{"_id":"themes/hexo-theme-next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1577297788068},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1577297788068},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1577297788068},{"_id":"themes/hexo-theme-next/source/js/algolia-search.js","hash":"f632ff7a404ac4fb04313bc554815406ebcb2a0b","modified":1577297788069},{"_id":"themes/hexo-theme-next/source/js/bookmark.js","hash":"2268bfcab8cf9019e590e2d356b08a3d4a0cf791","modified":1577297788069},{"_id":"themes/hexo-theme-next/source/js/fireworks.js","hash":"00bad73c4e3b09e1c80e03ec3a1addaf1c7a2e7c","modified":1577325056545},{"_id":"themes/hexo-theme-next/source/js/local-search.js","hash":"1623d2be3c0cd7114ed89762c70367eb48d0587e","modified":1577297788070},{"_id":"themes/hexo-theme-next/source/js/motion.js","hash":"7c3d324e188b4297006a8741a4b030a765e8d7ba","modified":1577297788070},{"_id":"themes/hexo-theme-next/source/js/next-boot.js","hash":"81454487703958e2ce06965fd3879c1d859b6f36","modified":1577297788071},{"_id":"themes/hexo-theme-next/source/js/utils.js","hash":"69ba30c7e5926178dca2236a556248b9cb794f47","modified":1577297788072},{"_id":"themes/hexo-theme-next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1577297788073},{"_id":"source/_posts/Linux 文件系统/索引式.jpg","hash":"d988e70d4118f1feb554adf34f48352a54e83e4c","modified":1577897312312},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1577297787994},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1577297787995},{"_id":"themes/hexo-theme-next/source/images/wechatpay.jpg","hash":"73a408ba89a6f7bb65c540b34a44dfa374a26c72","modified":1577328608603},{"_id":"themes/hexo-theme-next/layout/_partials/head/head-unique.swig","hash":"aa03613a0474dcaaf96ee2d9e644bcad9add13a7","modified":1577297787940},{"_id":"themes/hexo-theme-next/layout/_partials/head/head.swig","hash":"c75eb3039f91076a2971fa0e027707b8e0779f35","modified":1577297787940},{"_id":"themes/hexo-theme-next/layout/_partials/header/brand.swig","hash":"36d64a542b709490489c8c61269216f47241793a","modified":1577297787941},{"_id":"themes/hexo-theme-next/layout/_partials/header/index.swig","hash":"94edc28022325ba21b4e23bb13e1fac337223adc","modified":1577297787941},{"_id":"themes/hexo-theme-next/layout/_partials/header/menu-item.swig","hash":"6535777dc8ca267a12339235d89dfc79364d4b71","modified":1577297787941},{"_id":"themes/hexo-theme-next/layout/_partials/header/menu.swig","hash":"34a845987f536ffed8d6a9efc46306c26f84e3d7","modified":1577297787941},{"_id":"themes/hexo-theme-next/layout/_partials/header/sub-menu.swig","hash":"2c8f6fa26ffa7ffb7c18bbc2832b79eac298128a","modified":1577297787942},{"_id":"themes/hexo-theme-next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1577297787942},{"_id":"themes/hexo-theme-next/layout/_partials/page/page-header.swig","hash":"b3b4ffcbda422d7fc21ee43fec7d2a5056b2f381","modified":1577297787942},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-copyright.swig","hash":"5fd5ba53962aefccb43b1d2b306a534add2373e1","modified":1577297787944},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1577297787944},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1577297787945},{"_id":"themes/hexo-theme-next/layout/_partials/post/post-reward.swig","hash":"c6d3b1a3fae969d9c03ee48207925fc71e0a63d9","modified":1577297787945},{"_id":"themes/hexo-theme-next/layout/_partials/search/algolia-search.swig","hash":"f9017a2deb2f262912476e94822081bb10ee43af","modified":1577297787946},{"_id":"themes/hexo-theme-next/layout/_partials/search/index.swig","hash":"f1107c28661370e10e1940bff856f22f14f08518","modified":1577297787946},{"_id":"themes/hexo-theme-next/layout/_partials/sidebar/site-overview.swig","hash":"1c8cd2ba261ac47b8e5e470309a5afb661318ff5","modified":1577297787947},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"98453ac4a520b2600181fc0331f0067125d0ed4f","modified":1577297787946},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/schedule.swig","hash":"d0f18a88fb33b3341c0f5c81d7905deef934b9c2","modified":1577297787948},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1577297787949},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1577297787949},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1577297787949},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1577297787949},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1577297787951},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1577297787951},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1577297787952},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1577297787952},{"_id":"themes/hexo-theme-next/layout/_third-party/chat/chatra.swig","hash":"e8aa0ba146b658ae3b73efc4ca63325886bbaa2d","modified":1577297787952},{"_id":"themes/hexo-theme-next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1577297787953},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1577297787953},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.swig","hash":"96e83b6ce2e8d5d3f57676755a290b5a826e3a46","modified":1577297787953},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqusjs.swig","hash":"c608507fa2f6a0994764336383e394c31219b1f2","modified":1577297787954},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gitalk.swig","hash":"d67369b3216ab63b5596a867fde209232afe9408","modified":1577297787954},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1577297787954},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/valine.swig","hash":"1d6f87818ebedc3a1af691e33ab50b84dee74646","modified":1577297787954},{"_id":"themes/hexo-theme-next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1577297787955},{"_id":"themes/hexo-theme-next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1577297787955},{"_id":"themes/hexo-theme-next/layout/_third-party/math/mathjax.swig","hash":"1a8bdd6fa16f609872c8f92b546e29a16031b1f5","modified":1577297787955},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search.swig","hash":"35fb1f6438111451ccfbb8ba4a6a8424259c0149","modified":1577297787957},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1577297787957},{"_id":"themes/hexo-theme-next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1577297787957},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"5b5618c2f6ad1d7971e6db257222fce89aa56565","modified":1577297787957},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1577297787958},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/firestore.swig","hash":"e742d3064862c0513a2b884b3d4f1c1a2b9d35b2","modified":1577297787958},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1577297787958},{"_id":"themes/hexo-theme-next/layout/_third-party/statistics/lean-analytics.swig","hash":"15942931806bea463225c87aa3c8fb64a1073da9","modified":1577297787958},{"_id":"themes/hexo-theme-next/layout/_third-party/tags/mermaid.swig","hash":"db17f093ecf23e960a32af661c6b9a0651281a6b","modified":1577297787959},{"_id":"themes/hexo-theme-next/layout/_third-party/tags/pdf.swig","hash":"42e7beed8c7583e0c0612692eebfa5743cc4d006","modified":1577297787959},{"_id":"themes/hexo-theme-next/scripts/events/lib/config.js","hash":"4baf424cbe55a7a49ac751ef4753d04d8ffc7879","modified":1577297787962},{"_id":"themes/hexo-theme-next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1577297787963},{"_id":"themes/hexo-theme-next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1577297787963},{"_id":"themes/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"d002c9eea7e7dd31b64a4172012d4294489974d5","modified":1577297787964},{"_id":"themes/hexo-theme-next/scripts/filters/comment/common.js","hash":"31a6c8fbdfa16112b0b099727437b9df7641d421","modified":1577297787964},{"_id":"themes/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1577297787964},{"_id":"themes/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"a7a768edc8f9c739c0b4f799ae0e78e3270830f7","modified":1577297787964},{"_id":"themes/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1577297787965},{"_id":"themes/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1577297787965},{"_id":"themes/hexo-theme-next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1577297787965},{"_id":"themes/hexo-theme-next/scripts/filters/comment/valine.js","hash":"dd6c95d27e5846cb785909bc86228f376aedff45","modified":1577297787966},{"_id":"themes/hexo-theme-next/source/css/_mixins/Gemini.styl","hash":"b58ed9dabc5be0090647d9a0afc43359e1e0e14c","modified":1577297787994},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"1619130f81e091bb9ac43f93814f594dd1739255","modified":1577297787995},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"a0e0628fc958dfe794e2c073301f7c2ba00e20f1","modified":1577297787995},{"_id":"themes/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"08add4c5f7f80859dc58c7bff2b94b375c121ddb","modified":1577307550460},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"5832f04fab4e4224bca6dc31a3d94da034a20861","modified":1577297788001},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"1ff4303ad83f96b152be571d4df07969199d5930","modified":1577297788001},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"0bccf86c88e4d27b41f75bf166e66480c7bf919c","modified":1577307592526},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"7d407136d23a61dd14410553932b75cbaf3f5bdf","modified":1577297788002},{"_id":"themes/hexo-theme-next/source/images/favicon_io.zip","hash":"6248f56b963998e7047bc0b5f833fdc04d72f8d0","modified":1577311315301},{"_id":"themes/hexo-theme-next/source/js/schemes/muse.js","hash":"a8aea6d062c2859b503ea1bb8b7c9ce364ed9100","modified":1577297788071},{"_id":"themes/hexo-theme-next/source/js/schemes/pisces.js","hash":"3055813e55ab6e25d6c7b3905f5a2561341cda87","modified":1577297788072},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1577297788073},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1577297788074},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1577297788074},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1577297788074},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1577297788074},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1577297788081},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1577297788081},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"672866ede12bc2dd0835858f2697703fbc9dacb2","modified":1577297787973},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"bf86c81c57db3ed8fbb67df44fc2c0a79cd6ffd6","modified":1577297787973},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"daf188e77bd9d9fcff74c5659e875ebdd2010f08","modified":1577297787973},{"_id":"themes/hexo-theme-next/source/css/_common/components/rainbow.styl","hash":"fbcffb91e7f1ca3cde988353e36e4bf75770a8e8","modified":1577297787979},{"_id":"themes/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"4052c6c598a9dc443ffac171cc6cb31e981c5e5d","modified":1577297787979},{"_id":"themes/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"78406dfb644b0e516f697aead3ed5d545c5b8144","modified":1577297787984},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"ca1da6314c123f1bf0a95feefb073f08bb8c256a","modified":1577297787984},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"59c6e4e222cbee13a53f2d73ba16953af2cda82d","modified":1577297787988},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"5c27faaaf5a201d1c41c08ad5bfe1757a894fd69","modified":1577297787988},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"5772ee6cdc50a9e1a4425d79114d46065babe217","modified":1577297787988},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1577297787990},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1577297787990},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1577297787991},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"a443b11babb8ef2b4f410db30d9e55569528cd99","modified":1577297787991},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1577297787994},{"_id":"themes/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"02f762311958de989471536649ab67e79050958c","modified":1577307819362},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"335e587a783c875f7768edeb02e325f9ce7e164d","modified":1577297787996},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5ae9f601b4c85afe33c5fe338b371b507d6f351c","modified":1577297787997},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"68f4854a327a51c2092c6d605ed195dfaf413823","modified":1577297787997},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"7199707befa5469f2a3fb18ca49c2e0ff2c62ee0","modified":1577297787997},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1577297787997},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"9a7d7502ce394ddeba1773f90bbe19016b0cf0f6","modified":1577297787998},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1577297787998},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"82c4bd8f5b8b036c243404171a4d7925403a1b7d","modified":1577297787998},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"4dc216cb9f1c12bf7720012fd24e126ef6a4eca7","modified":1577297787998},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1577297787999},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1577297787999},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"55a1e7deda42cb3318d1e19b904c9c91891659f3","modified":1577297787999},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"c50c720200dd0cb210c087f6342d7e34716a5788","modified":1577307286861},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"94e6b2b33c942f1a32a4e412de1f6d7f5ae24a4c","modified":1577297788000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"42d3bb06357ecc3514cb853b4ff6d9193d09c9e2","modified":1577297788000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"111766f2494ae2b7d6f432c9eb3bda4793e47f9a","modified":1577297788000},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1577297788000},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1577297788075},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1577297788075},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1577297788076},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1577297788080},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1577297787974},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1577297787974},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1577297787974},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"686c780e6a483a2e494d9aab682803666ef63b3b","modified":1577297787974},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"a22c639cdf1073c9d060af62233125991ddf4dd5","modified":1577297787975},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"49bebe05a149f9fffba8d7d004a617e8a6e5e660","modified":1577297787976},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-copyright.styl","hash":"37701d40233a587401bcfc5ede056d8d1a8ba006","modified":1577297787976},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"724ca213d15ae27158c2cddf9c26d3dba3582283","modified":1577297787976},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"2bfe115c2fc68f4dfce4afc4a001a2db81edd83b","modified":1577297787976},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"ebf85cfe2d8536e0867ceea4e31f2d52a7bd7728","modified":1577297787977},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1577297787977},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"a98bbc014a55962e9c0f2d8b5af5e274d2fdd698","modified":1577297787977},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"82a275ca74086a46b8e82d5ebf78c7a807cd9c8b","modified":1577297787978},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1577297787978},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1577297787978},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1577297787978},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"e32d7654972c61979999b7bca3e85a603ab2a2f7","modified":1577297787979},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1577297787980},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"6880467b4f6d7b057fb8291aa10966429a0a3bff","modified":1577297787980},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1577297787980},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"089e9e3ec17e68a7cfec5ae065e958eb40dbf71e","modified":1577297787981},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1577297787981},{"_id":"themes/hexo-theme-next/source/css/_common/outline/footer/footer.styl","hash":"296ce792c7e506b2c4b6dc234fa9591bb32a1081","modified":1577297787982},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"f7977cfacaca9db6fab4d154486ad57ec4b0fde9","modified":1577297787982},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"0bd0f4a28b3362898f4d9061b307b12bd128f6b0","modified":1577297787982},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/header.styl","hash":"459a39c54e4a16db287f390160fc06a829d64160","modified":1577297787983},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1577297787983},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"de55bc28b9ecbc5fb66a177c2db735223e04e54c","modified":1577297787983},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"3e6287e2241eac9a4090b452cd270c37dc240ed2","modified":1577297787983},{"_id":"themes/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"4f60b754b1286ade81e2d92a0f6e04af203729d3","modified":1577297787984},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1577297787985},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"bfbb2b8dfceb79c5adcc31338f9cc8efdd3c1bc6","modified":1577297787985},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"00b2055f170e54267321d27118e0a7f07d10890b","modified":1577297787985},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"0812ae7ecd1d8c60ec4290f506ec10881ed0fca8","modified":1577297787986},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1577297787986},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"7406d2b31b9d329043160191c98232e5aeebbc2c","modified":1577297787986},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a78eb9f212f405378bd38582742581d26a57fe7f","modified":1577297787987},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1577297787987},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/sidebar.styl","hash":"6523b27ff0b27b40aa5fd96b4b0540e3881889aa","modified":1577297787987},{"_id":"themes/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"a782cd5ceee062fdfb91a9732017d19672973784","modified":1577297787987},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"156f6c3d6b51bd573c3c50b04440555cc68fd28d","modified":1577297787989},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1577297787989},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"091331f7ef970f291f085453e470639aa1010be8","modified":1577297787989},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1577297787989},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"8c318a485c56dbdcdb22fd00781484ecc151bf8a","modified":1577297787992},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1577297787992},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"77d4f332cf805aa7d294346c99e2d72afe2e82a4","modified":1577297787992},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"d1b26ec30cd0eb84738ea6ce927fd82b35c094c3","modified":1577297787992},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"c9337e837f10c5f40c27a0c0a012f39dfadc7572","modified":1577297787993},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"0a7a107936250d70268db4a19276667440e91ada","modified":1577297787993},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1577297787994},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1577297788079},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1577297788079},{"_id":"public/search.xml","hash":"884de2959cf3c76c1d34b6dca0b85c5773b83a56","modified":1580313707569},{"_id":"public/404/index.html","hash":"1df8801efdddb22bf967ca13097944606ac0d656","modified":1580313707569},{"_id":"public/about/index.html","hash":"76fbb938b312742679f819f4a66caabbf1dddcc6","modified":1580313707569},{"_id":"public/categories/index.html","hash":"9c08c337a027b00521c68e9f99aa13ff4aef0943","modified":1580313707569},{"_id":"public/tags/index.html","hash":"e1a0eaf04f64d587ccef9a0fd85de8f0b146245f","modified":1580313707569},{"_id":"public/2020/01/27/C与C++语法区别/index.html","hash":"cf4df4a43cb6300bc2c390c70d15ed1bc0554724","modified":1580313707569},{"_id":"public/2020/01/24/OS 虚拟内存/index.html","hash":"a98fc60bfd08cc9108e933d190f929b28931eae8","modified":1580313707569},{"_id":"public/2020/01/21/Algorithm-排序/index.html","hash":"dcdecb2fbf1252747fbac374197daafdf15da576","modified":1580313707569},{"_id":"public/2020/01/21/Leetcode 刷题技巧/index.html","hash":"ef67943b9a8a1ae83f923bd3703b38cd4ab8c8eb","modified":1580313707569},{"_id":"public/2020/01/18/Algorithm 字符串匹配KMP/index.html","hash":"9c514707a4ce96d3bbf4d2b137fb42ada5455e2b","modified":1580313707569},{"_id":"public/2020/01/16/C++ 多线程/index.html","hash":"e7e02384cc75c685b4375583c20c17bb52f18053","modified":1580313707569},{"_id":"public/2020/01/16/Network 基础/index.html","hash":"0c5894c440850489a8fbf78c67dcac76075fdb6a","modified":1580313707569},{"_id":"public/2020/01/08/Linux bash&shell/index.html","hash":"a2637e592e92714e208a664fa290886db3091b06","modified":1580313707569},{"_id":"public/2020/01/07/C++ Template/index.html","hash":"c804e815feaa732d01e84705d85adfa36f5d035b","modified":1580313707569},{"_id":"public/2020/01/03/Algorithm 动态规划/index.html","hash":"3e74f931e265ccd5a3c49f23d914fabd1673af97","modified":1580313707569},{"_id":"public/2020/01/01/Tool 正则表达式/index.html","hash":"f9179950db4acc36971913b740d75ab35a97908b","modified":1580313707569},{"_id":"public/2019/12/29/C++ 宏/index.html","hash":"da0704d5fae76f77790b9b2ad4a2ddbb90828263","modified":1580313707569},{"_id":"public/2019/12/29/C++ new与malloc区别/index.html","hash":"1aab2330f51eef4d76c2a05336d21ea7064aef68","modified":1580313707569},{"_id":"public/2019/12/29/C++ 内存/index.html","hash":"087e548275a0f9e37626a150f8b0311b045b2202","modified":1580313707569},{"_id":"public/2019/12/27/Tool VSCode+Latex/index.html","hash":"644df21c5ba8d460b92033bb10c6f6b12014aa94","modified":1580313707569},{"_id":"public/2019/12/26/C++ 静态和动态链接库/index.html","hash":"8fc93e7e2f1e6c63175fe4b46fa99c676b08b4e8","modified":1580313707569},{"_id":"public/2019/12/26/Tool git/index.html","hash":"99e64791715d0fd5c3651bae8139a4077b82f12d","modified":1580313707569},{"_id":"public/2019/12/25/Tool shadowsocks搭建/index.html","hash":"d1f93c96366c7b6549e7bc745546fcb85e926a7b","modified":1580313707569},{"_id":"public/2019/12/25/Linux Debian10网络配置/index.html","hash":"55bc6ad0b4d9440fd23ffb51ba768032fe9e8d86","modified":1580313707569},{"_id":"public/2019/12/25/Tool github-hexo搭建博客/index.html","hash":"fb9e78519b7ce40e9a0f45e1bdf9a2c34e38ca2c","modified":1580313707569},{"_id":"public/2019/12/25/Linux 文件系统/index.html","hash":"059cf62c3c5b76af469cfe49f5c7201f700c31a0","modified":1580313707569},{"_id":"public/archives/index.html","hash":"dafe2e6bd043c8831bf7ab2989381230a33e3473","modified":1580313707569},{"_id":"public/archives/page/2/index.html","hash":"ce586fd0a72e399175b7d730be03c1dc08a0856d","modified":1580313707569},{"_id":"public/archives/page/3/index.html","hash":"f874b50ab6807bfc12e3982a5ac720aa1ef61f0e","modified":1580313707569},{"_id":"public/archives/2019/index.html","hash":"0f7170af71067059bcd3d880f16769891ce8e545","modified":1580313707569},{"_id":"public/archives/2019/12/index.html","hash":"422e3319cc4680597594155b64768703b556690c","modified":1580313707569},{"_id":"public/archives/2020/index.html","hash":"1b48ef21dcf1e74abc4d48d134882ee65cd6d5f3","modified":1580313707569},{"_id":"public/archives/2020/page/2/index.html","hash":"8c33d078b6c12661d7567c42810ca38a6bfe62c1","modified":1580313707569},{"_id":"public/archives/2020/01/index.html","hash":"ac50ff60749affdd093d27f2b8689efaeed05c36","modified":1580313707569},{"_id":"public/archives/2020/01/page/2/index.html","hash":"61740678ca1daed1a0ec6392d7ca52b5c247e134","modified":1580313707569},{"_id":"public/categories/Algorithm/index.html","hash":"f2433dba2cb878d7dba731f620017493fe8e9e80","modified":1580313707569},{"_id":"public/categories/C/index.html","hash":"cb281faf540ad7141de4f4b24f3b8ab34b248ee0","modified":1580313707569},{"_id":"public/categories/Linux/index.html","hash":"3922f8629eee3d5be32b7e0e2e9c1c0127a06aed","modified":1580313707569},{"_id":"public/categories/Tool/index.html","hash":"e613f0a1c81686ed0486e3d47362ec5cb0503f7d","modified":1580313707569},{"_id":"public/categories/Network/index.html","hash":"30ebfe8e45106561cb9b4864ff21b0915f22cc55","modified":1580313707569},{"_id":"public/index.html","hash":"2cb3721be1d73dafadf53a1969177c844e156270","modified":1580313707569},{"_id":"public/page/2/index.html","hash":"9808bca6ff605b592e9b8284783139f95346f924","modified":1580313707569},{"_id":"public/page/3/index.html","hash":"ba57d9019476874b3c6551f104ae6c848c20dc5f","modified":1580313707569},{"_id":"public/tags/Algorithm/index.html","hash":"e7e90ad3b6a53073656d9ddabd310dac3357686a","modified":1580313707569},{"_id":"public/tags/C/index.html","hash":"1d6b012b9293a839fc2c537025d54b976a45c2f7","modified":1580313707569},{"_id":"public/tags/Multithreading/index.html","hash":"6e85908645c1f047b32238ebcde010d5c0a0c18a","modified":1580313707569},{"_id":"public/tags/gcc/index.html","hash":"dd852e80f128953a990c9f667e6dd875ddbef379","modified":1580313707569},{"_id":"public/tags/g/index.html","hash":"f80b4a939962c6aae01256b11061a7f3982088ad","modified":1580313707569},{"_id":"public/tags/Linux/index.html","hash":"6c7ae1a602b7ee93f4bf26d20d018b0722c576af","modified":1580313707569},{"_id":"public/tags/Visual-Studio/index.html","hash":"896eaa6582b6fc5c297d551ded6c80defd57db0c","modified":1580313707569},{"_id":"public/tags/Windows/index.html","hash":"7d5ec6ebbfa62d44e5b42223cc1b2a60f25c7d1a","modified":1580313707569},{"_id":"public/tags/LeetCode/index.html","hash":"37bcc62f3f09dc44cd020d5678260be9a55bf8d7","modified":1580313707569},{"_id":"public/tags/Debian/index.html","hash":"0c7925dbe9aa686482c6ade2cc7990ad03e9ed76","modified":1580313707569},{"_id":"public/tags/Network/index.html","hash":"99f0b0cdb50a4c1fca95a4b089efc72ef85f78eb","modified":1580313707569},{"_id":"public/tags/Virtual-Box/index.html","hash":"dd0ddf96cc1e81198f5542f1869c516d99babbc5","modified":1580313707569},{"_id":"public/tags/bash/index.html","hash":"3a5e4b665824601d7a776cb47d89b1ec0595606f","modified":1580313707569},{"_id":"public/tags/shell/index.html","hash":"7cdf2f438c35caed33a72a8a2566013e26ec096c","modified":1580313707569},{"_id":"public/tags/Latex/index.html","hash":"00a816cbdfeffbd3102bccae81251aafd68a727d","modified":1580313707569},{"_id":"public/tags/VSCode/index.html","hash":"1028fd307e042114bf35029e9e4f2acf1e6ef38d","modified":1580313707569},{"_id":"public/tags/Tool/index.html","hash":"21803af1053e435e4e35c3b43d6dc4d442c49ab3","modified":1580313707569},{"_id":"public/tags/Git/index.html","hash":"bfa98ec2c693100a969879bdb6ee2b5bf044820f","modified":1580313707569},{"_id":"public/tags/github/index.html","hash":"0c504c4e98f268da835071752b53b9fcbf8680ee","modified":1580313707569},{"_id":"public/tags/hexo/index.html","hash":"8a712aaca815a4c37efdaee998e176ca2eddf749","modified":1580313707569},{"_id":"public/tags/Next/index.html","hash":"28f34ba1437297cbd58a247984d128383fa4b816","modified":1580313707569},{"_id":"public/tags/Node-js/index.html","hash":"096e052e78b77737f81ab04d5ef909f0805daed8","modified":1580313707569},{"_id":"public/tags/Regular-Expression/index.html","hash":"f6b762a98502334031decd8b80080e50479929ed","modified":1580313707569},{"_id":"public/tags/Shadowsocks/index.html","hash":"a58c6e7051d276c11c7b877bfec308cbad45795d","modified":1580313707569},{"_id":"public/README.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580313707569},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1580313707569},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1580313707569},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1580313707569},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1580313707569},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1580313707569},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1580313707569},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1580313707569},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1580313707569},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1580313707569},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1580313707569},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1580313707569},{"_id":"public/images/favicon-16x16.png","hash":"ae9a3aac9027f40ac7639dde8373485346b9afda","modified":1580313707569},{"_id":"public/images/favicon-32x32.png","hash":"873aa11f6e456794fec7deeb240a993c50e86d99","modified":1580313707569},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1580313707569},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1580313707569},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1580313707569},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1580313707569},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1580313707569},{"_id":"public/2019/12/26/C++ 静态和动态链接库/create static library.jpg","hash":"2d3a198dfb383605f3e608c25aa29a0aaee10d3a","modified":1580313707569},{"_id":"public/2020/01/08/Linux bash&shell/pipe.jpg","hash":"7da99a51a07709adbdae61cf9aba750233b5841a","modified":1580313707569},{"_id":"public/2020/01/08/Linux bash&shell/数据流重导向.jpg","hash":"15913b5bb30ea648a721d14defbc01d38e8a5a41","modified":1580313707569},{"_id":"public/2019/12/25/Linux Debian10网络配置/adapter1.jpg","hash":"df738709e10847e2432b564739a64e4656210b4e","modified":1580313707569},{"_id":"public/2019/12/25/Linux Debian10网络配置/adapter2.jpg","hash":"b18eb310e04ce8d537457f6b72c97280017da0e3","modified":1580313707569},{"_id":"public/2019/12/25/Linux Debian10网络配置/config.jpg","hash":"4369d0adce5aa9df985e1065fe025e50b465e561","modified":1580313707569},{"_id":"public/2019/12/25/Linux Debian10网络配置/ipaddr.jpg","hash":"f7e35427ec7aa88f2aa8bf1b583c25820e613117","modified":1580313707569},{"_id":"public/2019/12/25/Linux 文件系统/tree.png","hash":"102881bde044a20fbeabe1dc1fdc1b818792676d","modified":1580313707569},{"_id":"public/2019/12/25/Linux 文件系统/文件属性.jpg","hash":"506f40407d023a9c8242221425b0bcb2dad6206e","modified":1580313707569},{"_id":"public/2019/12/25/Linux 文件系统/目录分类.jpg","hash":"0889a7cfcbbf464fc1ab42d7be1b1adb16e6d257","modified":1580313707569},{"_id":"public/2019/12/25/Linux 文件系统/顺序式.jpg","hash":"d6524ec98af0ea800e8f516009df631fc0eec7d7","modified":1580313707569},{"_id":"public/2019/12/26/Tool git/1checkinsOverTime.png","hash":"763aba1b1a7a2c99593984efcefa583d36d22f34","modified":1580313707569},{"_id":"public/2019/12/26/Tool git/2status.png","hash":"a990ceb4480c54a2f1b6fd9c7e2c0669bd59fbf4","modified":1580313707569},{"_id":"public/2019/12/26/Tool git/3lifecycle.png","hash":"4e259bf41d408d7e8b749d6a53cb41abbc16e88b","modified":1580313707569},{"_id":"public/2019/12/26/Tool git/branch-and-history.png","hash":"003902474161650bcc984fa3965bfeba20398634","modified":1580313707569},{"_id":"public/2019/12/26/Tool git/ssh-keys.png","hash":"ba2a0eb37836daefbf394479ffea092e51a69c22","modified":1580313707569},{"_id":"public/images/avatar.jpg","hash":"f409ff53ef1d250a50561c90a5d3d0dafd934a4c","modified":1580313707569},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1580313707569},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1580313707569},{"_id":"public/2019/12/27/Tool VSCode+Latex/settings.jpg","hash":"ab07f67ea3acb3e22e611fa1067026c6433be9c3","modified":1580313707569},{"_id":"public/2020/01/18/Algorithm 字符串匹配KMP/kmp.jpg","hash":"9139ca9f71a252b09682e310fb31bacb68359dd8","modified":1580313707569},{"_id":"public/2020/01/18/Algorithm 字符串匹配KMP/next.png","hash":"bd0f385e17d37c81d10566b6e392d753c5f569e9","modified":1580313707569},{"_id":"public/2019/12/25/Linux 文件系统/索引式.jpg","hash":"d988e70d4118f1feb554adf34f48352a54e83e4c","modified":1580313707569},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1580313707569},{"_id":"public/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1580313707569},{"_id":"public/js/fireworks.js","hash":"8075c699509e56f54d922c6bb771a1c3899d9329","modified":1580313707569},{"_id":"public/js/local-search.js","hash":"9f3d3ddff86e7b2828772aba915a5ebfd7d9f55f","modified":1580313707569},{"_id":"public/js/motion.js","hash":"09f8be6bcc6920546bb06e3f8c0181ec62c70b90","modified":1580313707569},{"_id":"public/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1580313707569},{"_id":"public/js/utils.js","hash":"41fa3f7cc18e028263b6fa524a3a95fc93b1b81e","modified":1580313707569},{"_id":"public/js/schemes/muse.js","hash":"792f4522a3b0b96584a041a4aca20fcded410079","modified":1580313707569},{"_id":"public/js/schemes/pisces.js","hash":"52d139e6f3bc212c8c9b71bc9e57e931920434a6","modified":1580313707569},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1580313707569},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1580313707569},{"_id":"public/css/main.css","hash":"97120b61614c395933f7af9f0b1d5e74f47f6832","modified":1580313707569},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1580313707569},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1580313707569},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1580313707569},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1580313707569},{"_id":"public/images/wechatpay.jpg","hash":"73a408ba89a6f7bb65c540b34a44dfa374a26c72","modified":1580313707569},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1580313707569},{"_id":"public/images/favicon_io.zip","hash":"6248f56b963998e7047bc0b5f833fdc04d72f8d0","modified":1580313707569}],"Category":[{"name":"Algorithm","_id":"ck5zhz9oj0003mou599tmhcsv"},{"name":"C++","_id":"ck5zhz9ox000dmou5e0b59vsr"},{"name":"Linux","_id":"ck5zhz9pa0014mou5elz3cwqc"},{"name":"Tool","_id":"ck5zhz9pi001lmou56lribown"},{"name":"Network","_id":"ck5zhz9pk001rmou5bt0wbuaf"}],"Data":[{"_id":"styles","data":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}],"Page":[{"title":"404","date":"2019-12-25T22:40:25.000Z","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2019-12-25 17:40:25\n---\n","updated":"2019-12-25T22:40:25.411Z","path":"404/index.html","comments":1,"layout":"page","_id":"ck5zhz9o80000mou53th86ksa","content":"","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":0,"excerpt":"","more":""},{"title":"About","date":"2019-12-25T20:48:19.000Z","type":"about","comments":0,"_content":"\n```text\n,-.----.                            ,-.                     .---.                    \n\\    /  \\    ,--,               ,--/ /|                    /. ./|            ,--,    \n;   :    \\ ,--.'|             ,--. :/ |                .--'.  ' ;          ,--.'|    \n|   | .\\ : |  |,              :  : ' /                /__./ \\ : |          |  |,     \n.   : |: | `--'_       ,---.  |  '  /        .--, .--'.  '   \\' .   ,---.  `--'_     \n|   |  \\ : ,' ,'|     /     \\ '  |  :      /_ ./|/___/ \\ |    ' '  /     \\ ,' ,'|    \n|   : .  / '  | |    /    / ' |  |   \\  , ' , ' :;   \\  \\;      : /    /  |'  | |    \n;   | |  \\ |  | :   .    ' /  '  : |. \\/___/ \\: | \\   ;  `      |.    ' / ||  | :    \n|   | ;\\  \\'  : |__ '   ; :__ |  | ' \\ \\.  \\  ' |  .   \\    .\\  ;'   ;   /|'  : |__  \n:   ' | \\.'|  | '.'|'   | '.'|'  : |--'  \\  ;   :   \\   \\   ' \\ |'   |  / ||  | '.'| \n:   : :-'  ;  :    ;|   :    :;  |,'      \\  \\  ;    :   '  |--\" |   :    |;  :    ; \n|   |.'    |  ,   /  \\   \\  / '--'         :  \\  \\    \\   \\ ;     \\   \\  / |  ,   /  \n`---'       ---`-'    `----'                \\  ' ;     '---\"       `----'   ---`-'   \n                                             `--`                                    \n```","source":"about/index.md","raw":"---\ntitle: About\ndate: 2019-12-25 15:48:19\ntype: about\ncomments: false\n---\n\n```text\n,-.----.                            ,-.                     .---.                    \n\\    /  \\    ,--,               ,--/ /|                    /. ./|            ,--,    \n;   :    \\ ,--.'|             ,--. :/ |                .--'.  ' ;          ,--.'|    \n|   | .\\ : |  |,              :  : ' /                /__./ \\ : |          |  |,     \n.   : |: | `--'_       ,---.  |  '  /        .--, .--'.  '   \\' .   ,---.  `--'_     \n|   |  \\ : ,' ,'|     /     \\ '  |  :      /_ ./|/___/ \\ |    ' '  /     \\ ,' ,'|    \n|   : .  / '  | |    /    / ' |  |   \\  , ' , ' :;   \\  \\;      : /    /  |'  | |    \n;   | |  \\ |  | :   .    ' /  '  : |. \\/___/ \\: | \\   ;  `      |.    ' / ||  | :    \n|   | ;\\  \\'  : |__ '   ; :__ |  | ' \\ \\.  \\  ' |  .   \\    .\\  ;'   ;   /|'  : |__  \n:   ' | \\.'|  | '.'|'   | '.'|'  : |--'  \\  ;   :   \\   \\   ' \\ |'   |  / ||  | '.'| \n:   : :-'  ;  :    ;|   :    :;  |,'      \\  \\  ;    :   '  |--\" |   :    |;  :    ; \n|   |.'    |  ,   /  \\   \\  / '--'         :  \\  \\    \\   \\ ;     \\   \\  / |  ,   /  \n`---'       ---`-'    `----'                \\  ' ;     '---\"       `----'   ---`-'   \n                                             `--`                                    \n```","updated":"2019-12-26T00:25:59.092Z","path":"about/index.html","layout":"page","_id":"ck5zhz9ra003xmou5cjhnh6gy","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">,-.----.                            ,-.                     .---.                    </span><br><span class=\"line\">\\    &#x2F;  \\    ,--,               ,--&#x2F; &#x2F;|                    &#x2F;. .&#x2F;|            ,--,    </span><br><span class=\"line\">;   :    \\ ,--.&#39;|             ,--. :&#x2F; |                .--&#39;.  &#39; ;          ,--.&#39;|    </span><br><span class=\"line\">|   | .\\ : |  |,              :  : &#39; &#x2F;                &#x2F;__.&#x2F; \\ : |          |  |,     </span><br><span class=\"line\">.   : |: | &#96;--&#39;_       ,---.  |  &#39;  &#x2F;        .--, .--&#39;.  &#39;   \\&#39; .   ,---.  &#96;--&#39;_     </span><br><span class=\"line\">|   |  \\ : ,&#39; ,&#39;|     &#x2F;     \\ &#39;  |  :      &#x2F;_ .&#x2F;|&#x2F;___&#x2F; \\ |    &#39; &#39;  &#x2F;     \\ ,&#39; ,&#39;|    </span><br><span class=\"line\">|   : .  &#x2F; &#39;  | |    &#x2F;    &#x2F; &#39; |  |   \\  , &#39; , &#39; :;   \\  \\;      : &#x2F;    &#x2F;  |&#39;  | |    </span><br><span class=\"line\">;   | |  \\ |  | :   .    &#39; &#x2F;  &#39;  : |. \\&#x2F;___&#x2F; \\: | \\   ;  &#96;      |.    &#39; &#x2F; ||  | :    </span><br><span class=\"line\">|   | ;\\  \\&#39;  : |__ &#39;   ; :__ |  | &#39; \\ \\.  \\  &#39; |  .   \\    .\\  ;&#39;   ;   &#x2F;|&#39;  : |__  </span><br><span class=\"line\">:   &#39; | \\.&#39;|  | &#39;.&#39;|&#39;   | &#39;.&#39;|&#39;  : |--&#39;  \\  ;   :   \\   \\   &#39; \\ |&#39;   |  &#x2F; ||  | &#39;.&#39;| </span><br><span class=\"line\">:   : :-&#39;  ;  :    ;|   :    :;  |,&#39;      \\  \\  ;    :   &#39;  |--&quot; |   :    |;  :    ; </span><br><span class=\"line\">|   |.&#39;    |  ,   &#x2F;  \\   \\  &#x2F; &#39;--&#39;         :  \\  \\    \\   \\ ;     \\   \\  &#x2F; |  ,   &#x2F;  </span><br><span class=\"line\">&#96;---&#39;       ---&#96;-&#39;    &#96;----&#39;                \\  &#39; ;     &#39;---&quot;       &#96;----&#39;   ---&#96;-&#39;   </span><br><span class=\"line\">                                             &#96;--&#96;</span><br></pre></td></tr></table></figure>","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":862,"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">,-.----.                            ,-.                     .---.                    </span><br><span class=\"line\">\\    &#x2F;  \\    ,--,               ,--&#x2F; &#x2F;|                    &#x2F;. .&#x2F;|            ,--,    </span><br><span class=\"line\">;   :    \\ ,--.&#39;|             ,--. :&#x2F; |                .--&#39;.  &#39; ;          ,--.&#39;|    </span><br><span class=\"line\">|   | .\\ : |  |,              :  : &#39; &#x2F;                &#x2F;__.&#x2F; \\ : |          |  |,     </span><br><span class=\"line\">.   : |: | &#96;--&#39;_       ,---.  |  &#39;  &#x2F;        .--, .--&#39;.  &#39;   \\&#39; .   ,---.  &#96;--&#39;_     </span><br><span class=\"line\">|   |  \\ : ,&#39; ,&#39;|     &#x2F;     \\ &#39;  |  :      &#x2F;_ .&#x2F;|&#x2F;___&#x2F; \\ |    &#39; &#39;  &#x2F;     \\ ,&#39; ,&#39;|    </span><br><span class=\"line\">|   : .  &#x2F; &#39;  | |    &#x2F;    &#x2F; &#39; |  |   \\  , &#39; , &#39; :;   \\  \\;      : &#x2F;    &#x2F;  |&#39;  | |    </span><br><span class=\"line\">;   | |  \\ |  | :   .    &#39; &#x2F;  &#39;  : |. \\&#x2F;___&#x2F; \\: | \\   ;  &#96;      |.    &#39; &#x2F; ||  | :    </span><br><span class=\"line\">|   | ;\\  \\&#39;  : |__ &#39;   ; :__ |  | &#39; \\ \\.  \\  &#39; |  .   \\    .\\  ;&#39;   ;   &#x2F;|&#39;  : |__  </span><br><span class=\"line\">:   &#39; | \\.&#39;|  | &#39;.&#39;|&#39;   | &#39;.&#39;|&#39;  : |--&#39;  \\  ;   :   \\   \\   &#39; \\ |&#39;   |  &#x2F; ||  | &#39;.&#39;| </span><br><span class=\"line\">:   : :-&#39;  ;  :    ;|   :    :;  |,&#39;      \\  \\  ;    :   &#39;  |--&quot; |   :    |;  :    ; </span><br><span class=\"line\">|   |.&#39;    |  ,   &#x2F;  \\   \\  &#x2F; &#39;--&#39;         :  \\  \\    \\   \\ ;     \\   \\  &#x2F; |  ,   &#x2F;  </span><br><span class=\"line\">&#96;---&#39;       ---&#96;-&#39;    &#96;----&#39;                \\  &#39; ;     &#39;---&quot;       &#96;----&#39;   ---&#96;-&#39;   </span><br><span class=\"line\">                                             &#96;--&#96;</span><br></pre></td></tr></table></figure>"},{"title":"Categories","date":"2019-12-25T19:56:12.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: Categories\ndate: 2019-12-25 14:56:12\ntype: categories\ncomments: false\n---\n","updated":"2019-12-25T23:20:09.749Z","path":"categories/index.html","layout":"page","_id":"ck5zhz9rc003ymou54c6e8rdu","content":"","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":0,"excerpt":"","more":""},{"title":"Tags","date":"2019-12-25T19:54:45.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\ndate: 2019-12-25 14:54:45\ntype: tags\ncomments: false\n---\n","updated":"2019-12-25T23:20:19.942Z","path":"tags/index.html","layout":"page","_id":"ck5zhz9rg003zmou5702lbxwu","content":"","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"Algorithm 动态规划","date":"2020-01-03T23:55:36.000Z","update":null,"description":"dynamic programming","_content":"\n## 主要思想\n\n通过记录之前的最优结果，推导出本次最优解\n\n1. 最优子结构\n2. 重叠子问题\n\n## 线性模型\n\n状态排布为线性 `dp[i]`根据`dp[0...i-1]`得出\n\n## 区间模型\n\n区间模型的状态表示一般为`dp[i][j]`，表示区间`[i, j]`上的最优解，然后通过状态转移计算出`[i+1, j]`或者`[i, j+1]`上的最优解，逐步扩大区间的范围，最终求得`[0, n]`的最优解\n\n## 背包模型\n\n有$N$件物品和一个容量为$j$的背包，放入第$i$件物品耗费的费用是$C_{i}^{1}$\n得到的价值是$W_{i}$，求将那些物品放入背包可是总价值最大\n\n### 01 背包\n\n每种物品仅有一件，可以选择放或不放\n\n#### 基本思路\n\n用子问题定义状态：$dp[i, j]$表示将前$i$件物品恰好放入容量为$j$的背包可获得的最大价值，\n状态转移方程为\n$$\ndp[i,j]=max(dp[i-1,j],dp[i-1,j-C_i]+W_i)\n$$\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        dp[i, j] = max(dp[i - 1, j], dp[i - 1, j - c[i]] + w[i]);\n    }\n}\n```\n\n#### 初始化细节问题\n\n1. 恰好装满背包\n   - `dp[0]=0; dp[1...V]=-infinty` 开始时只有容量为0的背包处于合法状态，最大价值为0\n2. 不要求装满\n   - `dp[0...V]=0`\n\n#### 优化空间复杂度\n\n以上方法时间和空间复杂度均为$O(VN)$，时间复杂度已不能优化，空间复杂度可优化到$O(V)$\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = v; j >= c[i]; ++j) //已递减次序遍历容量，保证dp[j]的值等价于dp[i-1,j]\n    {\n        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n    }\n}\n```\n\n### 完全背包\n\n每种物品可以无限使用\n\n#### 基本思路\n\n对于每种物品，可取件数为 $0\\rightarrow V/C_i$\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        for (int k = 0; k <= v / c[i]; ++k)\n        {\n            dp[i, j] = max(dp[i, j], dp[i - 1, j - k * c[i]] + k * w[i]);\n        }\n    }\n}\n```\n\n#### 一个简单优化\n\n如果两件物品 $i,j\\rightarrow C_i\\leq C_j \\quad\\And\\And\\quad W_i\\geq W_j$ 可将物品 $j$ 丢弃不考虑\n\n#### 转化为01背包\n\n- 最直接的方法是把第 $i$ 件物品转化为 $V/C_i$ 件相等的物品\n- 更有效的方法为，将第 $i$ 件物品拆成费用为 $C_i2^k$ 价值为$W_i2^k$ 的若干件物品,\n  其中 $k$ 取遍满足 $C_i2^k\\leq V$ 的非负整数\n\n#### 优化空间复杂度\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= v; ++j) //与01背包不同，此时是递增次序，因为此时第 i 件物品可以选择多次\n    {\n        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n    }\n}\n```\n\n### 多重背包\n\n第 $i$ 件物品最多有 $M_i$ 件可选\n\n#### 基本思路\n\n第 $i$ 件物品可取 $0\\rightarrow M_i$ 件，共 $M_i+1$ 种情况\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        for (int k = 0; k <= m[i]; ++k)\n        {\n            dp[i, j] = max(dp[i, j], dp[i - 1, j - k * c[i]] + k * w[i]);\n        }\n    }\n}\n```\n\n#### 转化为01背包\n\n将物品划分为 $k$ 件，每件的系数为 $1,2,2^2,\\cdots ,M_i-2^k+1$，且 $k$ 是满足 $M_i-2^k+1>0$ 的最大整数，如 $k=13 \\rightarrow\\text{coefficient}=1,2,4,6$\n\n### 其他问题\n\n#### 二维费用\n\n对每种物品，有两种不同的费用或对物品总个数有限制\n\n```cpp\ndp[i, j, k] = max(dp[i-1,j,k],dp[i-1,v-c[i],vv-cc[i]]+w[i]);\n\ndp[j, k] = max(dp[j,k],dp[v-c[i],vv-cc[i]]+w[i]); //改善空间复杂度\n```\n\n#### 分组的背包\n\n物品被分为 $k$ 组，每组中只能选一个\n\n```cpp\nfor (vector<int> k : groups)\n{\n    for (j = v; j >= 0; --j)\n    {\n        for (int i : k) //每组中选0或1件\n        {\n            dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n        }\n    }\n}\n```\n\n#### 泛化物品\n\n泛化物品值物品价值随分配的费用变化而变化，$w=f(v)| v\\in[0,V]$\n\n给定两个泛化物品 $a$ 和 $b$\n\n$$\ndp[v]=max(f_a(k)+f_b(v-k)|0\\leq k \\leq v)\n$$\n\n#### 输出方案\n\n可以使用一般动态规划方案输出方法，记录每个状态的最优解是由哪个状态转移而来\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        if (dp[i - 1, j] >= dp[i - 1, j - c[i]] + w[i])\n        {\n            dp[i, j] = dp[i - 1, j];\n            record[i, j] = 0; //该情况下，第 i 件物品没有选\n        }\n        else\n        {\n            dp[i, j] = dp[i - 1, j - c[i]] + w[i];\n            record[i, j] = 1;\n        }\n    }\n}\n```\n\n#### 求方案总数\n\n如求装满背包或装至一定容量的方案总数\n\n$$\ndp[i,j]=sum(dp[i-1,j],dp[i,j-c[i]]) \\qquad dp[0,0]=1\n$$\n\n#### 求解第 k 优解\n\n如果要求第 $k$ 优解，那么状态 `dp[i,j]` 是一个大小为 k 的队列`dp[i,j,1...K]`，\n其中`dp[i,j,k]`表示前 i 个物品中，背包大小为 j 时，第 k 优解的值\n\n`dp[i,j]`这个有序队列由`dp[i-1,j];dp[i-1,j-c[i]]+w[i]`两个队列合并而来，合并操作为$O(K)$，\n总时间$O(NVK)$","source":"_posts/Algorithm 动态规划.md","raw":"---\ntitle: Algorithm 动态规划\ndate: 2020-01-03 18:55:36\nupdate:\ntags: [Algorithm]\ncategories: Algorithm\ndescription: dynamic programming\n---\n\n## 主要思想\n\n通过记录之前的最优结果，推导出本次最优解\n\n1. 最优子结构\n2. 重叠子问题\n\n## 线性模型\n\n状态排布为线性 `dp[i]`根据`dp[0...i-1]`得出\n\n## 区间模型\n\n区间模型的状态表示一般为`dp[i][j]`，表示区间`[i, j]`上的最优解，然后通过状态转移计算出`[i+1, j]`或者`[i, j+1]`上的最优解，逐步扩大区间的范围，最终求得`[0, n]`的最优解\n\n## 背包模型\n\n有$N$件物品和一个容量为$j$的背包，放入第$i$件物品耗费的费用是$C_{i}^{1}$\n得到的价值是$W_{i}$，求将那些物品放入背包可是总价值最大\n\n### 01 背包\n\n每种物品仅有一件，可以选择放或不放\n\n#### 基本思路\n\n用子问题定义状态：$dp[i, j]$表示将前$i$件物品恰好放入容量为$j$的背包可获得的最大价值，\n状态转移方程为\n$$\ndp[i,j]=max(dp[i-1,j],dp[i-1,j-C_i]+W_i)\n$$\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        dp[i, j] = max(dp[i - 1, j], dp[i - 1, j - c[i]] + w[i]);\n    }\n}\n```\n\n#### 初始化细节问题\n\n1. 恰好装满背包\n   - `dp[0]=0; dp[1...V]=-infinty` 开始时只有容量为0的背包处于合法状态，最大价值为0\n2. 不要求装满\n   - `dp[0...V]=0`\n\n#### 优化空间复杂度\n\n以上方法时间和空间复杂度均为$O(VN)$，时间复杂度已不能优化，空间复杂度可优化到$O(V)$\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = v; j >= c[i]; ++j) //已递减次序遍历容量，保证dp[j]的值等价于dp[i-1,j]\n    {\n        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n    }\n}\n```\n\n### 完全背包\n\n每种物品可以无限使用\n\n#### 基本思路\n\n对于每种物品，可取件数为 $0\\rightarrow V/C_i$\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        for (int k = 0; k <= v / c[i]; ++k)\n        {\n            dp[i, j] = max(dp[i, j], dp[i - 1, j - k * c[i]] + k * w[i]);\n        }\n    }\n}\n```\n\n#### 一个简单优化\n\n如果两件物品 $i,j\\rightarrow C_i\\leq C_j \\quad\\And\\And\\quad W_i\\geq W_j$ 可将物品 $j$ 丢弃不考虑\n\n#### 转化为01背包\n\n- 最直接的方法是把第 $i$ 件物品转化为 $V/C_i$ 件相等的物品\n- 更有效的方法为，将第 $i$ 件物品拆成费用为 $C_i2^k$ 价值为$W_i2^k$ 的若干件物品,\n  其中 $k$ 取遍满足 $C_i2^k\\leq V$ 的非负整数\n\n#### 优化空间复杂度\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= v; ++j) //与01背包不同，此时是递增次序，因为此时第 i 件物品可以选择多次\n    {\n        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n    }\n}\n```\n\n### 多重背包\n\n第 $i$ 件物品最多有 $M_i$ 件可选\n\n#### 基本思路\n\n第 $i$ 件物品可取 $0\\rightarrow M_i$ 件，共 $M_i+1$ 种情况\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        for (int k = 0; k <= m[i]; ++k)\n        {\n            dp[i, j] = max(dp[i, j], dp[i - 1, j - k * c[i]] + k * w[i]);\n        }\n    }\n}\n```\n\n#### 转化为01背包\n\n将物品划分为 $k$ 件，每件的系数为 $1,2,2^2,\\cdots ,M_i-2^k+1$，且 $k$ 是满足 $M_i-2^k+1>0$ 的最大整数，如 $k=13 \\rightarrow\\text{coefficient}=1,2,4,6$\n\n### 其他问题\n\n#### 二维费用\n\n对每种物品，有两种不同的费用或对物品总个数有限制\n\n```cpp\ndp[i, j, k] = max(dp[i-1,j,k],dp[i-1,v-c[i],vv-cc[i]]+w[i]);\n\ndp[j, k] = max(dp[j,k],dp[v-c[i],vv-cc[i]]+w[i]); //改善空间复杂度\n```\n\n#### 分组的背包\n\n物品被分为 $k$ 组，每组中只能选一个\n\n```cpp\nfor (vector<int> k : groups)\n{\n    for (j = v; j >= 0; --j)\n    {\n        for (int i : k) //每组中选0或1件\n        {\n            dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n        }\n    }\n}\n```\n\n#### 泛化物品\n\n泛化物品值物品价值随分配的费用变化而变化，$w=f(v)| v\\in[0,V]$\n\n给定两个泛化物品 $a$ 和 $b$\n\n$$\ndp[v]=max(f_a(k)+f_b(v-k)|0\\leq k \\leq v)\n$$\n\n#### 输出方案\n\n可以使用一般动态规划方案输出方法，记录每个状态的最优解是由哪个状态转移而来\n\n```cpp\nfor (int i = 1; i <= n; ++i)\n{\n    for (int j = c[i]; j <= j; ++j)\n    {\n        if (dp[i - 1, j] >= dp[i - 1, j - c[i]] + w[i])\n        {\n            dp[i, j] = dp[i - 1, j];\n            record[i, j] = 0; //该情况下，第 i 件物品没有选\n        }\n        else\n        {\n            dp[i, j] = dp[i - 1, j - c[i]] + w[i];\n            record[i, j] = 1;\n        }\n    }\n}\n```\n\n#### 求方案总数\n\n如求装满背包或装至一定容量的方案总数\n\n$$\ndp[i,j]=sum(dp[i-1,j],dp[i,j-c[i]]) \\qquad dp[0,0]=1\n$$\n\n#### 求解第 k 优解\n\n如果要求第 $k$ 优解，那么状态 `dp[i,j]` 是一个大小为 k 的队列`dp[i,j,1...K]`，\n其中`dp[i,j,k]`表示前 i 个物品中，背包大小为 j 时，第 k 优解的值\n\n`dp[i,j]`这个有序队列由`dp[i-1,j];dp[i-1,j-c[i]]+w[i]`两个队列合并而来，合并操作为$O(K)$，\n总时间$O(NVK)$","slug":"Algorithm 动态规划","published":1,"updated":"2020-01-18T23:42:05.739Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9od0001mou5bvcx2ah1","content":"<h2 id=\"主要思想\"><a href=\"#主要思想\" class=\"headerlink\" title=\"主要思想\"></a>主要思想</h2><p>通过记录之前的最优结果，推导出本次最优解</p>\n<ol>\n<li>最优子结构</li>\n<li>重叠子问题</li>\n</ol>\n<h2 id=\"线性模型\"><a href=\"#线性模型\" class=\"headerlink\" title=\"线性模型\"></a>线性模型</h2><p>状态排布为线性 <code>dp[i]</code>根据<code>dp[0...i-1]</code>得出</p>\n<h2 id=\"区间模型\"><a href=\"#区间模型\" class=\"headerlink\" title=\"区间模型\"></a>区间模型</h2><p>区间模型的状态表示一般为<code>dp[i][j]</code>，表示区间<code>[i, j]</code>上的最优解，然后通过状态转移计算出<code>[i+1, j]</code>或者<code>[i, j+1]</code>上的最优解，逐步扩大区间的范围，最终求得<code>[0, n]</code>的最优解</p>\n<h2 id=\"背包模型\"><a href=\"#背包模型\" class=\"headerlink\" title=\"背包模型\"></a>背包模型</h2><p>有$N$件物品和一个容量为$j$的背包，放入第$i$件物品耗费的费用是$C_{i}^{1}$<br>得到的价值是$W_{i}$，求将那些物品放入背包可是总价值最大</p>\n<h3 id=\"01-背包\"><a href=\"#01-背包\" class=\"headerlink\" title=\"01 背包\"></a>01 背包</h3><p>每种物品仅有一件，可以选择放或不放</p>\n<h4 id=\"基本思路\"><a href=\"#基本思路\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h4><p>用子问题定义状态：$dp[i, j]$表示将前$i$件物品恰好放入容量为$j$的背包可获得的最大价值，<br>状态转移方程为</p>\n<script type=\"math/tex; mode=display\">\ndp[i,j]=max(dp[i-1,j],dp[i-1,j-C_i]+W_i)</script><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dp[i, j] = max(dp[i - <span class=\"number\">1</span>, j], dp[i - <span class=\"number\">1</span>, j - c[i]] + w[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化细节问题\"><a href=\"#初始化细节问题\" class=\"headerlink\" title=\"初始化细节问题\"></a>初始化细节问题</h4><ol>\n<li>恰好装满背包<ul>\n<li><code>dp[0]=0; dp[1...V]=-infinty</code> 开始时只有容量为0的背包处于合法状态，最大价值为0</li>\n</ul>\n</li>\n<li>不要求装满<ul>\n<li><code>dp[0...V]=0</code></li>\n</ul>\n</li>\n</ol>\n<h4 id=\"优化空间复杂度\"><a href=\"#优化空间复杂度\" class=\"headerlink\" title=\"优化空间复杂度\"></a>优化空间复杂度</h4><p>以上方法时间和空间复杂度均为$O(VN)$，时间复杂度已不能优化，空间复杂度可优化到$O(V)$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = v; j &gt;= c[i]; ++j) <span class=\"comment\">//已递减次序遍历容量，保证dp[j]的值等价于dp[i-1,j]</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"完全背包\"><a href=\"#完全背包\" class=\"headerlink\" title=\"完全背包\"></a>完全背包</h3><p>每种物品可以无限使用</p>\n<h4 id=\"基本思路-1\"><a href=\"#基本思路-1\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h4><p>对于每种物品，可取件数为 $0\\rightarrow V/C_i$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= v / c[i]; ++k)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = max(dp[i, j], dp[i - <span class=\"number\">1</span>, j - k * c[i]] + k * w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"一个简单优化\"><a href=\"#一个简单优化\" class=\"headerlink\" title=\"一个简单优化\"></a>一个简单优化</h4><p>如果两件物品 $i,j\\rightarrow C_i\\leq C_j \\quad\\And\\And\\quad W_i\\geq W_j$ 可将物品 $j$ 丢弃不考虑</p>\n<h4 id=\"转化为01背包\"><a href=\"#转化为01背包\" class=\"headerlink\" title=\"转化为01背包\"></a>转化为01背包</h4><ul>\n<li>最直接的方法是把第 $i$ 件物品转化为 $V/C_i$ 件相等的物品</li>\n<li>更有效的方法为，将第 $i$ 件物品拆成费用为 $C_i2^k$ 价值为$W_i2^k$ 的若干件物品,<br>其中 $k$ 取遍满足 $C_i2^k\\leq V$ 的非负整数</li>\n</ul>\n<h4 id=\"优化空间复杂度-1\"><a href=\"#优化空间复杂度-1\" class=\"headerlink\" title=\"优化空间复杂度\"></a>优化空间复杂度</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= v; ++j) <span class=\"comment\">//与01背包不同，此时是递增次序，因为此时第 i 件物品可以选择多次</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多重背包\"><a href=\"#多重背包\" class=\"headerlink\" title=\"多重背包\"></a>多重背包</h3><p>第 $i$ 件物品最多有 $M_i$ 件可选</p>\n<h4 id=\"基本思路-2\"><a href=\"#基本思路-2\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h4><p>第 $i$ 件物品可取 $0\\rightarrow M_i$ 件，共 $M_i+1$ 种情况</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= m[i]; ++k)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = max(dp[i, j], dp[i - <span class=\"number\">1</span>, j - k * c[i]] + k * w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"转化为01背包-1\"><a href=\"#转化为01背包-1\" class=\"headerlink\" title=\"转化为01背包\"></a>转化为01背包</h4><p>将物品划分为 $k$ 件，每件的系数为 $1,2,2^2,\\cdots ,M_i-2^k+1$，且 $k$ 是满足 $M_i-2^k+1&gt;0$ 的最大整数，如 $k=13 \\rightarrow\\text{coefficient}=1,2,4,6$</p>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><h4 id=\"二维费用\"><a href=\"#二维费用\" class=\"headerlink\" title=\"二维费用\"></a>二维费用</h4><p>对每种物品，有两种不同的费用或对物品总个数有限制</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dp[i, j, k] = max(dp[i<span class=\"number\">-1</span>,j,k],dp[i<span class=\"number\">-1</span>,v-c[i],vv-cc[i]]+w[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">dp[j, k] = max(dp[j,k],dp[v-c[i],vv-cc[i]]+w[i]); <span class=\"comment\">//改善空间复杂度</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"分组的背包\"><a href=\"#分组的背包\" class=\"headerlink\" title=\"分组的背包\"></a>分组的背包</h4><p>物品被分为 $k$ 组，每组中只能选一个</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; k : groups)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = v; j &gt;= <span class=\"number\">0</span>; --j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i : k) <span class=\"comment\">//每组中选0或1件</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[j] = max(dp[j], dp[j - c[i]] + w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"泛化物品\"><a href=\"#泛化物品\" class=\"headerlink\" title=\"泛化物品\"></a>泛化物品</h4><p>泛化物品值物品价值随分配的费用变化而变化，$w=f(v)| v\\in[0,V]$</p>\n<p>给定两个泛化物品 $a$ 和 $b$</p>\n<script type=\"math/tex; mode=display\">\ndp[v]=max(f_a(k)+f_b(v-k)|0\\leq k \\leq v)</script><h4 id=\"输出方案\"><a href=\"#输出方案\" class=\"headerlink\" title=\"输出方案\"></a>输出方案</h4><p>可以使用一般动态规划方案输出方法，记录每个状态的最优解是由哪个状态转移而来</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[i - <span class=\"number\">1</span>, j] &gt;= dp[i - <span class=\"number\">1</span>, j - c[i]] + w[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = dp[i - <span class=\"number\">1</span>, j];</span><br><span class=\"line\">            record[i, j] = <span class=\"number\">0</span>; <span class=\"comment\">//该情况下，第 i 件物品没有选</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = dp[i - <span class=\"number\">1</span>, j - c[i]] + w[i];</span><br><span class=\"line\">            record[i, j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"求方案总数\"><a href=\"#求方案总数\" class=\"headerlink\" title=\"求方案总数\"></a>求方案总数</h4><p>如求装满背包或装至一定容量的方案总数</p>\n<script type=\"math/tex; mode=display\">\ndp[i,j]=sum(dp[i-1,j],dp[i,j-c[i]]) \\qquad dp[0,0]=1</script><h4 id=\"求解第-k-优解\"><a href=\"#求解第-k-优解\" class=\"headerlink\" title=\"求解第 k 优解\"></a>求解第 k 优解</h4><p>如果要求第 $k$ 优解，那么状态 <code>dp[i,j]</code> 是一个大小为 k 的队列<code>dp[i,j,1...K]</code>，<br>其中<code>dp[i,j,k]</code>表示前 i 个物品中，背包大小为 j 时，第 k 优解的值</p>\n<p><code>dp[i,j]</code>这个有序队列由<code>dp[i-1,j];dp[i-1,j-c[i]]+w[i]</code>两个队列合并而来，合并操作为$O(K)$，<br>总时间$O(NVK)$</p>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":2626,"excerpt":"","more":"<h2 id=\"主要思想\"><a href=\"#主要思想\" class=\"headerlink\" title=\"主要思想\"></a>主要思想</h2><p>通过记录之前的最优结果，推导出本次最优解</p>\n<ol>\n<li>最优子结构</li>\n<li>重叠子问题</li>\n</ol>\n<h2 id=\"线性模型\"><a href=\"#线性模型\" class=\"headerlink\" title=\"线性模型\"></a>线性模型</h2><p>状态排布为线性 <code>dp[i]</code>根据<code>dp[0...i-1]</code>得出</p>\n<h2 id=\"区间模型\"><a href=\"#区间模型\" class=\"headerlink\" title=\"区间模型\"></a>区间模型</h2><p>区间模型的状态表示一般为<code>dp[i][j]</code>，表示区间<code>[i, j]</code>上的最优解，然后通过状态转移计算出<code>[i+1, j]</code>或者<code>[i, j+1]</code>上的最优解，逐步扩大区间的范围，最终求得<code>[0, n]</code>的最优解</p>\n<h2 id=\"背包模型\"><a href=\"#背包模型\" class=\"headerlink\" title=\"背包模型\"></a>背包模型</h2><p>有$N$件物品和一个容量为$j$的背包，放入第$i$件物品耗费的费用是$C_{i}^{1}$<br>得到的价值是$W_{i}$，求将那些物品放入背包可是总价值最大</p>\n<h3 id=\"01-背包\"><a href=\"#01-背包\" class=\"headerlink\" title=\"01 背包\"></a>01 背包</h3><p>每种物品仅有一件，可以选择放或不放</p>\n<h4 id=\"基本思路\"><a href=\"#基本思路\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h4><p>用子问题定义状态：$dp[i, j]$表示将前$i$件物品恰好放入容量为$j$的背包可获得的最大价值，<br>状态转移方程为</p>\n<script type=\"math/tex; mode=display\">\ndp[i,j]=max(dp[i-1,j],dp[i-1,j-C_i]+W_i)</script><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dp[i, j] = max(dp[i - <span class=\"number\">1</span>, j], dp[i - <span class=\"number\">1</span>, j - c[i]] + w[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"初始化细节问题\"><a href=\"#初始化细节问题\" class=\"headerlink\" title=\"初始化细节问题\"></a>初始化细节问题</h4><ol>\n<li>恰好装满背包<ul>\n<li><code>dp[0]=0; dp[1...V]=-infinty</code> 开始时只有容量为0的背包处于合法状态，最大价值为0</li>\n</ul>\n</li>\n<li>不要求装满<ul>\n<li><code>dp[0...V]=0</code></li>\n</ul>\n</li>\n</ol>\n<h4 id=\"优化空间复杂度\"><a href=\"#优化空间复杂度\" class=\"headerlink\" title=\"优化空间复杂度\"></a>优化空间复杂度</h4><p>以上方法时间和空间复杂度均为$O(VN)$，时间复杂度已不能优化，空间复杂度可优化到$O(V)$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = v; j &gt;= c[i]; ++j) <span class=\"comment\">//已递减次序遍历容量，保证dp[j]的值等价于dp[i-1,j]</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"完全背包\"><a href=\"#完全背包\" class=\"headerlink\" title=\"完全背包\"></a>完全背包</h3><p>每种物品可以无限使用</p>\n<h4 id=\"基本思路-1\"><a href=\"#基本思路-1\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h4><p>对于每种物品，可取件数为 $0\\rightarrow V/C_i$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= v / c[i]; ++k)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = max(dp[i, j], dp[i - <span class=\"number\">1</span>, j - k * c[i]] + k * w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"一个简单优化\"><a href=\"#一个简单优化\" class=\"headerlink\" title=\"一个简单优化\"></a>一个简单优化</h4><p>如果两件物品 $i,j\\rightarrow C_i\\leq C_j \\quad\\And\\And\\quad W_i\\geq W_j$ 可将物品 $j$ 丢弃不考虑</p>\n<h4 id=\"转化为01背包\"><a href=\"#转化为01背包\" class=\"headerlink\" title=\"转化为01背包\"></a>转化为01背包</h4><ul>\n<li>最直接的方法是把第 $i$ 件物品转化为 $V/C_i$ 件相等的物品</li>\n<li>更有效的方法为，将第 $i$ 件物品拆成费用为 $C_i2^k$ 价值为$W_i2^k$ 的若干件物品,<br>其中 $k$ 取遍满足 $C_i2^k\\leq V$ 的非负整数</li>\n</ul>\n<h4 id=\"优化空间复杂度-1\"><a href=\"#优化空间复杂度-1\" class=\"headerlink\" title=\"优化空间复杂度\"></a>优化空间复杂度</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= v; ++j) <span class=\"comment\">//与01背包不同，此时是递增次序，因为此时第 i 件物品可以选择多次</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多重背包\"><a href=\"#多重背包\" class=\"headerlink\" title=\"多重背包\"></a>多重背包</h3><p>第 $i$ 件物品最多有 $M_i$ 件可选</p>\n<h4 id=\"基本思路-2\"><a href=\"#基本思路-2\" class=\"headerlink\" title=\"基本思路\"></a>基本思路</h4><p>第 $i$ 件物品可取 $0\\rightarrow M_i$ 件，共 $M_i+1$ 种情况</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt;= m[i]; ++k)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = max(dp[i, j], dp[i - <span class=\"number\">1</span>, j - k * c[i]] + k * w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"转化为01背包-1\"><a href=\"#转化为01背包-1\" class=\"headerlink\" title=\"转化为01背包\"></a>转化为01背包</h4><p>将物品划分为 $k$ 件，每件的系数为 $1,2,2^2,\\cdots ,M_i-2^k+1$，且 $k$ 是满足 $M_i-2^k+1&gt;0$ 的最大整数，如 $k=13 \\rightarrow\\text{coefficient}=1,2,4,6$</p>\n<h3 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h3><h4 id=\"二维费用\"><a href=\"#二维费用\" class=\"headerlink\" title=\"二维费用\"></a>二维费用</h4><p>对每种物品，有两种不同的费用或对物品总个数有限制</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dp[i, j, k] = max(dp[i<span class=\"number\">-1</span>,j,k],dp[i<span class=\"number\">-1</span>,v-c[i],vv-cc[i]]+w[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">dp[j, k] = max(dp[j,k],dp[v-c[i],vv-cc[i]]+w[i]); <span class=\"comment\">//改善空间复杂度</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"分组的背包\"><a href=\"#分组的背包\" class=\"headerlink\" title=\"分组的背包\"></a>分组的背包</h4><p>物品被分为 $k$ 组，每组中只能选一个</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; k : groups)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = v; j &gt;= <span class=\"number\">0</span>; --j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i : k) <span class=\"comment\">//每组中选0或1件</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[j] = max(dp[j], dp[j - c[i]] + w[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"泛化物品\"><a href=\"#泛化物品\" class=\"headerlink\" title=\"泛化物品\"></a>泛化物品</h4><p>泛化物品值物品价值随分配的费用变化而变化，$w=f(v)| v\\in[0,V]$</p>\n<p>给定两个泛化物品 $a$ 和 $b$</p>\n<script type=\"math/tex; mode=display\">\ndp[v]=max(f_a(k)+f_b(v-k)|0\\leq k \\leq v)</script><h4 id=\"输出方案\"><a href=\"#输出方案\" class=\"headerlink\" title=\"输出方案\"></a>输出方案</h4><p>可以使用一般动态规划方案输出方法，记录每个状态的最优解是由哪个状态转移而来</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = c[i]; j &lt;= j; ++j)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dp[i - <span class=\"number\">1</span>, j] &gt;= dp[i - <span class=\"number\">1</span>, j - c[i]] + w[i])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = dp[i - <span class=\"number\">1</span>, j];</span><br><span class=\"line\">            record[i, j] = <span class=\"number\">0</span>; <span class=\"comment\">//该情况下，第 i 件物品没有选</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dp[i, j] = dp[i - <span class=\"number\">1</span>, j - c[i]] + w[i];</span><br><span class=\"line\">            record[i, j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"求方案总数\"><a href=\"#求方案总数\" class=\"headerlink\" title=\"求方案总数\"></a>求方案总数</h4><p>如求装满背包或装至一定容量的方案总数</p>\n<script type=\"math/tex; mode=display\">\ndp[i,j]=sum(dp[i-1,j],dp[i,j-c[i]]) \\qquad dp[0,0]=1</script><h4 id=\"求解第-k-优解\"><a href=\"#求解第-k-优解\" class=\"headerlink\" title=\"求解第 k 优解\"></a>求解第 k 优解</h4><p>如果要求第 $k$ 优解，那么状态 <code>dp[i,j]</code> 是一个大小为 k 的队列<code>dp[i,j,1...K]</code>，<br>其中<code>dp[i,j,k]</code>表示前 i 个物品中，背包大小为 j 时，第 k 优解的值</p>\n<p><code>dp[i,j]</code>这个有序队列由<code>dp[i-1,j];dp[i-1,j-c[i]]+w[i]</code>两个队列合并而来，合并操作为$O(K)$，<br>总时间$O(NVK)$</p>\n"},{"title":"Algorithm 字符串匹配KMP","date":"2020-01-18T19:39:14.000Z","update":null,"description":"KMP","_content":"\n## 暴力匹配方法\n\n时间复杂度为 $O(mn)$\n\n```cpp\nint find(string s, string p)\n{\n    int m = s.length(), n = p.length();\n    for (int i = 0; i <= m - n; ++i)\n    {\n        if (s[i] == p[0])\n        {\n            for (int j = 0; j < n; ++j)\n            {\n                if (s[i + j] != p[j])\n                {\n                    break;\n                }\n                if (j == n - 1)\n                {\n                    return i;\n                }\n            }\n        }\n    }\n    return -1;\n}\n```\n\n## KMP\n\nKMP算法作用在于在某处匹配失败时，不必使下标 $i,j$ 完全回溯，减少比必要的匹配\n\nKMP的部分匹配表**PMT**的值是字符串的前缀集合与后缀集合的交集中最长元素的长度,\n同时匹配失败时，根据前缀和后缀的共有长度进行移动\n\n1. “a” 的前缀为空，后缀为空，共有长度为0\n2. “ab“的前缀为[a]，后缀为[b]，共有长度为0\n3. “aba“的前缀为[a,ab]，后缀为[a,ba]，共有长度为1\n4. “abab“的前缀为[a,ab,aba]，后缀为[b,ab,bab]，共有长度为2\n\n| char  | a   | b   | a   | b   | a   | b   | c   | a   |\n| ----- | --- | --- | --- | --- | --- | --- | --- | --- |\n| index | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   |\n| pmt   | 0   | 0   | 1   | 2   | 3   | 4   | 0   | 1   |\n\n为了编程方便，使用next数组替换PMT，就是将PMT表向右偏移一位，第0位的值设为-1\n\n1. next[i] 表示子串 p[0,i) 的前后缀最大共有长度\n2. next[0] 的前缀和后缀的共有长度=-1 （可理解为因为此时没有前缀和后缀）\n3. next[1] 代表 p[0,1) 的前缀和后缀共有长度=0\n4. next[2] 代表 p[0,2) 的前缀和后缀共有长度=1\n\n| char  | a   | b   | a   | b   | a   | b   | c   | a   |\n| ----- | --- | --- | --- | --- | --- | --- | --- | --- |\n| index | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   |\n| pmt   | 0   | 0   | 1   | 2   | 3   | 4   | 0   | 1   |\n| next  | -1  | 0   | 0   | 1   | 2   | 3   | 4   | 0   |\n\n求next数组的方法为，从模式串的下标为1处开始对自身进行匹配，next值为能匹配的最长长度\n\n![next](https://s2.ax1x.com/2020/01/19/19dtns.png)\n\n```cpp\nvoid getnext(string p, int next[])\n{\n    next[0] = -1;\n    int i = 0, j = -1, m = p.length();\n    while (i < m)\n    {\n        if (j == -1 || p[i] == p[j])\n        {\n            next[++i] = ++j;\n        }\n        else\n        {\n            j = next[j];\n        }\n    }\n}\n```\n\nKMP的核心便是通过next数组，和之前的匹配避免不必要的匹配\n\n![KMP](https://s2.ax1x.com/2020/01/19/19dV6H.jpg)\n\n当在 i=6 匹配失败时，不将 j 回溯为 0，而是 `j = next[j]`，\n这样移动后，j 之前的子串的后缀和跟他相等的前缀继续匹配\n\n时间复杂度为 $O(m+n)$\n\n```cpp\nint kmp(string s, string p, int next[])\n{\n    int i = 0, j = 0, m = s.length(), n = p.length();\n    while (i < m && j < n)\n    {\n        if (j == -1 || s[i] == p[j])\n        {\n            ++i, ++j;\n        }\n        else\n        {\n            j = next[j];\n        }\n    }\n    if (j == n)\n    {\n        return i - j;\n    }\n    return -1;\n}\n```\n","source":"_posts/Algorithm 字符串匹配KMP.md","raw":"---\ntitle: Algorithm 字符串匹配KMP\ndate: 2020-01-18 14:39:14\nupdate:\ntags: [Algorithm]\ncategories: Algorithm\ndescription: KMP\n---\n\n## 暴力匹配方法\n\n时间复杂度为 $O(mn)$\n\n```cpp\nint find(string s, string p)\n{\n    int m = s.length(), n = p.length();\n    for (int i = 0; i <= m - n; ++i)\n    {\n        if (s[i] == p[0])\n        {\n            for (int j = 0; j < n; ++j)\n            {\n                if (s[i + j] != p[j])\n                {\n                    break;\n                }\n                if (j == n - 1)\n                {\n                    return i;\n                }\n            }\n        }\n    }\n    return -1;\n}\n```\n\n## KMP\n\nKMP算法作用在于在某处匹配失败时，不必使下标 $i,j$ 完全回溯，减少比必要的匹配\n\nKMP的部分匹配表**PMT**的值是字符串的前缀集合与后缀集合的交集中最长元素的长度,\n同时匹配失败时，根据前缀和后缀的共有长度进行移动\n\n1. “a” 的前缀为空，后缀为空，共有长度为0\n2. “ab“的前缀为[a]，后缀为[b]，共有长度为0\n3. “aba“的前缀为[a,ab]，后缀为[a,ba]，共有长度为1\n4. “abab“的前缀为[a,ab,aba]，后缀为[b,ab,bab]，共有长度为2\n\n| char  | a   | b   | a   | b   | a   | b   | c   | a   |\n| ----- | --- | --- | --- | --- | --- | --- | --- | --- |\n| index | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   |\n| pmt   | 0   | 0   | 1   | 2   | 3   | 4   | 0   | 1   |\n\n为了编程方便，使用next数组替换PMT，就是将PMT表向右偏移一位，第0位的值设为-1\n\n1. next[i] 表示子串 p[0,i) 的前后缀最大共有长度\n2. next[0] 的前缀和后缀的共有长度=-1 （可理解为因为此时没有前缀和后缀）\n3. next[1] 代表 p[0,1) 的前缀和后缀共有长度=0\n4. next[2] 代表 p[0,2) 的前缀和后缀共有长度=1\n\n| char  | a   | b   | a   | b   | a   | b   | c   | a   |\n| ----- | --- | --- | --- | --- | --- | --- | --- | --- |\n| index | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   |\n| pmt   | 0   | 0   | 1   | 2   | 3   | 4   | 0   | 1   |\n| next  | -1  | 0   | 0   | 1   | 2   | 3   | 4   | 0   |\n\n求next数组的方法为，从模式串的下标为1处开始对自身进行匹配，next值为能匹配的最长长度\n\n![next](https://s2.ax1x.com/2020/01/19/19dtns.png)\n\n```cpp\nvoid getnext(string p, int next[])\n{\n    next[0] = -1;\n    int i = 0, j = -1, m = p.length();\n    while (i < m)\n    {\n        if (j == -1 || p[i] == p[j])\n        {\n            next[++i] = ++j;\n        }\n        else\n        {\n            j = next[j];\n        }\n    }\n}\n```\n\nKMP的核心便是通过next数组，和之前的匹配避免不必要的匹配\n\n![KMP](https://s2.ax1x.com/2020/01/19/19dV6H.jpg)\n\n当在 i=6 匹配失败时，不将 j 回溯为 0，而是 `j = next[j]`，\n这样移动后，j 之前的子串的后缀和跟他相等的前缀继续匹配\n\n时间复杂度为 $O(m+n)$\n\n```cpp\nint kmp(string s, string p, int next[])\n{\n    int i = 0, j = 0, m = s.length(), n = p.length();\n    while (i < m && j < n)\n    {\n        if (j == -1 || s[i] == p[j])\n        {\n            ++i, ++j;\n        }\n        else\n        {\n            j = next[j];\n        }\n    }\n    if (j == n)\n    {\n        return i - j;\n    }\n    return -1;\n}\n```\n","slug":"Algorithm 字符串匹配KMP","published":1,"updated":"2020-01-18T23:36:19.074Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9oh0002mou55lrm0t3w","content":"<h2 id=\"暴力匹配方法\"><a href=\"#暴力匹配方法\" class=\"headerlink\" title=\"暴力匹配方法\"></a>暴力匹配方法</h2><p>时间复杂度为 $O(mn)$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"built_in\">string</span> s, <span class=\"built_in\">string</span> p)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = s.length(), n = p.length();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= m - n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] == p[<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; ++j)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s[i + j] != p[j])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j == n - <span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"KMP\"><a href=\"#KMP\" class=\"headerlink\" title=\"KMP\"></a>KMP</h2><p>KMP算法作用在于在某处匹配失败时，不必使下标 $i,j$ 完全回溯，减少比必要的匹配</p>\n<p>KMP的部分匹配表<strong>PMT</strong>的值是字符串的前缀集合与后缀集合的交集中最长元素的长度,<br>同时匹配失败时，根据前缀和后缀的共有长度进行移动</p>\n<ol>\n<li>“a” 的前缀为空，后缀为空，共有长度为0</li>\n<li>“ab“的前缀为[a]，后缀为[b]，共有长度为0</li>\n<li>“aba“的前缀为[a,ab]，后缀为[a,ba]，共有长度为1</li>\n<li>“abab“的前缀为[a,ab,aba]，后缀为[b,ab,bab]，共有长度为2</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>char</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>c</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n</tr>\n<tr>\n<td>pmt</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>0</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>为了编程方便，使用next数组替换PMT，就是将PMT表向右偏移一位，第0位的值设为-1</p>\n<ol>\n<li>next[i] 表示子串 p[0,i) 的前后缀最大共有长度</li>\n<li>next[0] 的前缀和后缀的共有长度=-1 （可理解为因为此时没有前缀和后缀）</li>\n<li>next[1] 代表 p[0,1) 的前缀和后缀共有长度=0</li>\n<li>next[2] 代表 p[0,2) 的前缀和后缀共有长度=1</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>char</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>c</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n</tr>\n<tr>\n<td>pmt</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>next</td>\n<td>-1</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>求next数组的方法为，从模式串的下标为1处开始对自身进行匹配，next值为能匹配的最长长度</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/19/19dtns.png\" alt=\"next\"></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getnext</span><span class=\"params\">(<span class=\"built_in\">string</span> p, <span class=\"keyword\">int</span> next[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    next[<span class=\"number\">0</span>] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">-1</span>, m = p.length();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; m)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == <span class=\"number\">-1</span> || p[i] == p[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            next[++i] = ++j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j = next[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>KMP的核心便是通过next数组，和之前的匹配避免不必要的匹配</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/19/19dV6H.jpg\" alt=\"KMP\"></p>\n<p>当在 i=6 匹配失败时，不将 j 回溯为 0，而是 <code>j = next[j]</code>，<br>这样移动后，j 之前的子串的后缀和跟他相等的前缀继续匹配</p>\n<p>时间复杂度为 $O(m+n)$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">(<span class=\"built_in\">string</span> s, <span class=\"built_in\">string</span> p, <span class=\"keyword\">int</span> next[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>, m = s.length(), n = p.length();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; m &amp;&amp; j &lt; n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == <span class=\"number\">-1</span> || s[i] == p[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ++i, ++j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j = next[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (j == n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> i - j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":1371,"excerpt":"","more":"<h2 id=\"暴力匹配方法\"><a href=\"#暴力匹配方法\" class=\"headerlink\" title=\"暴力匹配方法\"></a>暴力匹配方法</h2><p>时间复杂度为 $O(mn)$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"built_in\">string</span> s, <span class=\"built_in\">string</span> p)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = s.length(), n = p.length();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= m - n; ++i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] == p[<span class=\"number\">0</span>])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; ++j)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s[i + j] != p[j])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (j == n - <span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"KMP\"><a href=\"#KMP\" class=\"headerlink\" title=\"KMP\"></a>KMP</h2><p>KMP算法作用在于在某处匹配失败时，不必使下标 $i,j$ 完全回溯，减少比必要的匹配</p>\n<p>KMP的部分匹配表<strong>PMT</strong>的值是字符串的前缀集合与后缀集合的交集中最长元素的长度,<br>同时匹配失败时，根据前缀和后缀的共有长度进行移动</p>\n<ol>\n<li>“a” 的前缀为空，后缀为空，共有长度为0</li>\n<li>“ab“的前缀为[a]，后缀为[b]，共有长度为0</li>\n<li>“aba“的前缀为[a,ab]，后缀为[a,ba]，共有长度为1</li>\n<li>“abab“的前缀为[a,ab,aba]，后缀为[b,ab,bab]，共有长度为2</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>char</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>c</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n</tr>\n<tr>\n<td>pmt</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>0</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>为了编程方便，使用next数组替换PMT，就是将PMT表向右偏移一位，第0位的值设为-1</p>\n<ol>\n<li>next[i] 表示子串 p[0,i) 的前后缀最大共有长度</li>\n<li>next[0] 的前缀和后缀的共有长度=-1 （可理解为因为此时没有前缀和后缀）</li>\n<li>next[1] 代表 p[0,1) 的前缀和后缀共有长度=0</li>\n<li>next[2] 代表 p[0,2) 的前缀和后缀共有长度=1</li>\n</ol>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>char</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>a</th>\n<th>b</th>\n<th>c</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n</tr>\n<tr>\n<td>pmt</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>next</td>\n<td>-1</td>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>求next数组的方法为，从模式串的下标为1处开始对自身进行匹配，next值为能匹配的最长长度</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/19/19dtns.png\" alt=\"next\"></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">getnext</span><span class=\"params\">(<span class=\"built_in\">string</span> p, <span class=\"keyword\">int</span> next[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    next[<span class=\"number\">0</span>] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">-1</span>, m = p.length();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; m)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == <span class=\"number\">-1</span> || p[i] == p[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            next[++i] = ++j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j = next[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>KMP的核心便是通过next数组，和之前的匹配避免不必要的匹配</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/19/19dV6H.jpg\" alt=\"KMP\"></p>\n<p>当在 i=6 匹配失败时，不将 j 回溯为 0，而是 <code>j = next[j]</code>，<br>这样移动后，j 之前的子串的后缀和跟他相等的前缀继续匹配</p>\n<p>时间复杂度为 $O(m+n)$</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">kmp</span><span class=\"params\">(<span class=\"built_in\">string</span> s, <span class=\"built_in\">string</span> p, <span class=\"keyword\">int</span> next[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>, m = s.length(), n = p.length();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; m &amp;&amp; j &lt; n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == <span class=\"number\">-1</span> || s[i] == p[j])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ++i, ++j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            j = next[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (j == n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> i - j;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Algorithm 排序","date":"2020-01-22T01:49:39.000Z","update":null,"description":null,"_content":"\n","source":"_posts/Algorithm-排序.md","raw":"---\ntitle: Algorithm 排序\ndate: 2020-01-21 20:49:39\nupdate:\ntags:\ncategories:\ndescription:\n---\n\n","slug":"Algorithm-排序","published":1,"updated":"2020-01-22T01:49:39.418Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9ol0005mou5gw0m49o9","content":"","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":0,"excerpt":"","more":""},{"title":"C++ new与malloc区别","date":"2019-12-30T01:26:15.000Z","update":null,"description":"new/delete 与 marrloc/free","_content":"\n## 本质不同\n\n1. `new/delete` 是C++操作符，需要编译器支持\n2. `malloc/free`是库函数，需要头文件支持\n\n## 参数不同\n\n1. `new` 操作符申请内存时无需指定内存块大小，编译器根据类型信息自动计算\n\n   `int *p2 = new int[length];`\n2. `malloc` 需要显示的指出所需内存大小\n\n   `int *p1 = (int *)malloc(sizeof(int) * length);`\n\n## 返回类型不同\n\n1. `new`\n   1. 成功：返回对象类型的指针，无须强制转化，是**类型安全**的操作符\n   2. 失败：抛出`bad_alloc`异常\n2. `malloc`\n   1. 成功：返回`void*`指针，需要强制类型转换\n   2. 失败：返回`NULL`\n\n## 是否调用构造函数不同\n\n1. `new`会自动调用类型的构造函数\n2. `malloc`不调用，仅分配空间\n\n## 是否能重新分配内存不同\n\n1. `new`无对应重新分配操作\n2. `malloc`分配后，可使用`relooc`重新分配内存，如果指针所指有足够的连续空间\n   直接扩大分配，返回原来的指针，若空间不够，按新指定的大小开辟空间，将原有数据拷贝到新空间中\n\n## 是否允许重载不同\n\n1. `new`可以重载\n2. `malloc`不可重载\n","source":"_posts/C++ new与malloc区别.md","raw":"---\ntitle: C++ new与malloc区别\ndate: 2019-12-29 20:26:15\nupdate:\ntags: [C,C++]\ncategories: [C++]\ndescription: new/delete 与 marrloc/free\n---\n\n## 本质不同\n\n1. `new/delete` 是C++操作符，需要编译器支持\n2. `malloc/free`是库函数，需要头文件支持\n\n## 参数不同\n\n1. `new` 操作符申请内存时无需指定内存块大小，编译器根据类型信息自动计算\n\n   `int *p2 = new int[length];`\n2. `malloc` 需要显示的指出所需内存大小\n\n   `int *p1 = (int *)malloc(sizeof(int) * length);`\n\n## 返回类型不同\n\n1. `new`\n   1. 成功：返回对象类型的指针，无须强制转化，是**类型安全**的操作符\n   2. 失败：抛出`bad_alloc`异常\n2. `malloc`\n   1. 成功：返回`void*`指针，需要强制类型转换\n   2. 失败：返回`NULL`\n\n## 是否调用构造函数不同\n\n1. `new`会自动调用类型的构造函数\n2. `malloc`不调用，仅分配空间\n\n## 是否能重新分配内存不同\n\n1. `new`无对应重新分配操作\n2. `malloc`分配后，可使用`relooc`重新分配内存，如果指针所指有足够的连续空间\n   直接扩大分配，返回原来的指针，若空间不够，按新指定的大小开辟空间，将原有数据拷贝到新空间中\n\n## 是否允许重载不同\n\n1. `new`可以重载\n2. `malloc`不可重载\n","slug":"C++ new与malloc区别","published":1,"updated":"2020-01-18T22:32:20.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9om0006mou56cjafcvx","content":"<h2 id=\"本质不同\"><a href=\"#本质不同\" class=\"headerlink\" title=\"本质不同\"></a>本质不同</h2><ol>\n<li><code>new/delete</code> 是C++操作符，需要编译器支持</li>\n<li><code>malloc/free</code>是库函数，需要头文件支持</li>\n</ol>\n<h2 id=\"参数不同\"><a href=\"#参数不同\" class=\"headerlink\" title=\"参数不同\"></a>参数不同</h2><ol>\n<li><p><code>new</code> 操作符申请内存时无需指定内存块大小，编译器根据类型信息自动计算</p>\n<p><code>int *p2 = new int[length];</code></p>\n</li>\n<li><p><code>malloc</code> 需要显示的指出所需内存大小</p>\n<p><code>int *p1 = (int *)malloc(sizeof(int) * length);</code></p>\n</li>\n</ol>\n<h2 id=\"返回类型不同\"><a href=\"#返回类型不同\" class=\"headerlink\" title=\"返回类型不同\"></a>返回类型不同</h2><ol>\n<li><code>new</code><ol>\n<li>成功：返回对象类型的指针，无须强制转化，是<strong>类型安全</strong>的操作符</li>\n<li>失败：抛出<code>bad_alloc</code>异常</li>\n</ol>\n</li>\n<li><code>malloc</code><ol>\n<li>成功：返回<code>void*</code>指针，需要强制类型转换</li>\n<li>失败：返回<code>NULL</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"是否调用构造函数不同\"><a href=\"#是否调用构造函数不同\" class=\"headerlink\" title=\"是否调用构造函数不同\"></a>是否调用构造函数不同</h2><ol>\n<li><code>new</code>会自动调用类型的构造函数</li>\n<li><code>malloc</code>不调用，仅分配空间</li>\n</ol>\n<h2 id=\"是否能重新分配内存不同\"><a href=\"#是否能重新分配内存不同\" class=\"headerlink\" title=\"是否能重新分配内存不同\"></a>是否能重新分配内存不同</h2><ol>\n<li><code>new</code>无对应重新分配操作</li>\n<li><code>malloc</code>分配后，可使用<code>relooc</code>重新分配内存，如果指针所指有足够的连续空间<br>直接扩大分配，返回原来的指针，若空间不够，按新指定的大小开辟空间，将原有数据拷贝到新空间中</li>\n</ol>\n<h2 id=\"是否允许重载不同\"><a href=\"#是否允许重载不同\" class=\"headerlink\" title=\"是否允许重载不同\"></a>是否允许重载不同</h2><ol>\n<li><code>new</code>可以重载</li>\n<li><code>malloc</code>不可重载</li>\n</ol>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":434,"excerpt":"","more":"<h2 id=\"本质不同\"><a href=\"#本质不同\" class=\"headerlink\" title=\"本质不同\"></a>本质不同</h2><ol>\n<li><code>new/delete</code> 是C++操作符，需要编译器支持</li>\n<li><code>malloc/free</code>是库函数，需要头文件支持</li>\n</ol>\n<h2 id=\"参数不同\"><a href=\"#参数不同\" class=\"headerlink\" title=\"参数不同\"></a>参数不同</h2><ol>\n<li><p><code>new</code> 操作符申请内存时无需指定内存块大小，编译器根据类型信息自动计算</p>\n<p><code>int *p2 = new int[length];</code></p>\n</li>\n<li><p><code>malloc</code> 需要显示的指出所需内存大小</p>\n<p><code>int *p1 = (int *)malloc(sizeof(int) * length);</code></p>\n</li>\n</ol>\n<h2 id=\"返回类型不同\"><a href=\"#返回类型不同\" class=\"headerlink\" title=\"返回类型不同\"></a>返回类型不同</h2><ol>\n<li><code>new</code><ol>\n<li>成功：返回对象类型的指针，无须强制转化，是<strong>类型安全</strong>的操作符</li>\n<li>失败：抛出<code>bad_alloc</code>异常</li>\n</ol>\n</li>\n<li><code>malloc</code><ol>\n<li>成功：返回<code>void*</code>指针，需要强制类型转换</li>\n<li>失败：返回<code>NULL</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"是否调用构造函数不同\"><a href=\"#是否调用构造函数不同\" class=\"headerlink\" title=\"是否调用构造函数不同\"></a>是否调用构造函数不同</h2><ol>\n<li><code>new</code>会自动调用类型的构造函数</li>\n<li><code>malloc</code>不调用，仅分配空间</li>\n</ol>\n<h2 id=\"是否能重新分配内存不同\"><a href=\"#是否能重新分配内存不同\" class=\"headerlink\" title=\"是否能重新分配内存不同\"></a>是否能重新分配内存不同</h2><ol>\n<li><code>new</code>无对应重新分配操作</li>\n<li><code>malloc</code>分配后，可使用<code>relooc</code>重新分配内存，如果指针所指有足够的连续空间<br>直接扩大分配，返回原来的指针，若空间不够，按新指定的大小开辟空间，将原有数据拷贝到新空间中</li>\n</ol>\n<h2 id=\"是否允许重载不同\"><a href=\"#是否允许重载不同\" class=\"headerlink\" title=\"是否允许重载不同\"></a>是否允许重载不同</h2><ol>\n<li><code>new</code>可以重载</li>\n<li><code>malloc</code>不可重载</li>\n</ol>\n"},{"title":"C++ Template","date":"2020-01-08T03:19:09.000Z","update":null,"description":"C++ Template and generic programming","_content":"\n## 编写类型无关的代码\n\n1. 模板中的函数参数是`const`引用\n   1. 保证函数可用于不能拷贝的类型\n2. 函数体中的条件判断仅使用`<`或`less`比较运算\n3. 尽量减少对实参类型的要求\n4. 当使用模板时，所有不依赖于模板参数的名字都必须是可见的，\n   当模板实例化时，模板的定义，包括类模板的成员的定义，也必须是可见的\n\n## 模板实参推断\n\n### 函数模板显式实参\n\n有时编译器无法推断出模板实参类型，有时用户希望控制模板实例化\n\n```cpp\ntemplate <typename T1, typename T2, typename T3>\nT1 sum(T2, T3);\n\n// T1 类型无法推断，需要显式指定\nauto ret = sum<int>(1, 2);\n\n// 显示模板实参由左至右顺序与对应的模板参数匹配，只有最右边参数的显示模板实参才可以忽略(可推断出的前提下)\n// 下面模板需显示指定所有三个模板参数\ntemplate <typename T1, typename T2, typename T3>\nT3 sum(T2, T1);\nauto ret = sum<long long, int, long>(i, lng);\n```\n\n### 尾置返回类型与类型转换\n\n```cpp\ntemplate <typename It>\nauto fcn(It beg, It end) -> decltype(*beg)\n{\n    return *beg; //返回序列中一个元素的引用\n}\n```\n\n### 从左值引用函数参数推断类型\n\n当一个函数参数是模板类型参数的一个普通（左值）引用时（T&），只能传递给它一个左值；\n实参可以是 const 类型，也可以不是，如果实参是const的，则T被推断为const类型\n\n### 从右值引用函数参数推断类型\n\n当一个函数参数是一个右值引用时（T&&），可传递给它一个右值，推断过程类似普通左值引用函数参数推断过程\n\n### 引用折叠和右值引用参数\n\n当我们将一个左值传递给函数的右值引用参数，且该右值引用只想模板类型参数（如T&&）时，编译器推断模板\n类型参数为实参的左值引用类型，当调用`template<typename T>void f(T&&); f(i)`时，编译器推断T的类型\n为`int&`而非 int\n\nT 被推断为 T& 看起来像是 f3 的函数参数应该是一个类型 int& 的右值引用，通常不能直接定义一个引用的引用\n但可以通过类型别名或模板类型参数间接定义\n\n如果我们间接创建一个引用的引用，则这些引用形成**折叠**，引用会折叠成一个普通的左值引用类型，\n只有右值引用的右值引用会折叠成右值引用\n\n`T& & / T& && / T&& & -> T&`\n\n`T&& && -> T&&`\n\n1. 如果一个函数参数是一个只想模板类型参数的右值引用，则它可以被绑定到一个左值，且\n2. 如果实参是一个左值，则推断出的模板实参类型将是一个左值引用，且函数参数将被实例化为一个（普通）\n   左值医用参数（T&）\n3. 以上两条规则暗示，可以将任意类型的实参传递给 T&& 类型的函数参数\n\n```cpp\ntemplate <typename T>\nvoid f(T &&val)\n{\n    T t = val; //当val是右值时，t是int类型\n               //当val是左值时，t是int&\n}\n```\n\n### std::move\n\n```cpp\ntemplate <typename T>\ntypename remove_reference<T>::type &&move(T &&t)\n{\n    return static_cast<typename remove_reference<T>::type &&>(t);\n}\n\nstring s1(\"hi\"), s2;\ns2 = std::move(string(\"bye\")); //正确，从一个右值移动数据\n// 推断出 T 的类型为 string\n// remove_reference 用 string 实例化\n// remove_reference<string>::type 是 string\n// move 的返回类型是 string&&\n// move 的函数参数 t 的类型为 string&&\n// string&& move(string &&t);\n\ns2 = std::move(s1); //正确，但移动后，s1的值不确定\n// 推断出 T 的类型为 string&\n// remove_reference 用 string& 实例化\n// remove_reference<string&>:: type 是 string\n// move 的返回类型仍是 string&&\n// move 的函数参数 t 实例化为 string&& 折叠为 string&\n// string&& move(string &t);\n```\n\n### 转发\n\n某些函数需要将其一个或多个实参连同类型不变地转发给其他函数，在此情况下，\n需要保持被转发实参的所有性质，包裹实参类型是否是 const 的以及实参是左值还是右值\n\n```cpp\ntemplate <typename F, typename T1, typename T2>\nvoid flip1(F f, T1 t1, T2 t2) // 不完整的转发，顶层const和引用丢失\n{\n    f(t2, t1);\n}\n\nvoid f(int v1, int &v2)\n{\n    cout << v1 << \" \" << ++v2 << endl;\n}\n\n// 使用右值引用保持实参的所有类型信息\ntemplate <typename F, typename T1, typename T2>\nvoid flip2(F f, T1 &&t1, T2 &&t2)\n{\n    f(t2, t1);\n}\n// 可工作于左值引用，但不能用于接受右值引用参数的函数\n// 因为此时传递给 g 的参数 t2 和其他任意变量一样，是左值表达式\nvoid g(int &&i, int &&j)\n{\n    cout << i << \" \" << j << endl;\n}\n\n// 使用 std::forward 保持类型信息\ntemplate <typename F, typename T1, typename T2>\nvoid flip(F f, T1 &&t1, T2 &&t2)\n{\n    f(std::forward<T2>(t2), std::forward<T1>(t1)); //forward 必须显式指定类型\n}\n```\n\n## 可变参数模板\n\n一个可变参数模板就是一个可接受可变数目参数的模板函数或模板类。\n可变数目的参数被称为**参数包**：1.模板参数包，表示0\\*个模板参数 2.函数参数包，表示0\\*个函数参数\n\n```cpp\ntemplate <typename T, typename... Args>     //Args 表示零个或多个模板类型参数\nvoid foo(const T &t, const Args &... rest); //rest 表示零个或多个函数参数\n\n//sizeof... 可产看包中元素个数\n```\n\n### 编写可变参数函数模板\n\n对于编写可变参数的函数，也可以使用`initializer_list`,但此时所有实参都具有相同的类型\n\n对于可变参数函数，通常是递归的，为了终止递归，需要定义一个非可变参数的函数\n\n```cpp\ntemplate <typename T>\nostream &print(ostream &os, const T &t)\n{\n    return os << t;\n}\n\ntemplate <typename T, typename... Args>\nostream &print(ostream &os, const T &t, const Args &... rest)\n{\n    os << t << \" \";\n    return print(os, rest...); // 递归调用\n}\n```\n\n### 包扩展\n\n```cpp\ntemplate <typename T, typename... Args>\nostream &print(ostream &os, const T &t, const Args &... rest) // 扩展 Args\n{\n    os << t << \" \";\n    return print(os, rest...); // 扩展 rest\n}\n\n// 第一个扩展操作扩展模板参数包，为 print 生成函数参数列表，\n// 将 const Arg& 引用到每个类型中\nprint(cout, i, s, 42);\n// 实例化为\nprint(ostrean &, const int &, const string &, const int &);\n// 第二个扩展操作出现在对 print 的调用中，为 print 调用生成实参列表\n\n// 还可以对每个实参调用某个函数\ntemplate <typename... Args>\nostream &errorMsg(ostream &os, const Args &... rest)\n{\n    return print(os, debug_rep(rest)...);\n}\n\nerrorMsg(cerr, e1, e2, e3);\n//==\nprint(cerr, debug_rep(e1), debug_rep(e2), debug_rep(e3));\n// print(os, debug_rep(rest...)); compile error\n```\n\n## 模板特例化\n\n在某些情况下，通用模板的定义对特定类型不合适\n\n```cpp\ntemplate <typename T>\nint compare(const T &, const T &);\n\ntemplate <size_t N, size_t M>\nint compare(const char (&)[N], const char (&)[M]);\n// 只有给compare一个字符串字面常量或数组时，编译器才会调用第二个compare\n//当传递字符指针时，会调用第一个\n\n// 此时需要模板特例化处理字符指针（而不是数组）\ntemplate <> // <>\nint compare(cosnt char *const &p1, const char *const &p2)\n{\n    return strcmp(p1, p2);\n}\n\n// 类模板特里化\nnamespace std\n{\n    template<>\n    struct hash<MyClass>\n    {\n    }\n}\n```\n","source":"_posts/C++ Template.md","raw":"---\ntitle: C++ Template\ndate: 2020-01-07 22:19:09\nupdate:\ntags: [C++]\ncategories: [C++]\ndescription: C++ Template and generic programming\n---\n\n## 编写类型无关的代码\n\n1. 模板中的函数参数是`const`引用\n   1. 保证函数可用于不能拷贝的类型\n2. 函数体中的条件判断仅使用`<`或`less`比较运算\n3. 尽量减少对实参类型的要求\n4. 当使用模板时，所有不依赖于模板参数的名字都必须是可见的，\n   当模板实例化时，模板的定义，包括类模板的成员的定义，也必须是可见的\n\n## 模板实参推断\n\n### 函数模板显式实参\n\n有时编译器无法推断出模板实参类型，有时用户希望控制模板实例化\n\n```cpp\ntemplate <typename T1, typename T2, typename T3>\nT1 sum(T2, T3);\n\n// T1 类型无法推断，需要显式指定\nauto ret = sum<int>(1, 2);\n\n// 显示模板实参由左至右顺序与对应的模板参数匹配，只有最右边参数的显示模板实参才可以忽略(可推断出的前提下)\n// 下面模板需显示指定所有三个模板参数\ntemplate <typename T1, typename T2, typename T3>\nT3 sum(T2, T1);\nauto ret = sum<long long, int, long>(i, lng);\n```\n\n### 尾置返回类型与类型转换\n\n```cpp\ntemplate <typename It>\nauto fcn(It beg, It end) -> decltype(*beg)\n{\n    return *beg; //返回序列中一个元素的引用\n}\n```\n\n### 从左值引用函数参数推断类型\n\n当一个函数参数是模板类型参数的一个普通（左值）引用时（T&），只能传递给它一个左值；\n实参可以是 const 类型，也可以不是，如果实参是const的，则T被推断为const类型\n\n### 从右值引用函数参数推断类型\n\n当一个函数参数是一个右值引用时（T&&），可传递给它一个右值，推断过程类似普通左值引用函数参数推断过程\n\n### 引用折叠和右值引用参数\n\n当我们将一个左值传递给函数的右值引用参数，且该右值引用只想模板类型参数（如T&&）时，编译器推断模板\n类型参数为实参的左值引用类型，当调用`template<typename T>void f(T&&); f(i)`时，编译器推断T的类型\n为`int&`而非 int\n\nT 被推断为 T& 看起来像是 f3 的函数参数应该是一个类型 int& 的右值引用，通常不能直接定义一个引用的引用\n但可以通过类型别名或模板类型参数间接定义\n\n如果我们间接创建一个引用的引用，则这些引用形成**折叠**，引用会折叠成一个普通的左值引用类型，\n只有右值引用的右值引用会折叠成右值引用\n\n`T& & / T& && / T&& & -> T&`\n\n`T&& && -> T&&`\n\n1. 如果一个函数参数是一个只想模板类型参数的右值引用，则它可以被绑定到一个左值，且\n2. 如果实参是一个左值，则推断出的模板实参类型将是一个左值引用，且函数参数将被实例化为一个（普通）\n   左值医用参数（T&）\n3. 以上两条规则暗示，可以将任意类型的实参传递给 T&& 类型的函数参数\n\n```cpp\ntemplate <typename T>\nvoid f(T &&val)\n{\n    T t = val; //当val是右值时，t是int类型\n               //当val是左值时，t是int&\n}\n```\n\n### std::move\n\n```cpp\ntemplate <typename T>\ntypename remove_reference<T>::type &&move(T &&t)\n{\n    return static_cast<typename remove_reference<T>::type &&>(t);\n}\n\nstring s1(\"hi\"), s2;\ns2 = std::move(string(\"bye\")); //正确，从一个右值移动数据\n// 推断出 T 的类型为 string\n// remove_reference 用 string 实例化\n// remove_reference<string>::type 是 string\n// move 的返回类型是 string&&\n// move 的函数参数 t 的类型为 string&&\n// string&& move(string &&t);\n\ns2 = std::move(s1); //正确，但移动后，s1的值不确定\n// 推断出 T 的类型为 string&\n// remove_reference 用 string& 实例化\n// remove_reference<string&>:: type 是 string\n// move 的返回类型仍是 string&&\n// move 的函数参数 t 实例化为 string&& 折叠为 string&\n// string&& move(string &t);\n```\n\n### 转发\n\n某些函数需要将其一个或多个实参连同类型不变地转发给其他函数，在此情况下，\n需要保持被转发实参的所有性质，包裹实参类型是否是 const 的以及实参是左值还是右值\n\n```cpp\ntemplate <typename F, typename T1, typename T2>\nvoid flip1(F f, T1 t1, T2 t2) // 不完整的转发，顶层const和引用丢失\n{\n    f(t2, t1);\n}\n\nvoid f(int v1, int &v2)\n{\n    cout << v1 << \" \" << ++v2 << endl;\n}\n\n// 使用右值引用保持实参的所有类型信息\ntemplate <typename F, typename T1, typename T2>\nvoid flip2(F f, T1 &&t1, T2 &&t2)\n{\n    f(t2, t1);\n}\n// 可工作于左值引用，但不能用于接受右值引用参数的函数\n// 因为此时传递给 g 的参数 t2 和其他任意变量一样，是左值表达式\nvoid g(int &&i, int &&j)\n{\n    cout << i << \" \" << j << endl;\n}\n\n// 使用 std::forward 保持类型信息\ntemplate <typename F, typename T1, typename T2>\nvoid flip(F f, T1 &&t1, T2 &&t2)\n{\n    f(std::forward<T2>(t2), std::forward<T1>(t1)); //forward 必须显式指定类型\n}\n```\n\n## 可变参数模板\n\n一个可变参数模板就是一个可接受可变数目参数的模板函数或模板类。\n可变数目的参数被称为**参数包**：1.模板参数包，表示0\\*个模板参数 2.函数参数包，表示0\\*个函数参数\n\n```cpp\ntemplate <typename T, typename... Args>     //Args 表示零个或多个模板类型参数\nvoid foo(const T &t, const Args &... rest); //rest 表示零个或多个函数参数\n\n//sizeof... 可产看包中元素个数\n```\n\n### 编写可变参数函数模板\n\n对于编写可变参数的函数，也可以使用`initializer_list`,但此时所有实参都具有相同的类型\n\n对于可变参数函数，通常是递归的，为了终止递归，需要定义一个非可变参数的函数\n\n```cpp\ntemplate <typename T>\nostream &print(ostream &os, const T &t)\n{\n    return os << t;\n}\n\ntemplate <typename T, typename... Args>\nostream &print(ostream &os, const T &t, const Args &... rest)\n{\n    os << t << \" \";\n    return print(os, rest...); // 递归调用\n}\n```\n\n### 包扩展\n\n```cpp\ntemplate <typename T, typename... Args>\nostream &print(ostream &os, const T &t, const Args &... rest) // 扩展 Args\n{\n    os << t << \" \";\n    return print(os, rest...); // 扩展 rest\n}\n\n// 第一个扩展操作扩展模板参数包，为 print 生成函数参数列表，\n// 将 const Arg& 引用到每个类型中\nprint(cout, i, s, 42);\n// 实例化为\nprint(ostrean &, const int &, const string &, const int &);\n// 第二个扩展操作出现在对 print 的调用中，为 print 调用生成实参列表\n\n// 还可以对每个实参调用某个函数\ntemplate <typename... Args>\nostream &errorMsg(ostream &os, const Args &... rest)\n{\n    return print(os, debug_rep(rest)...);\n}\n\nerrorMsg(cerr, e1, e2, e3);\n//==\nprint(cerr, debug_rep(e1), debug_rep(e2), debug_rep(e3));\n// print(os, debug_rep(rest...)); compile error\n```\n\n## 模板特例化\n\n在某些情况下，通用模板的定义对特定类型不合适\n\n```cpp\ntemplate <typename T>\nint compare(const T &, const T &);\n\ntemplate <size_t N, size_t M>\nint compare(const char (&)[N], const char (&)[M]);\n// 只有给compare一个字符串字面常量或数组时，编译器才会调用第二个compare\n//当传递字符指针时，会调用第一个\n\n// 此时需要模板特例化处理字符指针（而不是数组）\ntemplate <> // <>\nint compare(cosnt char *const &p1, const char *const &p2)\n{\n    return strcmp(p1, p2);\n}\n\n// 类模板特里化\nnamespace std\n{\n    template<>\n    struct hash<MyClass>\n    {\n    }\n}\n```\n","slug":"C++ Template","published":1,"updated":"2020-01-18T22:32:08.058Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9oo0007mou54klj7lai","content":"<h2 id=\"编写类型无关的代码\"><a href=\"#编写类型无关的代码\" class=\"headerlink\" title=\"编写类型无关的代码\"></a>编写类型无关的代码</h2><ol>\n<li>模板中的函数参数是<code>const</code>引用<ol>\n<li>保证函数可用于不能拷贝的类型</li>\n</ol>\n</li>\n<li>函数体中的条件判断仅使用<code>&lt;</code>或<code>less</code>比较运算</li>\n<li>尽量减少对实参类型的要求</li>\n<li>当使用模板时，所有不依赖于模板参数的名字都必须是可见的，<br>当模板实例化时，模板的定义，包括类模板的成员的定义，也必须是可见的</li>\n</ol>\n<h2 id=\"模板实参推断\"><a href=\"#模板实参推断\" class=\"headerlink\" title=\"模板实参推断\"></a>模板实参推断</h2><h3 id=\"函数模板显式实参\"><a href=\"#函数模板显式实参\" class=\"headerlink\" title=\"函数模板显式实参\"></a>函数模板显式实参</h3><p>有时编译器无法推断出模板实参类型，有时用户希望控制模板实例化</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2, <span class=\"keyword\">typename</span> T3&gt;</span><br><span class=\"line\"><span class=\"function\">T1 <span class=\"title\">sum</span><span class=\"params\">(T2, T3)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// T1 类型无法推断，需要显式指定</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> ret = sum&lt;<span class=\"keyword\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 显示模板实参由左至右顺序与对应的模板参数匹配，只有最右边参数的显示模板实参才可以忽略(可推断出的前提下)</span></span><br><span class=\"line\"><span class=\"comment\">// 下面模板需显示指定所有三个模板参数</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2, <span class=\"keyword\">typename</span> T3&gt;</span><br><span class=\"line\"><span class=\"function\">T3 <span class=\"title\">sum</span><span class=\"params\">(T2, T1)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> ret = sum&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">long</span>&gt;(i, lng);</span><br></pre></td></tr></table></figure>\n<h3 id=\"尾置返回类型与类型转换\"><a href=\"#尾置返回类型与类型转换\" class=\"headerlink\" title=\"尾置返回类型与类型转换\"></a>尾置返回类型与类型转换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> It&gt;</span><br><span class=\"line\">auto fcn(It beg, It end) -&gt; decltype(*beg)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *beg; <span class=\"comment\">//返回序列中一个元素的引用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"从左值引用函数参数推断类型\"><a href=\"#从左值引用函数参数推断类型\" class=\"headerlink\" title=\"从左值引用函数参数推断类型\"></a>从左值引用函数参数推断类型</h3><p>当一个函数参数是模板类型参数的一个普通（左值）引用时（T&amp;），只能传递给它一个左值；<br>实参可以是 const 类型，也可以不是，如果实参是const的，则T被推断为const类型</p>\n<h3 id=\"从右值引用函数参数推断类型\"><a href=\"#从右值引用函数参数推断类型\" class=\"headerlink\" title=\"从右值引用函数参数推断类型\"></a>从右值引用函数参数推断类型</h3><p>当一个函数参数是一个右值引用时（T&amp;&amp;），可传递给它一个右值，推断过程类似普通左值引用函数参数推断过程</p>\n<h3 id=\"引用折叠和右值引用参数\"><a href=\"#引用折叠和右值引用参数\" class=\"headerlink\" title=\"引用折叠和右值引用参数\"></a>引用折叠和右值引用参数</h3><p>当我们将一个左值传递给函数的右值引用参数，且该右值引用只想模板类型参数（如T&amp;&amp;）时，编译器推断模板<br>类型参数为实参的左值引用类型，当调用<code>template&lt;typename T&gt;void f(T&amp;&amp;); f(i)</code>时，编译器推断T的类型<br>为<code>int&amp;</code>而非 int</p>\n<p>T 被推断为 T&amp; 看起来像是 f3 的函数参数应该是一个类型 int&amp; 的右值引用，通常不能直接定义一个引用的引用<br>但可以通过类型别名或模板类型参数间接定义</p>\n<p>如果我们间接创建一个引用的引用，则这些引用形成<strong>折叠</strong>，引用会折叠成一个普通的左值引用类型，<br>只有右值引用的右值引用会折叠成右值引用</p>\n<p><code>T&amp; &amp; / T&amp; &amp;&amp; / T&amp;&amp; &amp; -&gt; T&amp;</code></p>\n<p><code>T&amp;&amp; &amp;&amp; -&gt; T&amp;&amp;</code></p>\n<ol>\n<li>如果一个函数参数是一个只想模板类型参数的右值引用，则它可以被绑定到一个左值，且</li>\n<li>如果实参是一个左值，则推断出的模板实参类型将是一个左值引用，且函数参数将被实例化为一个（普通）<br>左值医用参数（T&amp;）</li>\n<li>以上两条规则暗示，可以将任意类型的实参传递给 T&amp;&amp; 类型的函数参数</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">f</span><span class=\"params\">(T &amp;&amp;val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    T t = val; <span class=\"comment\">//当val是右值时，t是int类型</span></span><br><span class=\"line\">               <span class=\"comment\">//当val是左值时，t是int&amp;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"std-move\"><a href=\"#std-move\" class=\"headerlink\" title=\"std::move\"></a>std::move</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"keyword\">typename</span> remove_reference&lt;T&gt;::<span class=\"function\">type &amp;&amp;<span class=\"title\">move</span><span class=\"params\">(T &amp;&amp;t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">static_cast</span>&lt;<span class=\"keyword\">typename</span> remove_reference&lt;T&gt;::type &amp;&amp;&gt;(t);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">string s1(\"hi\"), s2;</span><br><span class=\"line\">s2 = <span class=\"built_in\">std</span>::move(<span class=\"built_in\">string</span>(<span class=\"string\">\"bye\"</span>)); <span class=\"comment\">//正确，从一个右值移动数据</span></span><br><span class=\"line\"><span class=\"comment\">// 推断出 T 的类型为 string</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference 用 string 实例化</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference&lt;string&gt;::type 是 string</span></span><br><span class=\"line\"><span class=\"comment\">// move 的返回类型是 string&amp;&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// move 的函数参数 t 的类型为 string&amp;&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// string&amp;&amp; move(string &amp;&amp;t);</span></span><br><span class=\"line\"></span><br><span class=\"line\">s2 = <span class=\"built_in\">std</span>::move(s1); <span class=\"comment\">//正确，但移动后，s1的值不确定</span></span><br><span class=\"line\"><span class=\"comment\">// 推断出 T 的类型为 string&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference 用 string&amp; 实例化</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference&lt;string&amp;&gt;:: type 是 string</span></span><br><span class=\"line\"><span class=\"comment\">// move 的返回类型仍是 string&amp;&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// move 的函数参数 t 实例化为 string&amp;&amp; 折叠为 string&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// string&amp;&amp; move(string &amp;t);</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"转发\"><a href=\"#转发\" class=\"headerlink\" title=\"转发\"></a>转发</h3><p>某些函数需要将其一个或多个实参连同类型不变地转发给其他函数，在此情况下，<br>需要保持被转发实参的所有性质，包裹实参类型是否是 const 的以及实参是左值还是右值</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> F, <span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">flip1</span><span class=\"params\">(F f, T1 t1, T2 t2)</span> <span class=\"comment\">// 不完整的转发，顶层const和引用丢失</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    f(t2, t1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> v1, <span class=\"keyword\">int</span> &amp;v2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; v1 &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; ++v2 &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用右值引用保持实参的所有类型信息</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> F, <span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">flip2</span><span class=\"params\">(F f, T1 &amp;&amp;t1, T2 &amp;&amp;t2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    f(t2, t1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 可工作于左值引用，但不能用于接受右值引用参数的函数</span></span><br><span class=\"line\"><span class=\"comment\">// 因为此时传递给 g 的参数 t2 和其他任意变量一样，是左值表达式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">g</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;&amp;i, <span class=\"keyword\">int</span> &amp;&amp;j)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; j &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 std::forward 保持类型信息</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> F, <span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">flip</span><span class=\"params\">(F f, T1 &amp;&amp;t1, T2 &amp;&amp;t2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    f(<span class=\"built_in\">std</span>::forward&lt;T2&gt;(t2), <span class=\"built_in\">std</span>::forward&lt;T1&gt;(t1)); <span class=\"comment\">//forward 必须显式指定类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"可变参数模板\"><a href=\"#可变参数模板\" class=\"headerlink\" title=\"可变参数模板\"></a>可变参数模板</h2><p>一个可变参数模板就是一个可接受可变数目参数的模板函数或模板类。<br>可变数目的参数被称为<strong>参数包</strong>：1.模板参数包，表示0*个模板参数 2.函数参数包，表示0*个函数参数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keyword\">typename</span>... Args&gt;     <span class=\"comment\">//Args 表示零个或多个模板类型参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">foo</span><span class=\"params\">(<span class=\"keyword\">const</span> T &amp;t, <span class=\"keyword\">const</span> Args &amp;... rest)</span></span>; <span class=\"comment\">//rest 表示零个或多个函数参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//sizeof... 可产看包中元素个数</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"编写可变参数函数模板\"><a href=\"#编写可变参数函数模板\" class=\"headerlink\" title=\"编写可变参数函数模板\"></a>编写可变参数函数模板</h3><p>对于编写可变参数的函数，也可以使用<code>initializer_list</code>,但此时所有实参都具有相同的类型</p>\n<p>对于可变参数函数，通常是递归的，为了终止递归，需要定义一个非可变参数的函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">print</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> T &amp;t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> os &lt;&lt; t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keyword\">typename</span>... Args&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">print</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> T &amp;t, <span class=\"keyword\">const</span> Args &amp;... rest)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    os &lt;&lt; t &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> print(os, rest...); <span class=\"comment\">// 递归调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"包扩展\"><a href=\"#包扩展\" class=\"headerlink\" title=\"包扩展\"></a>包扩展</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keyword\">typename</span>... Args&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">print</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> T &amp;t, <span class=\"keyword\">const</span> Args &amp;... rest)</span> <span class=\"comment\">// 扩展 Args</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    os &lt;&lt; t &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> print(os, rest...); <span class=\"comment\">// 扩展 rest</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第一个扩展操作扩展模板参数包，为 print 生成函数参数列表，</span></span><br><span class=\"line\"><span class=\"comment\">// 将 const Arg&amp; 引用到每个类型中</span></span><br><span class=\"line\">print(<span class=\"built_in\">cout</span>, i, s, <span class=\"number\">42</span>);</span><br><span class=\"line\"><span class=\"comment\">// 实例化为</span></span><br><span class=\"line\">print(ostrean &amp;, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> &amp;, <span class=\"keyword\">const</span> <span class=\"built_in\">string</span> &amp;, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> &amp;);</span><br><span class=\"line\"><span class=\"comment\">// 第二个扩展操作出现在对 print 的调用中，为 print 调用生成实参列表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还可以对每个实参调用某个函数</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span>... Args&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">errorMsg</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> Args &amp;... rest)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> print(os, debug_rep(rest)...);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">errorMsg(<span class=\"built_in\">cerr</span>, e1, e2, e3);</span><br><span class=\"line\"><span class=\"comment\">//==</span></span><br><span class=\"line\">print(<span class=\"built_in\">cerr</span>, debug_rep(e1), debug_rep(e2), debug_rep(e3));</span><br><span class=\"line\"><span class=\"comment\">// print(os, debug_rep(rest...)); compile error</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模板特例化\"><a href=\"#模板特例化\" class=\"headerlink\" title=\"模板特例化\"></a>模板特例化</h2><p>在某些情况下，通用模板的定义对特定类型不合适</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> T &amp;, <span class=\"keyword\">const</span> T &amp;)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">size_t</span> N, <span class=\"keyword\">size_t</span> M&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> (&amp;)[N], <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> (&amp;)[M])</span></span>;</span><br><span class=\"line\"><span class=\"comment\">// 只有给compare一个字符串字面常量或数组时，编译器才会调用第二个compare</span></span><br><span class=\"line\"><span class=\"comment\">//当传递字符指针时，会调用第一个</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 此时需要模板特例化处理字符指针（而不是数组）</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;&gt; <span class=\"comment\">// &lt;&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(cosnt <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> &amp;p1, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> &amp;p2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(p1, p2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类模板特里化</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">hash</span>&lt;MyClass&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &#123;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":4741,"excerpt":"","more":"<h2 id=\"编写类型无关的代码\"><a href=\"#编写类型无关的代码\" class=\"headerlink\" title=\"编写类型无关的代码\"></a>编写类型无关的代码</h2><ol>\n<li>模板中的函数参数是<code>const</code>引用<ol>\n<li>保证函数可用于不能拷贝的类型</li>\n</ol>\n</li>\n<li>函数体中的条件判断仅使用<code>&lt;</code>或<code>less</code>比较运算</li>\n<li>尽量减少对实参类型的要求</li>\n<li>当使用模板时，所有不依赖于模板参数的名字都必须是可见的，<br>当模板实例化时，模板的定义，包括类模板的成员的定义，也必须是可见的</li>\n</ol>\n<h2 id=\"模板实参推断\"><a href=\"#模板实参推断\" class=\"headerlink\" title=\"模板实参推断\"></a>模板实参推断</h2><h3 id=\"函数模板显式实参\"><a href=\"#函数模板显式实参\" class=\"headerlink\" title=\"函数模板显式实参\"></a>函数模板显式实参</h3><p>有时编译器无法推断出模板实参类型，有时用户希望控制模板实例化</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2, <span class=\"keyword\">typename</span> T3&gt;</span><br><span class=\"line\"><span class=\"function\">T1 <span class=\"title\">sum</span><span class=\"params\">(T2, T3)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// T1 类型无法推断，需要显式指定</span></span><br><span class=\"line\"><span class=\"keyword\">auto</span> ret = sum&lt;<span class=\"keyword\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 显示模板实参由左至右顺序与对应的模板参数匹配，只有最右边参数的显示模板实参才可以忽略(可推断出的前提下)</span></span><br><span class=\"line\"><span class=\"comment\">// 下面模板需显示指定所有三个模板参数</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2, <span class=\"keyword\">typename</span> T3&gt;</span><br><span class=\"line\"><span class=\"function\">T3 <span class=\"title\">sum</span><span class=\"params\">(T2, T1)</span></span>;</span><br><span class=\"line\"><span class=\"keyword\">auto</span> ret = sum&lt;<span class=\"keyword\">long</span> <span class=\"keyword\">long</span>, <span class=\"keyword\">int</span>, <span class=\"keyword\">long</span>&gt;(i, lng);</span><br></pre></td></tr></table></figure>\n<h3 id=\"尾置返回类型与类型转换\"><a href=\"#尾置返回类型与类型转换\" class=\"headerlink\" title=\"尾置返回类型与类型转换\"></a>尾置返回类型与类型转换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> It&gt;</span><br><span class=\"line\">auto fcn(It beg, It end) -&gt; decltype(*beg)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *beg; <span class=\"comment\">//返回序列中一个元素的引用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"从左值引用函数参数推断类型\"><a href=\"#从左值引用函数参数推断类型\" class=\"headerlink\" title=\"从左值引用函数参数推断类型\"></a>从左值引用函数参数推断类型</h3><p>当一个函数参数是模板类型参数的一个普通（左值）引用时（T&amp;），只能传递给它一个左值；<br>实参可以是 const 类型，也可以不是，如果实参是const的，则T被推断为const类型</p>\n<h3 id=\"从右值引用函数参数推断类型\"><a href=\"#从右值引用函数参数推断类型\" class=\"headerlink\" title=\"从右值引用函数参数推断类型\"></a>从右值引用函数参数推断类型</h3><p>当一个函数参数是一个右值引用时（T&amp;&amp;），可传递给它一个右值，推断过程类似普通左值引用函数参数推断过程</p>\n<h3 id=\"引用折叠和右值引用参数\"><a href=\"#引用折叠和右值引用参数\" class=\"headerlink\" title=\"引用折叠和右值引用参数\"></a>引用折叠和右值引用参数</h3><p>当我们将一个左值传递给函数的右值引用参数，且该右值引用只想模板类型参数（如T&amp;&amp;）时，编译器推断模板<br>类型参数为实参的左值引用类型，当调用<code>template&lt;typename T&gt;void f(T&amp;&amp;); f(i)</code>时，编译器推断T的类型<br>为<code>int&amp;</code>而非 int</p>\n<p>T 被推断为 T&amp; 看起来像是 f3 的函数参数应该是一个类型 int&amp; 的右值引用，通常不能直接定义一个引用的引用<br>但可以通过类型别名或模板类型参数间接定义</p>\n<p>如果我们间接创建一个引用的引用，则这些引用形成<strong>折叠</strong>，引用会折叠成一个普通的左值引用类型，<br>只有右值引用的右值引用会折叠成右值引用</p>\n<p><code>T&amp; &amp; / T&amp; &amp;&amp; / T&amp;&amp; &amp; -&gt; T&amp;</code></p>\n<p><code>T&amp;&amp; &amp;&amp; -&gt; T&amp;&amp;</code></p>\n<ol>\n<li>如果一个函数参数是一个只想模板类型参数的右值引用，则它可以被绑定到一个左值，且</li>\n<li>如果实参是一个左值，则推断出的模板实参类型将是一个左值引用，且函数参数将被实例化为一个（普通）<br>左值医用参数（T&amp;）</li>\n<li>以上两条规则暗示，可以将任意类型的实参传递给 T&amp;&amp; 类型的函数参数</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">f</span><span class=\"params\">(T &amp;&amp;val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    T t = val; <span class=\"comment\">//当val是右值时，t是int类型</span></span><br><span class=\"line\">               <span class=\"comment\">//当val是左值时，t是int&amp;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"std-move\"><a href=\"#std-move\" class=\"headerlink\" title=\"std::move\"></a>std::move</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"keyword\">typename</span> remove_reference&lt;T&gt;::<span class=\"function\">type &amp;&amp;<span class=\"title\">move</span><span class=\"params\">(T &amp;&amp;t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">static_cast</span>&lt;<span class=\"keyword\">typename</span> remove_reference&lt;T&gt;::type &amp;&amp;&gt;(t);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">string s1(\"hi\"), s2;</span><br><span class=\"line\">s2 = <span class=\"built_in\">std</span>::move(<span class=\"built_in\">string</span>(<span class=\"string\">\"bye\"</span>)); <span class=\"comment\">//正确，从一个右值移动数据</span></span><br><span class=\"line\"><span class=\"comment\">// 推断出 T 的类型为 string</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference 用 string 实例化</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference&lt;string&gt;::type 是 string</span></span><br><span class=\"line\"><span class=\"comment\">// move 的返回类型是 string&amp;&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// move 的函数参数 t 的类型为 string&amp;&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// string&amp;&amp; move(string &amp;&amp;t);</span></span><br><span class=\"line\"></span><br><span class=\"line\">s2 = <span class=\"built_in\">std</span>::move(s1); <span class=\"comment\">//正确，但移动后，s1的值不确定</span></span><br><span class=\"line\"><span class=\"comment\">// 推断出 T 的类型为 string&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference 用 string&amp; 实例化</span></span><br><span class=\"line\"><span class=\"comment\">// remove_reference&lt;string&amp;&gt;:: type 是 string</span></span><br><span class=\"line\"><span class=\"comment\">// move 的返回类型仍是 string&amp;&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// move 的函数参数 t 实例化为 string&amp;&amp; 折叠为 string&amp;</span></span><br><span class=\"line\"><span class=\"comment\">// string&amp;&amp; move(string &amp;t);</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"转发\"><a href=\"#转发\" class=\"headerlink\" title=\"转发\"></a>转发</h3><p>某些函数需要将其一个或多个实参连同类型不变地转发给其他函数，在此情况下，<br>需要保持被转发实参的所有性质，包裹实参类型是否是 const 的以及实参是左值还是右值</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> F, <span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">flip1</span><span class=\"params\">(F f, T1 t1, T2 t2)</span> <span class=\"comment\">// 不完整的转发，顶层const和引用丢失</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    f(t2, t1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> v1, <span class=\"keyword\">int</span> &amp;v2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; v1 &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; ++v2 &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用右值引用保持实参的所有类型信息</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> F, <span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">flip2</span><span class=\"params\">(F f, T1 &amp;&amp;t1, T2 &amp;&amp;t2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    f(t2, t1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 可工作于左值引用，但不能用于接受右值引用参数的函数</span></span><br><span class=\"line\"><span class=\"comment\">// 因为此时传递给 g 的参数 t2 和其他任意变量一样，是左值表达式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">g</span><span class=\"params\">(<span class=\"keyword\">int</span> &amp;&amp;i, <span class=\"keyword\">int</span> &amp;&amp;j)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; i &lt;&lt; <span class=\"string\">\" \"</span> &lt;&lt; j &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 std::forward 保持类型信息</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> F, <span class=\"keyword\">typename</span> T1, <span class=\"keyword\">typename</span> T2&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">flip</span><span class=\"params\">(F f, T1 &amp;&amp;t1, T2 &amp;&amp;t2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    f(<span class=\"built_in\">std</span>::forward&lt;T2&gt;(t2), <span class=\"built_in\">std</span>::forward&lt;T1&gt;(t1)); <span class=\"comment\">//forward 必须显式指定类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"可变参数模板\"><a href=\"#可变参数模板\" class=\"headerlink\" title=\"可变参数模板\"></a>可变参数模板</h2><p>一个可变参数模板就是一个可接受可变数目参数的模板函数或模板类。<br>可变数目的参数被称为<strong>参数包</strong>：1.模板参数包，表示0*个模板参数 2.函数参数包，表示0*个函数参数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keyword\">typename</span>... Args&gt;     <span class=\"comment\">//Args 表示零个或多个模板类型参数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">foo</span><span class=\"params\">(<span class=\"keyword\">const</span> T &amp;t, <span class=\"keyword\">const</span> Args &amp;... rest)</span></span>; <span class=\"comment\">//rest 表示零个或多个函数参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//sizeof... 可产看包中元素个数</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"编写可变参数函数模板\"><a href=\"#编写可变参数函数模板\" class=\"headerlink\" title=\"编写可变参数函数模板\"></a>编写可变参数函数模板</h3><p>对于编写可变参数的函数，也可以使用<code>initializer_list</code>,但此时所有实参都具有相同的类型</p>\n<p>对于可变参数函数，通常是递归的，为了终止递归，需要定义一个非可变参数的函数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">print</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> T &amp;t)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> os &lt;&lt; t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keyword\">typename</span>... Args&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">print</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> T &amp;t, <span class=\"keyword\">const</span> Args &amp;... rest)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    os &lt;&lt; t &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> print(os, rest...); <span class=\"comment\">// 递归调用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"包扩展\"><a href=\"#包扩展\" class=\"headerlink\" title=\"包扩展\"></a>包扩展</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T, <span class=\"keyword\">typename</span>... Args&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">print</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> T &amp;t, <span class=\"keyword\">const</span> Args &amp;... rest)</span> <span class=\"comment\">// 扩展 Args</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    os &lt;&lt; t &lt;&lt; <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> print(os, rest...); <span class=\"comment\">// 扩展 rest</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第一个扩展操作扩展模板参数包，为 print 生成函数参数列表，</span></span><br><span class=\"line\"><span class=\"comment\">// 将 const Arg&amp; 引用到每个类型中</span></span><br><span class=\"line\">print(<span class=\"built_in\">cout</span>, i, s, <span class=\"number\">42</span>);</span><br><span class=\"line\"><span class=\"comment\">// 实例化为</span></span><br><span class=\"line\">print(ostrean &amp;, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> &amp;, <span class=\"keyword\">const</span> <span class=\"built_in\">string</span> &amp;, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> &amp;);</span><br><span class=\"line\"><span class=\"comment\">// 第二个扩展操作出现在对 print 的调用中，为 print 调用生成实参列表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 还可以对每个实参调用某个函数</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span>... Args&gt;</span><br><span class=\"line\"><span class=\"function\">ostream &amp;<span class=\"title\">errorMsg</span><span class=\"params\">(ostream &amp;os, <span class=\"keyword\">const</span> Args &amp;... rest)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> print(os, debug_rep(rest)...);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">errorMsg(<span class=\"built_in\">cerr</span>, e1, e2, e3);</span><br><span class=\"line\"><span class=\"comment\">//==</span></span><br><span class=\"line\">print(<span class=\"built_in\">cerr</span>, debug_rep(e1), debug_rep(e2), debug_rep(e3));</span><br><span class=\"line\"><span class=\"comment\">// print(os, debug_rep(rest...)); compile error</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模板特例化\"><a href=\"#模板特例化\" class=\"headerlink\" title=\"模板特例化\"></a>模板特例化</h2><p>在某些情况下，通用模板的定义对特定类型不合适</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">typename</span> T&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> T &amp;, <span class=\"keyword\">const</span> T &amp;)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"keyword\">size_t</span> N, <span class=\"keyword\">size_t</span> M&gt;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> (&amp;)[N], <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> (&amp;)[M])</span></span>;</span><br><span class=\"line\"><span class=\"comment\">// 只有给compare一个字符串字面常量或数组时，编译器才会调用第二个compare</span></span><br><span class=\"line\"><span class=\"comment\">//当传递字符指针时，会调用第一个</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 此时需要模板特例化处理字符指针（而不是数组）</span></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;&gt; <span class=\"comment\">// &lt;&gt;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(cosnt <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> &amp;p1, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *<span class=\"keyword\">const</span> &amp;p2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">strcmp</span>(p1, p2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 类模板特里化</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">template</span>&lt;&gt;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">hash</span>&lt;MyClass&gt;</span></span><br><span class=\"line\"><span class=\"class\">    &#123;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"C++ 内存","date":"2019-12-30T00:27:36.000Z","update":null,"description":"C++堆、栈、自由存储区、全局/静态存储区和常量存储区","_content":"## C/C++编译的程序占用的内存分布\n\n   1. 栈区（stack）— 由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈\n   2. 堆区（heap） — 一般由程序员分配释放（malloc/free, new/delete），若程序员不释放，程序结束后可能由操作系统回收。注意它与数据结构中的堆石两回事，分配方式倒是类似与链表。其中有malloc/free分配释放的也可以叫自由存储区\n   3. 全局区（静态存储区）（static）— 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。 - 程序结束后有系统释放 （在C++中他们初始化和未初始化的共同占用一块内存区）\n   4. 文字常量区 — 常量字符串就是放在这里的。 程序结束后由系统释放\n   5. 程序代码区 — 存放函数体的二进制代码\n\n## 例子程序\n\n```cpp\n//main.cpp\nint a = 0; 全局初始化区\nchar *p1; 全局未初始化区\nmain()\n{\n   int b; //栈\n   char s[] = \"abc\"; //栈\n   char *p2; //栈\n   char *p3 = \"123456\"; //123456在常量区，p3在栈上\n   static int c =0;     //全局（静态）初始化区\n   p1 = (char *)malloc(10);\n   p2 = (char *)malloc(20);//分配得来得10和20字节的区域就在堆区\n   strcpy(p1, \"123456\");   //123456放在常量区，编译器可能会将它与p3所指向的\"123456\"优化成一个地方\n}\n```\n\n## 堆和栈的理论知识\n\n### 管理方式不同\n\n* stack:由系统自动分配。 例如，声明在函数中一个局部变量 int b; 系统自动在栈中为b开辟空间\n* heap: 需要程序员自己申请，并指明大小，在c中malloc函数\n\n```cpp\np1 = (char *)malloc(10);\n//在C++中用new运算符\np2 = (char *)malloc(10);\n//但是注意p1、p2本身是在栈中的\n```\n\n### 申请后系统的响应\n\n* 栈：只要栈的剩余空间大于所申请空间，系统将为程序提供内存，否则将报异常提示栈溢出。\n* 堆：首先应该知道操作系统有一个记录空闲内存地址的链表，当系统收到程序的申请时， 会遍历该链表，寻找第一个空间大于所申请空间的堆结点，然后将该结点从空闲结点链表中删除，并将该结点的空间分配给程序，另外，对于大多数系统，会在这块内存空间中的首地址处记录本次分配的大小，这样，代码中的delete语句才能正确的释放本内存空间。另外，由于找到的堆结点的大小不一定正好等于申请的大小，系统会自动的将多余的那部分重新放入空闲链表中。\n\n### 碎片问题\n\n* 对于堆来讲，频繁的new/delete势必会造成内存空间的不连续，从而产生大量的碎片，使程序效率降低。\n* 对于栈来讲，则不会存在这个问题，因为栈是后进先出的队列，他们是如此的一一对应，以至于永远都不可能有一个内存块从栈中间弹出，在它弹出之前，在它上面的后进栈的内容已经被弹出。\n\n### 生长方向\n\n* 对于堆来讲，生长方向是向上的，也就是想着内存地址增加的方向。\n* 对于栈来讲，它的生长方向是向下的，是向着内存地址减小的方向增长。\n\n### 分配方式\n\n* 堆是动态分配的，没有静态分配的堆。\n* 栈有两种分配方式：静态分配和动态分配。静态分配时编译器完成的，比如局部变量的分配。动态分配由函数alloca函数进行分配，但是栈的动态分配和堆石不同的，它的动态分配是由编译器进行释放，无需我们手工是想。\n\n### 分配效率\n\n* 栈是机器系统提供的数据结构，计算机会在底层堆栈提供支持：分配专门的寄存器存放栈的地址，压栈出栈都有专门的指令执行，这就决定了栈的效率比较高。\n* 堆则是c/c++函数库提供的，它的机制是很复杂的，例如为了分配一块内存，库函数会按照一定的算法在堆内存中搜索可用的足够大小的空间，如果没有足够大小的空间（可能是由于碎片太多），就有可能调用系统功能去增加程序数据段的内存空间，这样就有机会分到足够大小的内存，然后进行返回。显然，堆得效率比栈要低得多。\n\n### 申请大小的限制\n\n* 栈：在Windows下,栈是向低地址扩展的数据结构，是一块连续的内存的区域。这句话的意思是栈顶的地址和栈的最大容量是系统预先规定好的，在 WINDOWS下，栈的大小是2M（也有的说是1M，总之是一个编译时就确定的常数），如果申请的空间超过栈的剩余空间时，将提示overflow。因此，能从栈获得的空间较小。\n* 堆：堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的，而链表的遍历方向是由低地址向高地址。堆的大小受限于计算机系统中有效的虚拟内存。由此可见，堆获得的空间比较灵活，也比较大。\n\n### 申请效率的比较\n\n* 栈由系统自动分配，速度较快。但程序员是无法控制的。\n* 堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便.\n另外，在WINDOWS下，最好的方式是用VirtualAlloc分配内存，他不是在堆，也不是在栈是直接在进程的地址空间中保留一快内存，虽然用起来最不方便。但是速度快，也最灵活。\n\n### 堆和栈中的存储内容\n\n* 栈： 在函数调用时，第一个进栈的是主函数中后的下一条指令（函数调用语句的下一条可执行语句）的地址，然后是函数的各个参数，在大多数的C编译器中，参数是由右往左入栈的，然后是函数中的局部变量。注意静态变量是不入栈的。当本次函数调用结束后，局部变量先出栈，然后是参数，最后栈顶指针指向最开始存的地址，也就是主函数中的下一条指令，程序由该点继续运行。\n* 堆：一般是在堆的头部用一个字节存放堆的大小。堆中的具体内容有程序员安排。\n\n### 存取效率的比较\n\n```cpp\nchar s1[] = \"aaaaaaaaaaaaaaa\";\nchar *s2 = \"bbbbbbbbbbbbbbbbb\";\n// aaaaaaaaaa是在运行时刻赋值的；\n// 而bbbbbbbbbbb是在编译时就确定的；\n// 但是，在以后的存取中，在栈上的数组比指针所指向的字符串(例如堆)快。比如：\n#include\nvoid main()\n{\n  char a = 1;\n  char c[] = \"1234567890\";\n  char *p =\"1234567890\";\n  a = c[1];\n  a = p[1];\n  return;\n}\n// 对应的汇编代码\n// 10: a = c[1];\n// 00401067 8A 4D F1 mov cl,byte ptr [ebp-0Fh]\n// 0040106A 88 4D FC mov byte ptr [ebp-4],cl\n// 11: a = p[1];\n// 0040106D 8B 55 EC mov edx,dword ptr [ebp-14h]\n// 00401070 8A 42 01 mov al,byte ptr [edx+1]\n// 00401073 88 45 FC mov byte ptr [ebp-4],al\n// 第一种在读取时直接就把字符串中的元素读到寄存器cl中，而第二种则要先把指针值读到edx中，在根据edx读取字符，显然慢了\n```\n","source":"_posts/C++ 内存.md","raw":"---\ntitle: C++ 内存\ndate: 2019-12-29 19:27:36\nupdate:\ntags: [C,C++]\ncategories: [C++]\ndescription: C++堆、栈、自由存储区、全局/静态存储区和常量存储区\n---\n## C/C++编译的程序占用的内存分布\n\n   1. 栈区（stack）— 由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈\n   2. 堆区（heap） — 一般由程序员分配释放（malloc/free, new/delete），若程序员不释放，程序结束后可能由操作系统回收。注意它与数据结构中的堆石两回事，分配方式倒是类似与链表。其中有malloc/free分配释放的也可以叫自由存储区\n   3. 全局区（静态存储区）（static）— 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。 - 程序结束后有系统释放 （在C++中他们初始化和未初始化的共同占用一块内存区）\n   4. 文字常量区 — 常量字符串就是放在这里的。 程序结束后由系统释放\n   5. 程序代码区 — 存放函数体的二进制代码\n\n## 例子程序\n\n```cpp\n//main.cpp\nint a = 0; 全局初始化区\nchar *p1; 全局未初始化区\nmain()\n{\n   int b; //栈\n   char s[] = \"abc\"; //栈\n   char *p2; //栈\n   char *p3 = \"123456\"; //123456在常量区，p3在栈上\n   static int c =0;     //全局（静态）初始化区\n   p1 = (char *)malloc(10);\n   p2 = (char *)malloc(20);//分配得来得10和20字节的区域就在堆区\n   strcpy(p1, \"123456\");   //123456放在常量区，编译器可能会将它与p3所指向的\"123456\"优化成一个地方\n}\n```\n\n## 堆和栈的理论知识\n\n### 管理方式不同\n\n* stack:由系统自动分配。 例如，声明在函数中一个局部变量 int b; 系统自动在栈中为b开辟空间\n* heap: 需要程序员自己申请，并指明大小，在c中malloc函数\n\n```cpp\np1 = (char *)malloc(10);\n//在C++中用new运算符\np2 = (char *)malloc(10);\n//但是注意p1、p2本身是在栈中的\n```\n\n### 申请后系统的响应\n\n* 栈：只要栈的剩余空间大于所申请空间，系统将为程序提供内存，否则将报异常提示栈溢出。\n* 堆：首先应该知道操作系统有一个记录空闲内存地址的链表，当系统收到程序的申请时， 会遍历该链表，寻找第一个空间大于所申请空间的堆结点，然后将该结点从空闲结点链表中删除，并将该结点的空间分配给程序，另外，对于大多数系统，会在这块内存空间中的首地址处记录本次分配的大小，这样，代码中的delete语句才能正确的释放本内存空间。另外，由于找到的堆结点的大小不一定正好等于申请的大小，系统会自动的将多余的那部分重新放入空闲链表中。\n\n### 碎片问题\n\n* 对于堆来讲，频繁的new/delete势必会造成内存空间的不连续，从而产生大量的碎片，使程序效率降低。\n* 对于栈来讲，则不会存在这个问题，因为栈是后进先出的队列，他们是如此的一一对应，以至于永远都不可能有一个内存块从栈中间弹出，在它弹出之前，在它上面的后进栈的内容已经被弹出。\n\n### 生长方向\n\n* 对于堆来讲，生长方向是向上的，也就是想着内存地址增加的方向。\n* 对于栈来讲，它的生长方向是向下的，是向着内存地址减小的方向增长。\n\n### 分配方式\n\n* 堆是动态分配的，没有静态分配的堆。\n* 栈有两种分配方式：静态分配和动态分配。静态分配时编译器完成的，比如局部变量的分配。动态分配由函数alloca函数进行分配，但是栈的动态分配和堆石不同的，它的动态分配是由编译器进行释放，无需我们手工是想。\n\n### 分配效率\n\n* 栈是机器系统提供的数据结构，计算机会在底层堆栈提供支持：分配专门的寄存器存放栈的地址，压栈出栈都有专门的指令执行，这就决定了栈的效率比较高。\n* 堆则是c/c++函数库提供的，它的机制是很复杂的，例如为了分配一块内存，库函数会按照一定的算法在堆内存中搜索可用的足够大小的空间，如果没有足够大小的空间（可能是由于碎片太多），就有可能调用系统功能去增加程序数据段的内存空间，这样就有机会分到足够大小的内存，然后进行返回。显然，堆得效率比栈要低得多。\n\n### 申请大小的限制\n\n* 栈：在Windows下,栈是向低地址扩展的数据结构，是一块连续的内存的区域。这句话的意思是栈顶的地址和栈的最大容量是系统预先规定好的，在 WINDOWS下，栈的大小是2M（也有的说是1M，总之是一个编译时就确定的常数），如果申请的空间超过栈的剩余空间时，将提示overflow。因此，能从栈获得的空间较小。\n* 堆：堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的，而链表的遍历方向是由低地址向高地址。堆的大小受限于计算机系统中有效的虚拟内存。由此可见，堆获得的空间比较灵活，也比较大。\n\n### 申请效率的比较\n\n* 栈由系统自动分配，速度较快。但程序员是无法控制的。\n* 堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便.\n另外，在WINDOWS下，最好的方式是用VirtualAlloc分配内存，他不是在堆，也不是在栈是直接在进程的地址空间中保留一快内存，虽然用起来最不方便。但是速度快，也最灵活。\n\n### 堆和栈中的存储内容\n\n* 栈： 在函数调用时，第一个进栈的是主函数中后的下一条指令（函数调用语句的下一条可执行语句）的地址，然后是函数的各个参数，在大多数的C编译器中，参数是由右往左入栈的，然后是函数中的局部变量。注意静态变量是不入栈的。当本次函数调用结束后，局部变量先出栈，然后是参数，最后栈顶指针指向最开始存的地址，也就是主函数中的下一条指令，程序由该点继续运行。\n* 堆：一般是在堆的头部用一个字节存放堆的大小。堆中的具体内容有程序员安排。\n\n### 存取效率的比较\n\n```cpp\nchar s1[] = \"aaaaaaaaaaaaaaa\";\nchar *s2 = \"bbbbbbbbbbbbbbbbb\";\n// aaaaaaaaaa是在运行时刻赋值的；\n// 而bbbbbbbbbbb是在编译时就确定的；\n// 但是，在以后的存取中，在栈上的数组比指针所指向的字符串(例如堆)快。比如：\n#include\nvoid main()\n{\n  char a = 1;\n  char c[] = \"1234567890\";\n  char *p =\"1234567890\";\n  a = c[1];\n  a = p[1];\n  return;\n}\n// 对应的汇编代码\n// 10: a = c[1];\n// 00401067 8A 4D F1 mov cl,byte ptr [ebp-0Fh]\n// 0040106A 88 4D FC mov byte ptr [ebp-4],cl\n// 11: a = p[1];\n// 0040106D 8B 55 EC mov edx,dword ptr [ebp-14h]\n// 00401070 8A 42 01 mov al,byte ptr [edx+1]\n// 00401073 88 45 FC mov byte ptr [ebp-4],al\n// 第一种在读取时直接就把字符串中的元素读到寄存器cl中，而第二种则要先把指针值读到edx中，在根据edx读取字符，显然慢了\n```\n","slug":"C++ 内存","published":1,"updated":"2020-01-18T22:31:53.878Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9ov000bmou5fvr89x0f","content":"<h2 id=\"C-C-编译的程序占用的内存分布\"><a href=\"#C-C-编译的程序占用的内存分布\" class=\"headerlink\" title=\"C/C++编译的程序占用的内存分布\"></a>C/C++编译的程序占用的内存分布</h2><ol>\n<li>栈区（stack）— 由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈</li>\n<li>堆区（heap） — 一般由程序员分配释放（malloc/free, new/delete），若程序员不释放，程序结束后可能由操作系统回收。注意它与数据结构中的堆石两回事，分配方式倒是类似与链表。其中有malloc/free分配释放的也可以叫自由存储区</li>\n<li>全局区（静态存储区）（static）— 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。 - 程序结束后有系统释放 （在C++中他们初始化和未初始化的共同占用一块内存区）</li>\n<li>文字常量区 — 常量字符串就是放在这里的。 程序结束后由系统释放</li>\n<li>程序代码区 — 存放函数体的二进制代码</li>\n</ol>\n<h2 id=\"例子程序\"><a href=\"#例子程序\" class=\"headerlink\" title=\"例子程序\"></a>例子程序</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>; 全局初始化区</span><br><span class=\"line\"><span class=\"keyword\">char</span> *p1; 全局未初始化区</span><br><span class=\"line\">main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> b; <span class=\"comment\">//栈</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> s[] = <span class=\"string\">\"abc\"</span>; <span class=\"comment\">//栈</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> *p2; <span class=\"comment\">//栈</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> *p3 = <span class=\"string\">\"123456\"</span>; <span class=\"comment\">//123456在常量区，p3在栈上</span></span><br><span class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> c =<span class=\"number\">0</span>;     <span class=\"comment\">//全局（静态）初始化区</span></span><br><span class=\"line\">   p1 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">   p2 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">20</span>);<span class=\"comment\">//分配得来得10和20字节的区域就在堆区</span></span><br><span class=\"line\">   <span class=\"built_in\">strcpy</span>(p1, <span class=\"string\">\"123456\"</span>);   <span class=\"comment\">//123456放在常量区，编译器可能会将它与p3所指向的\"123456\"优化成一个地方</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"堆和栈的理论知识\"><a href=\"#堆和栈的理论知识\" class=\"headerlink\" title=\"堆和栈的理论知识\"></a>堆和栈的理论知识</h2><h3 id=\"管理方式不同\"><a href=\"#管理方式不同\" class=\"headerlink\" title=\"管理方式不同\"></a>管理方式不同</h3><ul>\n<li>stack:由系统自动分配。 例如，声明在函数中一个局部变量 int b; 系统自动在栈中为b开辟空间</li>\n<li>heap: 需要程序员自己申请，并指明大小，在c中malloc函数</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">//在C++中用new运算符</span></span><br><span class=\"line\">p2 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">//但是注意p1、p2本身是在栈中的</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"申请后系统的响应\"><a href=\"#申请后系统的响应\" class=\"headerlink\" title=\"申请后系统的响应\"></a>申请后系统的响应</h3><ul>\n<li>栈：只要栈的剩余空间大于所申请空间，系统将为程序提供内存，否则将报异常提示栈溢出。</li>\n<li>堆：首先应该知道操作系统有一个记录空闲内存地址的链表，当系统收到程序的申请时， 会遍历该链表，寻找第一个空间大于所申请空间的堆结点，然后将该结点从空闲结点链表中删除，并将该结点的空间分配给程序，另外，对于大多数系统，会在这块内存空间中的首地址处记录本次分配的大小，这样，代码中的delete语句才能正确的释放本内存空间。另外，由于找到的堆结点的大小不一定正好等于申请的大小，系统会自动的将多余的那部分重新放入空闲链表中。</li>\n</ul>\n<h3 id=\"碎片问题\"><a href=\"#碎片问题\" class=\"headerlink\" title=\"碎片问题\"></a>碎片问题</h3><ul>\n<li>对于堆来讲，频繁的new/delete势必会造成内存空间的不连续，从而产生大量的碎片，使程序效率降低。</li>\n<li>对于栈来讲，则不会存在这个问题，因为栈是后进先出的队列，他们是如此的一一对应，以至于永远都不可能有一个内存块从栈中间弹出，在它弹出之前，在它上面的后进栈的内容已经被弹出。</li>\n</ul>\n<h3 id=\"生长方向\"><a href=\"#生长方向\" class=\"headerlink\" title=\"生长方向\"></a>生长方向</h3><ul>\n<li>对于堆来讲，生长方向是向上的，也就是想着内存地址增加的方向。</li>\n<li>对于栈来讲，它的生长方向是向下的，是向着内存地址减小的方向增长。</li>\n</ul>\n<h3 id=\"分配方式\"><a href=\"#分配方式\" class=\"headerlink\" title=\"分配方式\"></a>分配方式</h3><ul>\n<li>堆是动态分配的，没有静态分配的堆。</li>\n<li>栈有两种分配方式：静态分配和动态分配。静态分配时编译器完成的，比如局部变量的分配。动态分配由函数alloca函数进行分配，但是栈的动态分配和堆石不同的，它的动态分配是由编译器进行释放，无需我们手工是想。</li>\n</ul>\n<h3 id=\"分配效率\"><a href=\"#分配效率\" class=\"headerlink\" title=\"分配效率\"></a>分配效率</h3><ul>\n<li>栈是机器系统提供的数据结构，计算机会在底层堆栈提供支持：分配专门的寄存器存放栈的地址，压栈出栈都有专门的指令执行，这就决定了栈的效率比较高。</li>\n<li>堆则是c/c++函数库提供的，它的机制是很复杂的，例如为了分配一块内存，库函数会按照一定的算法在堆内存中搜索可用的足够大小的空间，如果没有足够大小的空间（可能是由于碎片太多），就有可能调用系统功能去增加程序数据段的内存空间，这样就有机会分到足够大小的内存，然后进行返回。显然，堆得效率比栈要低得多。</li>\n</ul>\n<h3 id=\"申请大小的限制\"><a href=\"#申请大小的限制\" class=\"headerlink\" title=\"申请大小的限制\"></a>申请大小的限制</h3><ul>\n<li>栈：在Windows下,栈是向低地址扩展的数据结构，是一块连续的内存的区域。这句话的意思是栈顶的地址和栈的最大容量是系统预先规定好的，在 WINDOWS下，栈的大小是2M（也有的说是1M，总之是一个编译时就确定的常数），如果申请的空间超过栈的剩余空间时，将提示overflow。因此，能从栈获得的空间较小。</li>\n<li>堆：堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的，而链表的遍历方向是由低地址向高地址。堆的大小受限于计算机系统中有效的虚拟内存。由此可见，堆获得的空间比较灵活，也比较大。</li>\n</ul>\n<h3 id=\"申请效率的比较\"><a href=\"#申请效率的比较\" class=\"headerlink\" title=\"申请效率的比较\"></a>申请效率的比较</h3><ul>\n<li>栈由系统自动分配，速度较快。但程序员是无法控制的。</li>\n<li>堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便.<br>另外，在WINDOWS下，最好的方式是用VirtualAlloc分配内存，他不是在堆，也不是在栈是直接在进程的地址空间中保留一快内存，虽然用起来最不方便。但是速度快，也最灵活。</li>\n</ul>\n<h3 id=\"堆和栈中的存储内容\"><a href=\"#堆和栈中的存储内容\" class=\"headerlink\" title=\"堆和栈中的存储内容\"></a>堆和栈中的存储内容</h3><ul>\n<li>栈： 在函数调用时，第一个进栈的是主函数中后的下一条指令（函数调用语句的下一条可执行语句）的地址，然后是函数的各个参数，在大多数的C编译器中，参数是由右往左入栈的，然后是函数中的局部变量。注意静态变量是不入栈的。当本次函数调用结束后，局部变量先出栈，然后是参数，最后栈顶指针指向最开始存的地址，也就是主函数中的下一条指令，程序由该点继续运行。</li>\n<li>堆：一般是在堆的头部用一个字节存放堆的大小。堆中的具体内容有程序员安排。</li>\n</ul>\n<h3 id=\"存取效率的比较\"><a href=\"#存取效率的比较\" class=\"headerlink\" title=\"存取效率的比较\"></a>存取效率的比较</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> s1[] = <span class=\"string\">\"aaaaaaaaaaaaaaa\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> *s2 = <span class=\"string\">\"bbbbbbbbbbbbbbbbb\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// aaaaaaaaaa是在运行时刻赋值的；</span></span><br><span class=\"line\"><span class=\"comment\">// 而bbbbbbbbbbb是在编译时就确定的；</span></span><br><span class=\"line\"><span class=\"comment\">// 但是，在以后的存取中，在栈上的数组比指针所指向的字符串(例如堆)快。比如：</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> c[] = <span class=\"string\">\"1234567890\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *p =<span class=\"string\">\"1234567890\"</span>;</span><br><span class=\"line\">  a = c[<span class=\"number\">1</span>];</span><br><span class=\"line\">  a = p[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 对应的汇编代码</span></span><br><span class=\"line\"><span class=\"comment\">// 10: a = c[1];</span></span><br><span class=\"line\"><span class=\"comment\">// 00401067 8A 4D F1 mov cl,byte ptr [ebp-0Fh]</span></span><br><span class=\"line\"><span class=\"comment\">// 0040106A 88 4D FC mov byte ptr [ebp-4],cl</span></span><br><span class=\"line\"><span class=\"comment\">// 11: a = p[1];</span></span><br><span class=\"line\"><span class=\"comment\">// 0040106D 8B 55 EC mov edx,dword ptr [ebp-14h]</span></span><br><span class=\"line\"><span class=\"comment\">// 00401070 8A 42 01 mov al,byte ptr [edx+1]</span></span><br><span class=\"line\"><span class=\"comment\">// 00401073 88 45 FC mov byte ptr [ebp-4],al</span></span><br><span class=\"line\"><span class=\"comment\">// 第一种在读取时直接就把字符串中的元素读到寄存器cl中，而第二种则要先把指针值读到edx中，在根据edx读取字符，显然慢了</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":2862,"excerpt":"","more":"<h2 id=\"C-C-编译的程序占用的内存分布\"><a href=\"#C-C-编译的程序占用的内存分布\" class=\"headerlink\" title=\"C/C++编译的程序占用的内存分布\"></a>C/C++编译的程序占用的内存分布</h2><ol>\n<li>栈区（stack）— 由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈</li>\n<li>堆区（heap） — 一般由程序员分配释放（malloc/free, new/delete），若程序员不释放，程序结束后可能由操作系统回收。注意它与数据结构中的堆石两回事，分配方式倒是类似与链表。其中有malloc/free分配释放的也可以叫自由存储区</li>\n<li>全局区（静态存储区）（static）— 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。 - 程序结束后有系统释放 （在C++中他们初始化和未初始化的共同占用一块内存区）</li>\n<li>文字常量区 — 常量字符串就是放在这里的。 程序结束后由系统释放</li>\n<li>程序代码区 — 存放函数体的二进制代码</li>\n</ol>\n<h2 id=\"例子程序\"><a href=\"#例子程序\" class=\"headerlink\" title=\"例子程序\"></a>例子程序</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0</span>; 全局初始化区</span><br><span class=\"line\"><span class=\"keyword\">char</span> *p1; 全局未初始化区</span><br><span class=\"line\">main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">int</span> b; <span class=\"comment\">//栈</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> s[] = <span class=\"string\">\"abc\"</span>; <span class=\"comment\">//栈</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> *p2; <span class=\"comment\">//栈</span></span><br><span class=\"line\">   <span class=\"keyword\">char</span> *p3 = <span class=\"string\">\"123456\"</span>; <span class=\"comment\">//123456在常量区，p3在栈上</span></span><br><span class=\"line\">   <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> c =<span class=\"number\">0</span>;     <span class=\"comment\">//全局（静态）初始化区</span></span><br><span class=\"line\">   p1 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">   p2 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">20</span>);<span class=\"comment\">//分配得来得10和20字节的区域就在堆区</span></span><br><span class=\"line\">   <span class=\"built_in\">strcpy</span>(p1, <span class=\"string\">\"123456\"</span>);   <span class=\"comment\">//123456放在常量区，编译器可能会将它与p3所指向的\"123456\"优化成一个地方</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"堆和栈的理论知识\"><a href=\"#堆和栈的理论知识\" class=\"headerlink\" title=\"堆和栈的理论知识\"></a>堆和栈的理论知识</h2><h3 id=\"管理方式不同\"><a href=\"#管理方式不同\" class=\"headerlink\" title=\"管理方式不同\"></a>管理方式不同</h3><ul>\n<li>stack:由系统自动分配。 例如，声明在函数中一个局部变量 int b; 系统自动在栈中为b开辟空间</li>\n<li>heap: 需要程序员自己申请，并指明大小，在c中malloc函数</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">//在C++中用new运算符</span></span><br><span class=\"line\">p2 = (<span class=\"keyword\">char</span> *)<span class=\"built_in\">malloc</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"comment\">//但是注意p1、p2本身是在栈中的</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"申请后系统的响应\"><a href=\"#申请后系统的响应\" class=\"headerlink\" title=\"申请后系统的响应\"></a>申请后系统的响应</h3><ul>\n<li>栈：只要栈的剩余空间大于所申请空间，系统将为程序提供内存，否则将报异常提示栈溢出。</li>\n<li>堆：首先应该知道操作系统有一个记录空闲内存地址的链表，当系统收到程序的申请时， 会遍历该链表，寻找第一个空间大于所申请空间的堆结点，然后将该结点从空闲结点链表中删除，并将该结点的空间分配给程序，另外，对于大多数系统，会在这块内存空间中的首地址处记录本次分配的大小，这样，代码中的delete语句才能正确的释放本内存空间。另外，由于找到的堆结点的大小不一定正好等于申请的大小，系统会自动的将多余的那部分重新放入空闲链表中。</li>\n</ul>\n<h3 id=\"碎片问题\"><a href=\"#碎片问题\" class=\"headerlink\" title=\"碎片问题\"></a>碎片问题</h3><ul>\n<li>对于堆来讲，频繁的new/delete势必会造成内存空间的不连续，从而产生大量的碎片，使程序效率降低。</li>\n<li>对于栈来讲，则不会存在这个问题，因为栈是后进先出的队列，他们是如此的一一对应，以至于永远都不可能有一个内存块从栈中间弹出，在它弹出之前，在它上面的后进栈的内容已经被弹出。</li>\n</ul>\n<h3 id=\"生长方向\"><a href=\"#生长方向\" class=\"headerlink\" title=\"生长方向\"></a>生长方向</h3><ul>\n<li>对于堆来讲，生长方向是向上的，也就是想着内存地址增加的方向。</li>\n<li>对于栈来讲，它的生长方向是向下的，是向着内存地址减小的方向增长。</li>\n</ul>\n<h3 id=\"分配方式\"><a href=\"#分配方式\" class=\"headerlink\" title=\"分配方式\"></a>分配方式</h3><ul>\n<li>堆是动态分配的，没有静态分配的堆。</li>\n<li>栈有两种分配方式：静态分配和动态分配。静态分配时编译器完成的，比如局部变量的分配。动态分配由函数alloca函数进行分配，但是栈的动态分配和堆石不同的，它的动态分配是由编译器进行释放，无需我们手工是想。</li>\n</ul>\n<h3 id=\"分配效率\"><a href=\"#分配效率\" class=\"headerlink\" title=\"分配效率\"></a>分配效率</h3><ul>\n<li>栈是机器系统提供的数据结构，计算机会在底层堆栈提供支持：分配专门的寄存器存放栈的地址，压栈出栈都有专门的指令执行，这就决定了栈的效率比较高。</li>\n<li>堆则是c/c++函数库提供的，它的机制是很复杂的，例如为了分配一块内存，库函数会按照一定的算法在堆内存中搜索可用的足够大小的空间，如果没有足够大小的空间（可能是由于碎片太多），就有可能调用系统功能去增加程序数据段的内存空间，这样就有机会分到足够大小的内存，然后进行返回。显然，堆得效率比栈要低得多。</li>\n</ul>\n<h3 id=\"申请大小的限制\"><a href=\"#申请大小的限制\" class=\"headerlink\" title=\"申请大小的限制\"></a>申请大小的限制</h3><ul>\n<li>栈：在Windows下,栈是向低地址扩展的数据结构，是一块连续的内存的区域。这句话的意思是栈顶的地址和栈的最大容量是系统预先规定好的，在 WINDOWS下，栈的大小是2M（也有的说是1M，总之是一个编译时就确定的常数），如果申请的空间超过栈的剩余空间时，将提示overflow。因此，能从栈获得的空间较小。</li>\n<li>堆：堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的，而链表的遍历方向是由低地址向高地址。堆的大小受限于计算机系统中有效的虚拟内存。由此可见，堆获得的空间比较灵活，也比较大。</li>\n</ul>\n<h3 id=\"申请效率的比较\"><a href=\"#申请效率的比较\" class=\"headerlink\" title=\"申请效率的比较\"></a>申请效率的比较</h3><ul>\n<li>栈由系统自动分配，速度较快。但程序员是无法控制的。</li>\n<li>堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便.<br>另外，在WINDOWS下，最好的方式是用VirtualAlloc分配内存，他不是在堆，也不是在栈是直接在进程的地址空间中保留一快内存，虽然用起来最不方便。但是速度快，也最灵活。</li>\n</ul>\n<h3 id=\"堆和栈中的存储内容\"><a href=\"#堆和栈中的存储内容\" class=\"headerlink\" title=\"堆和栈中的存储内容\"></a>堆和栈中的存储内容</h3><ul>\n<li>栈： 在函数调用时，第一个进栈的是主函数中后的下一条指令（函数调用语句的下一条可执行语句）的地址，然后是函数的各个参数，在大多数的C编译器中，参数是由右往左入栈的，然后是函数中的局部变量。注意静态变量是不入栈的。当本次函数调用结束后，局部变量先出栈，然后是参数，最后栈顶指针指向最开始存的地址，也就是主函数中的下一条指令，程序由该点继续运行。</li>\n<li>堆：一般是在堆的头部用一个字节存放堆的大小。堆中的具体内容有程序员安排。</li>\n</ul>\n<h3 id=\"存取效率的比较\"><a href=\"#存取效率的比较\" class=\"headerlink\" title=\"存取效率的比较\"></a>存取效率的比较</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> s1[] = <span class=\"string\">\"aaaaaaaaaaaaaaa\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> *s2 = <span class=\"string\">\"bbbbbbbbbbbbbbbbb\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// aaaaaaaaaa是在运行时刻赋值的；</span></span><br><span class=\"line\"><span class=\"comment\">// 而bbbbbbbbbbb是在编译时就确定的；</span></span><br><span class=\"line\"><span class=\"comment\">// 但是，在以后的存取中，在栈上的数组比指针所指向的字符串(例如堆)快。比如：</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> c[] = <span class=\"string\">\"1234567890\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> *p =<span class=\"string\">\"1234567890\"</span>;</span><br><span class=\"line\">  a = c[<span class=\"number\">1</span>];</span><br><span class=\"line\">  a = p[<span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 对应的汇编代码</span></span><br><span class=\"line\"><span class=\"comment\">// 10: a = c[1];</span></span><br><span class=\"line\"><span class=\"comment\">// 00401067 8A 4D F1 mov cl,byte ptr [ebp-0Fh]</span></span><br><span class=\"line\"><span class=\"comment\">// 0040106A 88 4D FC mov byte ptr [ebp-4],cl</span></span><br><span class=\"line\"><span class=\"comment\">// 11: a = p[1];</span></span><br><span class=\"line\"><span class=\"comment\">// 0040106D 8B 55 EC mov edx,dword ptr [ebp-14h]</span></span><br><span class=\"line\"><span class=\"comment\">// 00401070 8A 42 01 mov al,byte ptr [edx+1]</span></span><br><span class=\"line\"><span class=\"comment\">// 00401073 88 45 FC mov byte ptr [ebp-4],al</span></span><br><span class=\"line\"><span class=\"comment\">// 第一种在读取时直接就把字符串中的元素读到寄存器cl中，而第二种则要先把指针值读到edx中，在根据edx读取字符，显然慢了</span></span><br></pre></td></tr></table></figure>\n"},{"title":"C++ 多线程","date":"2020-01-17T03:03:18.000Z","update":null,"description":"C++ Multithreading","_content":"\n","source":"_posts/C++ 多线程.md","raw":"---\ntitle: C++ 多线程\ndate: 2020-01-16 22:03:18\nupdate:\ntags: [C++, Multithreading]\ncategories: [C++]\ndescription: C++ Multithreading\n---\n\n","slug":"C++ 多线程","published":1,"updated":"2020-01-18T22:31:39.871Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9ow000cmou51bqd8flb","content":"","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":0,"excerpt":"","more":""},{"title":"C++ 宏","date":"2019-12-30T01:51:13.000Z","update":null,"description":"宏","_content":"\n## 宏\n\n宏定义`#define` 将一个标识符定义为一个字符串，宏处理（宏展开）发生在预处理阶段\n\n### 宏就是简单替换\n\n```cpp\n//simple macro\n//#define <macro name> <string>\n#define PI 3.14\n\n//macro with parameter\n//#define <macro name> (<parameter list>) <body>\n#define A(x) x\n\n#define SQUARE(X) X * X\nint tmp = SQUARE(3 + 3); //tmp=3+3*3+3=15\n//to get 6*6\n#define SQUARE(X) ((X) * (X)) //SQUARE((3+3)*(3+3))\n```\n\n### 宏定义的特点\n\n1. 宏一般用大写，且末尾不加分号\n2. 宏定义的参数无类型，不做语法检查，不做表达式求解，只替换\n3. 宏定义通常在文件开头，可用 \\#undef 宏名 终止\n4. 宏定义可嵌套，但 \" \" 中永远不包含宏\n\n### 宏定义的三个特殊符号\n\n```cpp\n// # 给x加双引号\n//char* str = ToString(123132); -> str=\"123132\";\n#define ToString(x) #x\n\n// ## 连接xy\n//int n = Conn(123,456); -> n=123456; char* str = Conn(\"asdf\", \"adf\"); -> str = \"asdfadf\";\n#define Conn(x, y) x##y\n\n// #@ 给x加上单引号，结果返回是一个const char\n//char a = ToChar(1); -> a='1';\n#define ToChar(x) #@ x\n```\n\n### do...while(0)在宏中的技巧\n\n```cpp\n#define foo(x) do{\n      statement one;\n      statement two;\n  }while (0)\n\n#define foo(x) {\n      statement one;\n      statement two;\n  }\n\n//do...while(0) 将宏定义为一个非复合语句,可用于如下情况\nif(condition)\n  foo(x);\nelse\n  ...;\n```\n\n### 预定义的宏名\n\n```cpp\n    __LINE__ //当前行号\n    __FILE__ //当前源文件名\n    __DATE__ //编译日期\n    __TIME__ //编译时间\n    __STDC__ //当要求程序严格遵守ANSI C标准时赋值为1\n    __cplusplus //当编写C++程序时该标识被定义\n```\n","source":"_posts/C++ 宏.md","raw":"---\ntitle: C++ 宏\ndate: 2019-12-29 20:51:13\nupdate:\ntags: [C,C++]\ncategories: [C++]\ndescription: 宏\n---\n\n## 宏\n\n宏定义`#define` 将一个标识符定义为一个字符串，宏处理（宏展开）发生在预处理阶段\n\n### 宏就是简单替换\n\n```cpp\n//simple macro\n//#define <macro name> <string>\n#define PI 3.14\n\n//macro with parameter\n//#define <macro name> (<parameter list>) <body>\n#define A(x) x\n\n#define SQUARE(X) X * X\nint tmp = SQUARE(3 + 3); //tmp=3+3*3+3=15\n//to get 6*6\n#define SQUARE(X) ((X) * (X)) //SQUARE((3+3)*(3+3))\n```\n\n### 宏定义的特点\n\n1. 宏一般用大写，且末尾不加分号\n2. 宏定义的参数无类型，不做语法检查，不做表达式求解，只替换\n3. 宏定义通常在文件开头，可用 \\#undef 宏名 终止\n4. 宏定义可嵌套，但 \" \" 中永远不包含宏\n\n### 宏定义的三个特殊符号\n\n```cpp\n// # 给x加双引号\n//char* str = ToString(123132); -> str=\"123132\";\n#define ToString(x) #x\n\n// ## 连接xy\n//int n = Conn(123,456); -> n=123456; char* str = Conn(\"asdf\", \"adf\"); -> str = \"asdfadf\";\n#define Conn(x, y) x##y\n\n// #@ 给x加上单引号，结果返回是一个const char\n//char a = ToChar(1); -> a='1';\n#define ToChar(x) #@ x\n```\n\n### do...while(0)在宏中的技巧\n\n```cpp\n#define foo(x) do{\n      statement one;\n      statement two;\n  }while (0)\n\n#define foo(x) {\n      statement one;\n      statement two;\n  }\n\n//do...while(0) 将宏定义为一个非复合语句,可用于如下情况\nif(condition)\n  foo(x);\nelse\n  ...;\n```\n\n### 预定义的宏名\n\n```cpp\n    __LINE__ //当前行号\n    __FILE__ //当前源文件名\n    __DATE__ //编译日期\n    __TIME__ //编译时间\n    __STDC__ //当要求程序严格遵守ANSI C标准时赋值为1\n    __cplusplus //当编写C++程序时该标识被定义\n```\n","slug":"C++ 宏","published":1,"updated":"2020-01-18T22:30:35.006Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9oz000hmou5g9w41snk","content":"<h2 id=\"宏\"><a href=\"#宏\" class=\"headerlink\" title=\"宏\"></a>宏</h2><p>宏定义<code>#define</code> 将一个标识符定义为一个字符串，宏处理（宏展开）发生在预处理阶段</p>\n<h3 id=\"宏就是简单替换\"><a href=\"#宏就是简单替换\" class=\"headerlink\" title=\"宏就是简单替换\"></a>宏就是简单替换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//simple macro</span></span><br><span class=\"line\"><span class=\"comment\">//#define &lt;macro name&gt; &lt;string&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PI 3.14</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//macro with parameter</span></span><br><span class=\"line\"><span class=\"comment\">//#define &lt;macro name&gt; (&lt;parameter list&gt;) &lt;body&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> A(x) x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SQUARE(X) X * X</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> tmp = SQUARE(<span class=\"number\">3</span> + <span class=\"number\">3</span>); <span class=\"comment\">//tmp=3+3*3+3=15</span></span><br><span class=\"line\"><span class=\"comment\">//to get 6*6</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SQUARE(X) ((X) * (X)) <span class=\"comment\">//SQUARE((3+3)*(3+3))</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"宏定义的特点\"><a href=\"#宏定义的特点\" class=\"headerlink\" title=\"宏定义的特点\"></a>宏定义的特点</h3><ol>\n<li>宏一般用大写，且末尾不加分号</li>\n<li>宏定义的参数无类型，不做语法检查，不做表达式求解，只替换</li>\n<li>宏定义通常在文件开头，可用 #undef 宏名 终止</li>\n<li>宏定义可嵌套，但 “ “ 中永远不包含宏</li>\n</ol>\n<h3 id=\"宏定义的三个特殊符号\"><a href=\"#宏定义的三个特殊符号\" class=\"headerlink\" title=\"宏定义的三个特殊符号\"></a>宏定义的三个特殊符号</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// # 给x加双引号</span></span><br><span class=\"line\"><span class=\"comment\">//char* str = ToString(123132); -&gt; str=\"123132\";</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ToString(x) #x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ## 连接xy</span></span><br><span class=\"line\"><span class=\"comment\">//int n = Conn(123,456); -&gt; n=123456; char* str = Conn(\"asdf\", \"adf\"); -&gt; str = \"asdfadf\";</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Conn(x, y) x##y</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #@ 给x加上单引号，结果返回是一个const char</span></span><br><span class=\"line\"><span class=\"comment\">//char a = ToChar(1); -&gt; a='1';</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ToChar(x) #@ x</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"do…while-0-在宏中的技巧\"><a href=\"#do…while-0-在宏中的技巧\" class=\"headerlink\" title=\"do…while(0)在宏中的技巧\"></a>do…while(0)在宏中的技巧</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> foo(x) do&#123;</span></span><br><span class=\"line\">      statement one;</span><br><span class=\"line\">      statement two;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">while</span> (<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> foo(x) &#123;</span></span><br><span class=\"line\">      statement one;</span><br><span class=\"line\">      statement two;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//do...while(0) 将宏定义为一个非复合语句,可用于如下情况</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(condition)</span><br><span class=\"line\">  foo(x);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  ...;</span><br></pre></td></tr></table></figure>\n<h3 id=\"预定义的宏名\"><a href=\"#预定义的宏名\" class=\"headerlink\" title=\"预定义的宏名\"></a>预定义的宏名</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__LINE__ <span class=\"comment\">//当前行号</span></span><br><span class=\"line\">__FILE__ <span class=\"comment\">//当前源文件名</span></span><br><span class=\"line\">__DATE__ <span class=\"comment\">//编译日期</span></span><br><span class=\"line\">__TIME__ <span class=\"comment\">//编译时间</span></span><br><span class=\"line\">__STDC__ <span class=\"comment\">//当要求程序严格遵守ANSI C标准时赋值为1</span></span><br><span class=\"line\">__cplusplus <span class=\"comment\">//当编写C++程序时该标识被定义</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":1047,"excerpt":"","more":"<h2 id=\"宏\"><a href=\"#宏\" class=\"headerlink\" title=\"宏\"></a>宏</h2><p>宏定义<code>#define</code> 将一个标识符定义为一个字符串，宏处理（宏展开）发生在预处理阶段</p>\n<h3 id=\"宏就是简单替换\"><a href=\"#宏就是简单替换\" class=\"headerlink\" title=\"宏就是简单替换\"></a>宏就是简单替换</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//simple macro</span></span><br><span class=\"line\"><span class=\"comment\">//#define &lt;macro name&gt; &lt;string&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PI 3.14</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//macro with parameter</span></span><br><span class=\"line\"><span class=\"comment\">//#define &lt;macro name&gt; (&lt;parameter list&gt;) &lt;body&gt;</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> A(x) x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SQUARE(X) X * X</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> tmp = SQUARE(<span class=\"number\">3</span> + <span class=\"number\">3</span>); <span class=\"comment\">//tmp=3+3*3+3=15</span></span><br><span class=\"line\"><span class=\"comment\">//to get 6*6</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SQUARE(X) ((X) * (X)) <span class=\"comment\">//SQUARE((3+3)*(3+3))</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"宏定义的特点\"><a href=\"#宏定义的特点\" class=\"headerlink\" title=\"宏定义的特点\"></a>宏定义的特点</h3><ol>\n<li>宏一般用大写，且末尾不加分号</li>\n<li>宏定义的参数无类型，不做语法检查，不做表达式求解，只替换</li>\n<li>宏定义通常在文件开头，可用 #undef 宏名 终止</li>\n<li>宏定义可嵌套，但 “ “ 中永远不包含宏</li>\n</ol>\n<h3 id=\"宏定义的三个特殊符号\"><a href=\"#宏定义的三个特殊符号\" class=\"headerlink\" title=\"宏定义的三个特殊符号\"></a>宏定义的三个特殊符号</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// # 给x加双引号</span></span><br><span class=\"line\"><span class=\"comment\">//char* str = ToString(123132); -&gt; str=\"123132\";</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ToString(x) #x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ## 连接xy</span></span><br><span class=\"line\"><span class=\"comment\">//int n = Conn(123,456); -&gt; n=123456; char* str = Conn(\"asdf\", \"adf\"); -&gt; str = \"asdfadf\";</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Conn(x, y) x##y</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #@ 给x加上单引号，结果返回是一个const char</span></span><br><span class=\"line\"><span class=\"comment\">//char a = ToChar(1); -&gt; a='1';</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ToChar(x) #@ x</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"do…while-0-在宏中的技巧\"><a href=\"#do…while-0-在宏中的技巧\" class=\"headerlink\" title=\"do…while(0)在宏中的技巧\"></a>do…while(0)在宏中的技巧</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> foo(x) do&#123;</span></span><br><span class=\"line\">      statement one;</span><br><span class=\"line\">      statement two;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">while</span> (<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> foo(x) &#123;</span></span><br><span class=\"line\">      statement one;</span><br><span class=\"line\">      statement two;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//do...while(0) 将宏定义为一个非复合语句,可用于如下情况</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(condition)</span><br><span class=\"line\">  foo(x);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  ...;</span><br></pre></td></tr></table></figure>\n<h3 id=\"预定义的宏名\"><a href=\"#预定义的宏名\" class=\"headerlink\" title=\"预定义的宏名\"></a>预定义的宏名</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__LINE__ <span class=\"comment\">//当前行号</span></span><br><span class=\"line\">__FILE__ <span class=\"comment\">//当前源文件名</span></span><br><span class=\"line\">__DATE__ <span class=\"comment\">//编译日期</span></span><br><span class=\"line\">__TIME__ <span class=\"comment\">//编译时间</span></span><br><span class=\"line\">__STDC__ <span class=\"comment\">//当要求程序严格遵守ANSI C标准时赋值为1</span></span><br><span class=\"line\">__cplusplus <span class=\"comment\">//当编写C++程序时该标识被定义</span></span><br></pre></td></tr></table></figure>\n"},{"title":"C++ 静态和动态链接库","date":"2019-12-27T04:25:05.000Z","update":null,"description":"Linux g++， Windows Visual Studio 创建和使用静态和动态链接库","_content":"\n## Linux\n\n### 静态链接库\n\n1. 创建文件\n\n      ```cpp\n      // hello.h\n      #ifndef HELLO_H\n      #define HELLO_H\n\n      void hello(const char *str);\n\n      #endif\n\n\n      // hello.cpp\n      #include <cstdio>\n\n      void hello(const char *str)\n      {\n          printf(\"%s\\n\", str);\n      }\n\n\n      //main.cpp\n      #include \"hello.h\"\n\n      int main()\n      {\n          hello(\"hello\");\n          return 0;\n      }\n      ```\n\n2. 静态库和动态库都由 .o 文件创建\n\n   ```bash\n   g++ -c hello.cpp\n   # nm -C hello.o\n   # U _GLOBAL_OFFSET_TABLE_\n   #                  U puts\n   # 0000000000000000 T hello(char const*)\n   ```\n\n3. 静态库命名 libxxx.a\n\n    ```bash\n   ar rcs libhello.a hello.o\n   # r[ab][f][u]  - replace existing or insert new file(s) into the archive\n   # [c]          - do not warn if the library had to be created\n   # [s]          - create an archive index (cf. ranlib)\n\n   g++ main.cpp -L. -l:libhello.a  -o main\n   ./main\n   ```\n\n### 动态链接库\n\n```bash\ng++ main.cpp -L. -l:libhello.so  -o main\n# g++: error trying to exec 'cc1plus': execvp: No such file or directory\n# solve -> sudo apt-get install g++\n\n./main\n# ./main: error while loading shared libraries: libhello.so: cannot open shared object file: No such file or directory\n# solve -> 1. add current path to /etc/ld/so.conf -> run ldconfig\n#          2. add current path to environment variable\n#             export LD_LIBRARY_PATH = $LD_LIBRARY_PATH:.\n```\n\n## Windows\n\n### 静态链接库\n\n>[reference](https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-static-library-cpp?view=vs-2019)\n\n#### 创建\n\n1. 新建static library项目\n   ![create static library](https://s2.ax1x.com/2019/12/28/leC0Dx.png)\n2. 添加一个对应的.h文件（eg. StaticLib.h）\n3. 在头文件中编写类或函数声明\n4. cpp中完成实现\n5. Build\n\n#### 使用\n\n   1. 创建一个新的 c++ console app 在同一个solution下\n      1. 在console项目上->右键->add->reference->选择StaticLib1\n      2. 在console项目上->右键->properties->general->C/C++->Additional Include Directories添加StaticLib目录\n      3. 在cpp中包含头文件`#include\"StaticLib1/StaticLib.h\"`\n   2. 在不同solution下\n      1. 将静态库的所有 .h .lib 文件复制到项目下\n      2. cpp中\n\n           ```cpp\n           #include \"StaticLib.h\"\n\n           #pragma comment(lib,\"StaticLib\")\n           //在同一个solution下也可使用该方法，可省去配置proerties\n           ```\n\n### 动态链接库\n\n>[reference](https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-dynamic-link-library-cpp?view=vs-2019)\n\n1. 基本方法同上\n2. 额外工作\n   1. properties->linker->General->Additional Library Directories->add Dynamic Lib folder\n   2. properties->linker->input->Additional Dependencies->DynamicLib.lib\n   3. copy .dll to Debug folder\n\n## Note\n\n### 链接库版本\n\n在其他项目中使用时，不能混用debug和release版本的dll\n\n### .h .lib .dll\n\n1. .h头文件是编译时必须的，lib是链接时需要的，dll是运行时需要的\n2. .h文件的作用：声明函数接口\n3. DLL文件作用：函数可执行代码\n4. LIB文件作用：当我们在自己的程序中引用了一个H文件里的函数,链接器怎么知 道该调用哪个DLL文件呢?这就是LIB文件的作用了。它告诉链接器调用的函数在哪个DLL中，函数执行代码在DLL中的什么位置，这也就是为什么需要附加依赖项.LIB文件，它起到桥梁的作用\n5. 如果是生成静态库文件，则没有DLL，只有lib，这时函数可执行代码部分也在lib文件中\n\n### gcc与g++\n\ng++在编译 .c 文件会去调用gcc","source":"_posts/C++ 静态和动态链接库.md","raw":"---\ntitle: C++ 静态和动态链接库\ndate: 2019-12-26 23:25:05\nupdate:\ntags: [C++,gcc,g++,Linux,Visual Studio,Windows]\ncategories: [C++]\ndescription: Linux g++， Windows Visual Studio 创建和使用静态和动态链接库\n---\n\n## Linux\n\n### 静态链接库\n\n1. 创建文件\n\n      ```cpp\n      // hello.h\n      #ifndef HELLO_H\n      #define HELLO_H\n\n      void hello(const char *str);\n\n      #endif\n\n\n      // hello.cpp\n      #include <cstdio>\n\n      void hello(const char *str)\n      {\n          printf(\"%s\\n\", str);\n      }\n\n\n      //main.cpp\n      #include \"hello.h\"\n\n      int main()\n      {\n          hello(\"hello\");\n          return 0;\n      }\n      ```\n\n2. 静态库和动态库都由 .o 文件创建\n\n   ```bash\n   g++ -c hello.cpp\n   # nm -C hello.o\n   # U _GLOBAL_OFFSET_TABLE_\n   #                  U puts\n   # 0000000000000000 T hello(char const*)\n   ```\n\n3. 静态库命名 libxxx.a\n\n    ```bash\n   ar rcs libhello.a hello.o\n   # r[ab][f][u]  - replace existing or insert new file(s) into the archive\n   # [c]          - do not warn if the library had to be created\n   # [s]          - create an archive index (cf. ranlib)\n\n   g++ main.cpp -L. -l:libhello.a  -o main\n   ./main\n   ```\n\n### 动态链接库\n\n```bash\ng++ main.cpp -L. -l:libhello.so  -o main\n# g++: error trying to exec 'cc1plus': execvp: No such file or directory\n# solve -> sudo apt-get install g++\n\n./main\n# ./main: error while loading shared libraries: libhello.so: cannot open shared object file: No such file or directory\n# solve -> 1. add current path to /etc/ld/so.conf -> run ldconfig\n#          2. add current path to environment variable\n#             export LD_LIBRARY_PATH = $LD_LIBRARY_PATH:.\n```\n\n## Windows\n\n### 静态链接库\n\n>[reference](https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-static-library-cpp?view=vs-2019)\n\n#### 创建\n\n1. 新建static library项目\n   ![create static library](https://s2.ax1x.com/2019/12/28/leC0Dx.png)\n2. 添加一个对应的.h文件（eg. StaticLib.h）\n3. 在头文件中编写类或函数声明\n4. cpp中完成实现\n5. Build\n\n#### 使用\n\n   1. 创建一个新的 c++ console app 在同一个solution下\n      1. 在console项目上->右键->add->reference->选择StaticLib1\n      2. 在console项目上->右键->properties->general->C/C++->Additional Include Directories添加StaticLib目录\n      3. 在cpp中包含头文件`#include\"StaticLib1/StaticLib.h\"`\n   2. 在不同solution下\n      1. 将静态库的所有 .h .lib 文件复制到项目下\n      2. cpp中\n\n           ```cpp\n           #include \"StaticLib.h\"\n\n           #pragma comment(lib,\"StaticLib\")\n           //在同一个solution下也可使用该方法，可省去配置proerties\n           ```\n\n### 动态链接库\n\n>[reference](https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-dynamic-link-library-cpp?view=vs-2019)\n\n1. 基本方法同上\n2. 额外工作\n   1. properties->linker->General->Additional Library Directories->add Dynamic Lib folder\n   2. properties->linker->input->Additional Dependencies->DynamicLib.lib\n   3. copy .dll to Debug folder\n\n## Note\n\n### 链接库版本\n\n在其他项目中使用时，不能混用debug和release版本的dll\n\n### .h .lib .dll\n\n1. .h头文件是编译时必须的，lib是链接时需要的，dll是运行时需要的\n2. .h文件的作用：声明函数接口\n3. DLL文件作用：函数可执行代码\n4. LIB文件作用：当我们在自己的程序中引用了一个H文件里的函数,链接器怎么知 道该调用哪个DLL文件呢?这就是LIB文件的作用了。它告诉链接器调用的函数在哪个DLL中，函数执行代码在DLL中的什么位置，这也就是为什么需要附加依赖项.LIB文件，它起到桥梁的作用\n5. 如果是生成静态库文件，则没有DLL，只有lib，这时函数可执行代码部分也在lib文件中\n\n### gcc与g++\n\ng++在编译 .c 文件会去调用gcc","slug":"C++ 静态和动态链接库","published":1,"updated":"2020-01-18T22:30:09.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9p0000imou5hfdm3n47","content":"<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><h3 id=\"静态链接库\"><a href=\"#静态链接库\" class=\"headerlink\" title=\"静态链接库\"></a>静态链接库</h3><ol>\n<li><p>创建文件</p>\n   <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// hello.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> HELLO_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> HELLO_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hello.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>, str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"hello.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    hello(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>静态库和动态库都由 .o 文件创建</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -c hello.cpp</span><br><span class=\"line\"><span class=\"comment\"># nm -C hello.o</span></span><br><span class=\"line\"><span class=\"comment\"># U _GLOBAL_OFFSET_TABLE_</span></span><br><span class=\"line\"><span class=\"comment\">#                  U puts</span></span><br><span class=\"line\"><span class=\"comment\"># 0000000000000000 T hello(char const*)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>静态库命名 libxxx.a</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ar rcs libhello.a hello.o</span><br><span class=\"line\"><span class=\"comment\"># r[ab][f][u]  - replace existing or insert new file(s) into the archive</span></span><br><span class=\"line\"><span class=\"comment\"># [c]          - do not warn if the library had to be created</span></span><br><span class=\"line\"><span class=\"comment\"># [s]          - create an archive index (cf. ranlib)</span></span><br><span class=\"line\"></span><br><span class=\"line\">g++ main.cpp -L. -l:libhello.a  -o main</span><br><span class=\"line\">./main</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"动态链接库\"><a href=\"#动态链接库\" class=\"headerlink\" title=\"动态链接库\"></a>动态链接库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ main.cpp -L. -l:libhello.so  -o main</span><br><span class=\"line\"><span class=\"comment\"># g++: error trying to exec 'cc1plus': execvp: No such file or directory</span></span><br><span class=\"line\"><span class=\"comment\"># solve -&gt; sudo apt-get install g++</span></span><br><span class=\"line\"></span><br><span class=\"line\">./main</span><br><span class=\"line\"><span class=\"comment\"># ./main: error while loading shared libraries: libhello.so: cannot open shared object file: No such file or directory</span></span><br><span class=\"line\"><span class=\"comment\"># solve -&gt; 1. add current path to /etc/ld/so.conf -&gt; run ldconfig</span></span><br><span class=\"line\"><span class=\"comment\">#          2. add current path to environment variable</span></span><br><span class=\"line\"><span class=\"comment\">#             export LD_LIBRARY_PATH = $LD_LIBRARY_PATH:.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><h3 id=\"静态链接库-1\"><a href=\"#静态链接库-1\" class=\"headerlink\" title=\"静态链接库\"></a>静态链接库</h3><blockquote>\n<p><a href=\"https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-static-library-cpp?view=vs-2019\" target=\"_blank\" rel=\"noopener\">reference</a></p>\n</blockquote>\n<h4 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h4><ol>\n<li>新建static library项目<br><img src=\"https://s2.ax1x.com/2019/12/28/leC0Dx.png\" alt=\"create static library\"></li>\n<li>添加一个对应的.h文件（eg. StaticLib.h）</li>\n<li>在头文件中编写类或函数声明</li>\n<li>cpp中完成实现</li>\n<li>Build</li>\n</ol>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><ol>\n<li>创建一个新的 c++ console app 在同一个solution下<ol>\n<li>在console项目上-&gt;右键-&gt;add-&gt;reference-&gt;选择StaticLib1</li>\n<li>在console项目上-&gt;右键-&gt;properties-&gt;general-&gt;C/C++-&gt;Additional Include Directories添加StaticLib目录</li>\n<li>在cpp中包含头文件<code>#include&quot;StaticLib1/StaticLib.h&quot;</code></li>\n</ol>\n</li>\n<li><p>在不同solution下</p>\n<ol>\n<li>将静态库的所有 .h .lib 文件复制到项目下</li>\n<li><p>cpp中</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"StaticLib.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> comment(lib,<span class=\"meta-string\">\"StaticLib\"</span>)</span></span><br><span class=\"line\"><span class=\"comment\">//在同一个solution下也可使用该方法，可省去配置proerties</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"动态链接库-1\"><a href=\"#动态链接库-1\" class=\"headerlink\" title=\"动态链接库\"></a>动态链接库</h3><blockquote>\n<p><a href=\"https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-dynamic-link-library-cpp?view=vs-2019\" target=\"_blank\" rel=\"noopener\">reference</a></p>\n</blockquote>\n<ol>\n<li>基本方法同上</li>\n<li>额外工作<ol>\n<li>properties-&gt;linker-&gt;General-&gt;Additional Library Directories-&gt;add Dynamic Lib folder</li>\n<li>properties-&gt;linker-&gt;input-&gt;Additional Dependencies-&gt;DynamicLib.lib</li>\n<li>copy .dll to Debug folder</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><h3 id=\"链接库版本\"><a href=\"#链接库版本\" class=\"headerlink\" title=\"链接库版本\"></a>链接库版本</h3><p>在其他项目中使用时，不能混用debug和release版本的dll</p>\n<h3 id=\"h-lib-dll\"><a href=\"#h-lib-dll\" class=\"headerlink\" title=\".h .lib .dll\"></a>.h .lib .dll</h3><ol>\n<li>.h头文件是编译时必须的，lib是链接时需要的，dll是运行时需要的</li>\n<li>.h文件的作用：声明函数接口</li>\n<li>DLL文件作用：函数可执行代码</li>\n<li>LIB文件作用：当我们在自己的程序中引用了一个H文件里的函数,链接器怎么知 道该调用哪个DLL文件呢?这就是LIB文件的作用了。它告诉链接器调用的函数在哪个DLL中，函数执行代码在DLL中的什么位置，这也就是为什么需要附加依赖项.LIB文件，它起到桥梁的作用</li>\n<li>如果是生成静态库文件，则没有DLL，只有lib，这时函数可执行代码部分也在lib文件中</li>\n</ol>\n<h3 id=\"gcc与g\"><a href=\"#gcc与g\" class=\"headerlink\" title=\"gcc与g++\"></a>gcc与g++</h3><p>g++在编译 .c 文件会去调用gcc</p>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":1986,"excerpt":"","more":"<h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><h3 id=\"静态链接库\"><a href=\"#静态链接库\" class=\"headerlink\" title=\"静态链接库\"></a>静态链接库</h3><ol>\n<li><p>创建文件</p>\n   <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// hello.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> HELLO_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> HELLO_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// hello.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">hello</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>, str);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"hello.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    hello(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>静态库和动态库都由 .o 文件创建</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ -c hello.cpp</span><br><span class=\"line\"><span class=\"comment\"># nm -C hello.o</span></span><br><span class=\"line\"><span class=\"comment\"># U _GLOBAL_OFFSET_TABLE_</span></span><br><span class=\"line\"><span class=\"comment\">#                  U puts</span></span><br><span class=\"line\"><span class=\"comment\"># 0000000000000000 T hello(char const*)</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>静态库命名 libxxx.a</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ar rcs libhello.a hello.o</span><br><span class=\"line\"><span class=\"comment\"># r[ab][f][u]  - replace existing or insert new file(s) into the archive</span></span><br><span class=\"line\"><span class=\"comment\"># [c]          - do not warn if the library had to be created</span></span><br><span class=\"line\"><span class=\"comment\"># [s]          - create an archive index (cf. ranlib)</span></span><br><span class=\"line\"></span><br><span class=\"line\">g++ main.cpp -L. -l:libhello.a  -o main</span><br><span class=\"line\">./main</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"动态链接库\"><a href=\"#动态链接库\" class=\"headerlink\" title=\"动态链接库\"></a>动态链接库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g++ main.cpp -L. -l:libhello.so  -o main</span><br><span class=\"line\"><span class=\"comment\"># g++: error trying to exec 'cc1plus': execvp: No such file or directory</span></span><br><span class=\"line\"><span class=\"comment\"># solve -&gt; sudo apt-get install g++</span></span><br><span class=\"line\"></span><br><span class=\"line\">./main</span><br><span class=\"line\"><span class=\"comment\"># ./main: error while loading shared libraries: libhello.so: cannot open shared object file: No such file or directory</span></span><br><span class=\"line\"><span class=\"comment\"># solve -&gt; 1. add current path to /etc/ld/so.conf -&gt; run ldconfig</span></span><br><span class=\"line\"><span class=\"comment\">#          2. add current path to environment variable</span></span><br><span class=\"line\"><span class=\"comment\">#             export LD_LIBRARY_PATH = $LD_LIBRARY_PATH:.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><h3 id=\"静态链接库-1\"><a href=\"#静态链接库-1\" class=\"headerlink\" title=\"静态链接库\"></a>静态链接库</h3><blockquote>\n<p><a href=\"https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-static-library-cpp?view=vs-2019\" target=\"_blank\" rel=\"noopener\">reference</a></p>\n</blockquote>\n<h4 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h4><ol>\n<li>新建static library项目<br><img src=\"https://s2.ax1x.com/2019/12/28/leC0Dx.png\" alt=\"create static library\"></li>\n<li>添加一个对应的.h文件（eg. StaticLib.h）</li>\n<li>在头文件中编写类或函数声明</li>\n<li>cpp中完成实现</li>\n<li>Build</li>\n</ol>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><ol>\n<li>创建一个新的 c++ console app 在同一个solution下<ol>\n<li>在console项目上-&gt;右键-&gt;add-&gt;reference-&gt;选择StaticLib1</li>\n<li>在console项目上-&gt;右键-&gt;properties-&gt;general-&gt;C/C++-&gt;Additional Include Directories添加StaticLib目录</li>\n<li>在cpp中包含头文件<code>#include&quot;StaticLib1/StaticLib.h&quot;</code></li>\n</ol>\n</li>\n<li><p>在不同solution下</p>\n<ol>\n<li>将静态库的所有 .h .lib 文件复制到项目下</li>\n<li><p>cpp中</p>\n  <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"StaticLib.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">pragma</span> comment(lib,<span class=\"meta-string\">\"StaticLib\"</span>)</span></span><br><span class=\"line\"><span class=\"comment\">//在同一个solution下也可使用该方法，可省去配置proerties</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"动态链接库-1\"><a href=\"#动态链接库-1\" class=\"headerlink\" title=\"动态链接库\"></a>动态链接库</h3><blockquote>\n<p><a href=\"https://docs.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-dynamic-link-library-cpp?view=vs-2019\" target=\"_blank\" rel=\"noopener\">reference</a></p>\n</blockquote>\n<ol>\n<li>基本方法同上</li>\n<li>额外工作<ol>\n<li>properties-&gt;linker-&gt;General-&gt;Additional Library Directories-&gt;add Dynamic Lib folder</li>\n<li>properties-&gt;linker-&gt;input-&gt;Additional Dependencies-&gt;DynamicLib.lib</li>\n<li>copy .dll to Debug folder</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h2><h3 id=\"链接库版本\"><a href=\"#链接库版本\" class=\"headerlink\" title=\"链接库版本\"></a>链接库版本</h3><p>在其他项目中使用时，不能混用debug和release版本的dll</p>\n<h3 id=\"h-lib-dll\"><a href=\"#h-lib-dll\" class=\"headerlink\" title=\".h .lib .dll\"></a>.h .lib .dll</h3><ol>\n<li>.h头文件是编译时必须的，lib是链接时需要的，dll是运行时需要的</li>\n<li>.h文件的作用：声明函数接口</li>\n<li>DLL文件作用：函数可执行代码</li>\n<li>LIB文件作用：当我们在自己的程序中引用了一个H文件里的函数,链接器怎么知 道该调用哪个DLL文件呢?这就是LIB文件的作用了。它告诉链接器调用的函数在哪个DLL中，函数执行代码在DLL中的什么位置，这也就是为什么需要附加依赖项.LIB文件，它起到桥梁的作用</li>\n<li>如果是生成静态库文件，则没有DLL，只有lib，这时函数可执行代码部分也在lib文件中</li>\n</ol>\n<h3 id=\"gcc与g\"><a href=\"#gcc与g\" class=\"headerlink\" title=\"gcc与g++\"></a>gcc与g++</h3><p>g++在编译 .c 文件会去调用gcc</p>\n"},{"title":"C与C++语法区别","date":"2020-01-27T16:48:44.000Z","update":null,"description":null,"_content":"\n","source":"_posts/C与C++语法区别.md","raw":"---\ntitle: C与C++语法区别\ndate: 2020-01-27 11:48:44\nupdate:\ntags:\ncategories:\ndescription:\n---\n\n","slug":"C与C++语法区别","published":1,"updated":"2020-01-27T16:48:44.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9p1000mmou55g9i43m5","content":"","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":0,"excerpt":"","more":""},{"title":"Leetcode 刷题技巧","date":"2020-01-22T01:48:47.000Z","update":null,"description":"刷题总结","_content":"\n## std\n\n1. partation() 将容器分为两部分，返回第二部分的首个元素的迭代器\n\n## 数据结构\n\n1. 模运算很慢，如需判断 n%2 可已判断 n&1\n2. 在不需要顺序的情况下，使用 unordered_map, unordered_set\n3. 数组记得初始化\n\n## 题目分类技巧\n\n### string\n\n1. stringstream 类可用来分隔字符串\n2. 尽量在原字符串上操作，减少空间消耗\n3. 匹配问题\n   1. stack\n   2. 两个指针\n   3. 对称计数\n","source":"_posts/Leetcode 刷题技巧.md","raw":"---\ntitle: Leetcode 刷题技巧\ndate: 2020-01-21 20:48:47\nupdate:\ntags: [LeetCode, C++]\ncategories: C++\ndescription: 刷题总结\n---\n\n## std\n\n1. partation() 将容器分为两部分，返回第二部分的首个元素的迭代器\n\n## 数据结构\n\n1. 模运算很慢，如需判断 n%2 可已判断 n&1\n2. 在不需要顺序的情况下，使用 unordered_map, unordered_set\n3. 数组记得初始化\n\n## 题目分类技巧\n\n### string\n\n1. stringstream 类可用来分隔字符串\n2. 尽量在原字符串上操作，减少空间消耗\n3. 匹配问题\n   1. stack\n   2. 两个指针\n   3. 对称计数\n","slug":"Leetcode 刷题技巧","published":1,"updated":"2020-01-24T01:18:17.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9p3000nmou5d0u7068i","content":"<h2 id=\"std\"><a href=\"#std\" class=\"headerlink\" title=\"std\"></a>std</h2><ol>\n<li>partation() 将容器分为两部分，返回第二部分的首个元素的迭代器</li>\n</ol>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><ol>\n<li>模运算很慢，如需判断 n%2 可已判断 n&amp;1</li>\n<li>在不需要顺序的情况下，使用 unordered_map, unordered_set</li>\n<li>数组记得初始化</li>\n</ol>\n<h2 id=\"题目分类技巧\"><a href=\"#题目分类技巧\" class=\"headerlink\" title=\"题目分类技巧\"></a>题目分类技巧</h2><h3 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h3><ol>\n<li>stringstream 类可用来分隔字符串</li>\n<li>尽量在原字符串上操作，减少空间消耗</li>\n<li>匹配问题<ol>\n<li>stack</li>\n<li>两个指针</li>\n<li>对称计数</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":180,"excerpt":"","more":"<h2 id=\"std\"><a href=\"#std\" class=\"headerlink\" title=\"std\"></a>std</h2><ol>\n<li>partation() 将容器分为两部分，返回第二部分的首个元素的迭代器</li>\n</ol>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><ol>\n<li>模运算很慢，如需判断 n%2 可已判断 n&amp;1</li>\n<li>在不需要顺序的情况下，使用 unordered_map, unordered_set</li>\n<li>数组记得初始化</li>\n</ol>\n<h2 id=\"题目分类技巧\"><a href=\"#题目分类技巧\" class=\"headerlink\" title=\"题目分类技巧\"></a>题目分类技巧</h2><h3 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h3><ol>\n<li>stringstream 类可用来分隔字符串</li>\n<li>尽量在原字符串上操作，减少空间消耗</li>\n<li>匹配问题<ol>\n<li>stack</li>\n<li>两个指针</li>\n<li>对称计数</li>\n</ol>\n</li>\n</ol>\n"},{"title":"Debian10 双网卡配置","date":"2019-12-26T02:37:06.000Z","update":null,"description":"debian10，virtualbox 配置双网卡，能ping通物理机和外网","_content":"\n## 配置VirtualBox双网卡\n\n### set VM network adapter (nat netwok and host-only)\n\nnat network用于链接外网\n\n![nat network用于链接外网](https://s2.ax1x.com/2019/12/29/lnhvu9.png)\n\nhost-only用于与物理机通信\n\n![host-only用于与物理机通信](https://s2.ax1x.com/2019/12/29/ln4AjH.png)\n\n### 查看网卡名称\n\n   ![查看网卡名称](https://s2.ax1x.com/2019/12/29/ln42Ux.png)\n\n   可看到三个网卡\n\n   1. lo 回环网络\n   2. enp0s3\n   3. enp0s8\n\n### 编辑/etc/network/interfaces文件\n\n```bash\nsudo vim /etc/network/interfaces\n\n# for centos\nsudo vim /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n![/etc/network/interfaces](https://s2.ax1x.com/2019/12/29/lnIClD.png)\n\n`重启 $ sudo reboot`\n","source":"_posts/Linux Debian10网络配置.md","raw":"---\ntitle: Debian10 双网卡配置\ndate: 2019-12-25 21:37:06\nupdate:\ntags: [Linux,Debian,Network,Virtual Box]\ncategories: Linux\ndescription: debian10，virtualbox 配置双网卡，能ping通物理机和外网\n---\n\n## 配置VirtualBox双网卡\n\n### set VM network adapter (nat netwok and host-only)\n\nnat network用于链接外网\n\n![nat network用于链接外网](https://s2.ax1x.com/2019/12/29/lnhvu9.png)\n\nhost-only用于与物理机通信\n\n![host-only用于与物理机通信](https://s2.ax1x.com/2019/12/29/ln4AjH.png)\n\n### 查看网卡名称\n\n   ![查看网卡名称](https://s2.ax1x.com/2019/12/29/ln42Ux.png)\n\n   可看到三个网卡\n\n   1. lo 回环网络\n   2. enp0s3\n   3. enp0s8\n\n### 编辑/etc/network/interfaces文件\n\n```bash\nsudo vim /etc/network/interfaces\n\n# for centos\nsudo vim /etc/sysconfig/network-scripts/ifcfg-enp0s3\n```\n\n![/etc/network/interfaces](https://s2.ax1x.com/2019/12/29/lnIClD.png)\n\n`重启 $ sudo reboot`\n","slug":"Linux Debian10网络配置","published":1,"updated":"2020-01-17T03:01:46.820Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9p4000rmou52qen5api","content":"<h2 id=\"配置VirtualBox双网卡\"><a href=\"#配置VirtualBox双网卡\" class=\"headerlink\" title=\"配置VirtualBox双网卡\"></a>配置VirtualBox双网卡</h2><h3 id=\"set-VM-network-adapter-nat-netwok-and-host-only\"><a href=\"#set-VM-network-adapter-nat-netwok-and-host-only\" class=\"headerlink\" title=\"set VM network adapter (nat netwok and host-only)\"></a>set VM network adapter (nat netwok and host-only)</h3><p>nat network用于链接外网</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/lnhvu9.png\" alt=\"nat network用于链接外网\"></p>\n<p>host-only用于与物理机通信</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/ln4AjH.png\" alt=\"host-only用于与物理机通信\"></p>\n<h3 id=\"查看网卡名称\"><a href=\"#查看网卡名称\" class=\"headerlink\" title=\"查看网卡名称\"></a>查看网卡名称</h3><p>   <img src=\"https://s2.ax1x.com/2019/12/29/ln42Ux.png\" alt=\"查看网卡名称\"></p>\n<p>   可看到三个网卡</p>\n<ol>\n<li>lo 回环网络</li>\n<li>enp0s3</li>\n<li>enp0s8</li>\n</ol>\n<h3 id=\"编辑-etc-network-interfaces文件\"><a href=\"#编辑-etc-network-interfaces文件\" class=\"headerlink\" title=\"编辑/etc/network/interfaces文件\"></a>编辑/etc/network/interfaces文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/network/interfaces</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for centos</span></span><br><span class=\"line\">sudo vim /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/lnIClD.png\" alt=\"/etc/network/interfaces\"></p>\n<p><code>重启 $ sudo reboot</code></p>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":255,"excerpt":"","more":"<h2 id=\"配置VirtualBox双网卡\"><a href=\"#配置VirtualBox双网卡\" class=\"headerlink\" title=\"配置VirtualBox双网卡\"></a>配置VirtualBox双网卡</h2><h3 id=\"set-VM-network-adapter-nat-netwok-and-host-only\"><a href=\"#set-VM-network-adapter-nat-netwok-and-host-only\" class=\"headerlink\" title=\"set VM network adapter (nat netwok and host-only)\"></a>set VM network adapter (nat netwok and host-only)</h3><p>nat network用于链接外网</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/lnhvu9.png\" alt=\"nat network用于链接外网\"></p>\n<p>host-only用于与物理机通信</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/ln4AjH.png\" alt=\"host-only用于与物理机通信\"></p>\n<h3 id=\"查看网卡名称\"><a href=\"#查看网卡名称\" class=\"headerlink\" title=\"查看网卡名称\"></a>查看网卡名称</h3><p>   <img src=\"https://s2.ax1x.com/2019/12/29/ln42Ux.png\" alt=\"查看网卡名称\"></p>\n<p>   可看到三个网卡</p>\n<ol>\n<li>lo 回环网络</li>\n<li>enp0s3</li>\n<li>enp0s8</li>\n</ol>\n<h3 id=\"编辑-etc-network-interfaces文件\"><a href=\"#编辑-etc-network-interfaces文件\" class=\"headerlink\" title=\"编辑/etc/network/interfaces文件\"></a>编辑/etc/network/interfaces文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/network/interfaces</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for centos</span></span><br><span class=\"line\">sudo vim /etc/sysconfig/network-scripts/ifcfg-enp0s3</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/lnIClD.png\" alt=\"/etc/network/interfaces\"></p>\n<p><code>重启 $ sudo reboot</code></p>\n"},{"title":"linux bash&shell","date":"2020-01-09T00:31:54.000Z","update":null,"description":"bash & shell","_content":"\n## bash 变量\n\n### 设置规则\n\n1. 变量与变量内容以 = 连接\n2. 等号两边不能直接接空白字符\n3. 变量名只能是英文字母和数字，且以字母开头\n4. 变量内容若有空白字符可以使用双引号或单引号将变量内容结合起来\n   1. 双引号`\"\"`内的特殊字符，保留原本的特性\n   2. 单引号`''`内的特殊字符作为一般字符\n5. 可以用 \\ 将特殊字符变为一般字符\n6. 在一串指令的执行中，还需要借由其他额外指令提供信息，可使用 $(指令)\n7. 可累加内容`PATH=$PATH:newpath`\n8. 若该变量需要在其他子程序执行，则需要以export来使变量编程环境变量\n9. 通常大写名称的变量为系统默认变量\n   1. PATH\n   2. HOME\n   3. SHELL\n   4. HISTSIZE\n   5. LANG\n   6. PS1 提示符设置，就是命令行前的 $ 的设置\n10. 可使用 unset 变量名 取消变量设置\n\n## 数据流重导向\n\n![数据流重导向](https://s2.ax1x.com/2020/01/09/lfdiqS.png)\n\n1. 标准输入 < << 两个箭头为累加，一个为覆盖\n2. 标准输出 > >>\n3. 标准错误输出 > >>\n\n## 连续命令执行\n\n```bash\ncmd1;cmd2 # 连续执行\n\ncmd1&&cmd2 # 当cmd1执行且指令回传值 $?=0 即正常执行，执行cmd2\n\ncmd1||cmd2 # 若cmd正常执行cmd2不执行，否则cmd2执行\n```\n\n## 管线命令 pipe\n\n管线命令使用界定符 | 将上一次的输出作为下一次的输入\n\n![pipe](https://s2.ax1x.com/2020/01/24/1VX9Re.png)\n\n## shell\n\n```bash\nvim hello.sh\n#!/bin/bash\n#Program:\n#       Print Hello World\n#History:\n#01/24/2020    username    v1.0\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:usr/local/sbin:~/bin\nexport PATH\necho -e \"Hello World!\\n\"\nexit 0\n\nsh hello.sh\n```\n\n程序说明\n\n1. `#!/bin/bash` 非必要，说明该script使用的shell名称，此处为bash\n2. `#Program:` 非必要\n3. `#History:` 非必要\n4. `PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:usr/local/sbin:~/bin` 非必要，主要环境变量\n5. 主程序\n6. `exit 0` 回传值\n\nscript三种执行方式\n\n1. sh 在新子bash中执行，结果无法返回到当前bash\n   1. 在debian系，sh 调用为 dash 不是 bash\n2. ./\n   1. 调用脚本开头`#!/bin/bash` 设定的shell\n3. source 在当前bash中执行\n\nscript的默认变量\n\n1. ```bash\n   sh script arg1   arg2   arg3   arg4\n        $0    $1     $2     $3     $4\n   ```\n\n2. $# 参数个数，此处为 4\n3. $@ 代表\"$1\" \"$2\" \"$3\" \"$4\" 每个变量是独立的\n4. $* 代表 \"$1 $2 $3 $4\"\n5. 脚本中可用shift x 移除前x个参数，不加个数x时默认为1个\n\n条件\n\n```bash\nif [condition]; then\n    code\nelif [condition]; then\n    code\nelse\n    code\nfi\n\n\ncase $var in\n    \"xxx1\")\n    code\n    ;;\n    \"xxx2\")\n    code\n    ;;\n    *)\n    code\n    ;;\nesac\n```\n\n循环\n\n```bash\nwhile [condigion]\ndo\n    code\ndone\n\n\nuntil [condition]\ndo\n    code\ndone\n\n\nfor var in con1 con2 con3 ...\ndo\n    code\ndone\n\n\nfor((初值; 条件; 变化))\ndo\n    code\ndone\n```\n\n函数\n\n```bash\nfunction func()\n{\n    code\n}\n\nfunct arg1 arg2\n```\n\nshell 的debug\n\n```bash\nsh -nvx script.sh\n# -n 仅检查语法不执行\n# -v 执行前将脚本内容输出\n# -x 将使用到的脚本内容输出\n```\n","source":"_posts/Linux bash&shell.md","raw":"---\ntitle: linux bash&shell\ndate: 2020-01-08 19:31:54\nupdate: \ntags: [Linux,bash,shell]\ncategories: Linux\ndescription: bash & shell\n---\n\n## bash 变量\n\n### 设置规则\n\n1. 变量与变量内容以 = 连接\n2. 等号两边不能直接接空白字符\n3. 变量名只能是英文字母和数字，且以字母开头\n4. 变量内容若有空白字符可以使用双引号或单引号将变量内容结合起来\n   1. 双引号`\"\"`内的特殊字符，保留原本的特性\n   2. 单引号`''`内的特殊字符作为一般字符\n5. 可以用 \\ 将特殊字符变为一般字符\n6. 在一串指令的执行中，还需要借由其他额外指令提供信息，可使用 $(指令)\n7. 可累加内容`PATH=$PATH:newpath`\n8. 若该变量需要在其他子程序执行，则需要以export来使变量编程环境变量\n9. 通常大写名称的变量为系统默认变量\n   1. PATH\n   2. HOME\n   3. SHELL\n   4. HISTSIZE\n   5. LANG\n   6. PS1 提示符设置，就是命令行前的 $ 的设置\n10. 可使用 unset 变量名 取消变量设置\n\n## 数据流重导向\n\n![数据流重导向](https://s2.ax1x.com/2020/01/09/lfdiqS.png)\n\n1. 标准输入 < << 两个箭头为累加，一个为覆盖\n2. 标准输出 > >>\n3. 标准错误输出 > >>\n\n## 连续命令执行\n\n```bash\ncmd1;cmd2 # 连续执行\n\ncmd1&&cmd2 # 当cmd1执行且指令回传值 $?=0 即正常执行，执行cmd2\n\ncmd1||cmd2 # 若cmd正常执行cmd2不执行，否则cmd2执行\n```\n\n## 管线命令 pipe\n\n管线命令使用界定符 | 将上一次的输出作为下一次的输入\n\n![pipe](https://s2.ax1x.com/2020/01/24/1VX9Re.png)\n\n## shell\n\n```bash\nvim hello.sh\n#!/bin/bash\n#Program:\n#       Print Hello World\n#History:\n#01/24/2020    username    v1.0\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:usr/local/sbin:~/bin\nexport PATH\necho -e \"Hello World!\\n\"\nexit 0\n\nsh hello.sh\n```\n\n程序说明\n\n1. `#!/bin/bash` 非必要，说明该script使用的shell名称，此处为bash\n2. `#Program:` 非必要\n3. `#History:` 非必要\n4. `PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:usr/local/sbin:~/bin` 非必要，主要环境变量\n5. 主程序\n6. `exit 0` 回传值\n\nscript三种执行方式\n\n1. sh 在新子bash中执行，结果无法返回到当前bash\n   1. 在debian系，sh 调用为 dash 不是 bash\n2. ./\n   1. 调用脚本开头`#!/bin/bash` 设定的shell\n3. source 在当前bash中执行\n\nscript的默认变量\n\n1. ```bash\n   sh script arg1   arg2   arg3   arg4\n        $0    $1     $2     $3     $4\n   ```\n\n2. $# 参数个数，此处为 4\n3. $@ 代表\"$1\" \"$2\" \"$3\" \"$4\" 每个变量是独立的\n4. $* 代表 \"$1 $2 $3 $4\"\n5. 脚本中可用shift x 移除前x个参数，不加个数x时默认为1个\n\n条件\n\n```bash\nif [condition]; then\n    code\nelif [condition]; then\n    code\nelse\n    code\nfi\n\n\ncase $var in\n    \"xxx1\")\n    code\n    ;;\n    \"xxx2\")\n    code\n    ;;\n    *)\n    code\n    ;;\nesac\n```\n\n循环\n\n```bash\nwhile [condigion]\ndo\n    code\ndone\n\n\nuntil [condition]\ndo\n    code\ndone\n\n\nfor var in con1 con2 con3 ...\ndo\n    code\ndone\n\n\nfor((初值; 条件; 变化))\ndo\n    code\ndone\n```\n\n函数\n\n```bash\nfunction func()\n{\n    code\n}\n\nfunct arg1 arg2\n```\n\nshell 的debug\n\n```bash\nsh -nvx script.sh\n# -n 仅检查语法不执行\n# -v 执行前将脚本内容输出\n# -x 将使用到的脚本内容输出\n```\n","slug":"Linux bash&shell","published":1,"updated":"2020-01-24T20:48:55.924Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9p6000umou5gnekere6","content":"<h2 id=\"bash-变量\"><a href=\"#bash-变量\" class=\"headerlink\" title=\"bash 变量\"></a>bash 变量</h2><h3 id=\"设置规则\"><a href=\"#设置规则\" class=\"headerlink\" title=\"设置规则\"></a>设置规则</h3><ol>\n<li>变量与变量内容以 = 连接</li>\n<li>等号两边不能直接接空白字符</li>\n<li>变量名只能是英文字母和数字，且以字母开头</li>\n<li>变量内容若有空白字符可以使用双引号或单引号将变量内容结合起来<ol>\n<li>双引号<code>&quot;&quot;</code>内的特殊字符，保留原本的特性</li>\n<li>单引号<code>&#39;&#39;</code>内的特殊字符作为一般字符</li>\n</ol>\n</li>\n<li>可以用 \\ 将特殊字符变为一般字符</li>\n<li>在一串指令的执行中，还需要借由其他额外指令提供信息，可使用 $(指令)</li>\n<li>可累加内容<code>PATH=$PATH:newpath</code></li>\n<li>若该变量需要在其他子程序执行，则需要以export来使变量编程环境变量</li>\n<li>通常大写名称的变量为系统默认变量<ol>\n<li>PATH</li>\n<li>HOME</li>\n<li>SHELL</li>\n<li>HISTSIZE</li>\n<li>LANG</li>\n<li>PS1 提示符设置，就是命令行前的 $ 的设置</li>\n</ol>\n</li>\n<li>可使用 unset 变量名 取消变量设置</li>\n</ol>\n<h2 id=\"数据流重导向\"><a href=\"#数据流重导向\" class=\"headerlink\" title=\"数据流重导向\"></a>数据流重导向</h2><p><img src=\"https://s2.ax1x.com/2020/01/09/lfdiqS.png\" alt=\"数据流重导向\"></p>\n<ol>\n<li>标准输入 &lt; &lt;&lt; 两个箭头为累加，一个为覆盖</li>\n<li>标准输出 &gt; &gt;&gt;</li>\n<li>标准错误输出 &gt; &gt;&gt;</li>\n</ol>\n<h2 id=\"连续命令执行\"><a href=\"#连续命令执行\" class=\"headerlink\" title=\"连续命令执行\"></a>连续命令执行</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd1;cmd2 <span class=\"comment\"># 连续执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">cmd1&amp;&amp;cmd2 <span class=\"comment\"># 当cmd1执行且指令回传值 $?=0 即正常执行，执行cmd2</span></span><br><span class=\"line\"></span><br><span class=\"line\">cmd1||cmd2 <span class=\"comment\"># 若cmd正常执行cmd2不执行，否则cmd2执行</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"管线命令-pipe\"><a href=\"#管线命令-pipe\" class=\"headerlink\" title=\"管线命令 pipe\"></a>管线命令 pipe</h2><p>管线命令使用界定符 | 将上一次的输出作为下一次的输入</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/24/1VX9Re.png\" alt=\"pipe\"></p>\n<h2 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim hello.sh</span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Program:</span></span><br><span class=\"line\"><span class=\"comment\">#       Print Hello World</span></span><br><span class=\"line\"><span class=\"comment\">#History:</span></span><br><span class=\"line\"><span class=\"comment\">#01/24/2020    username    v1.0</span></span><br><span class=\"line\">PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/<span class=\"built_in\">local</span>/bin:usr/<span class=\"built_in\">local</span>/sbin:~/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"Hello World!\\n\"</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"></span><br><span class=\"line\">sh hello.sh</span><br></pre></td></tr></table></figure>\n<p>程序说明</p>\n<ol>\n<li><code>#!/bin/bash</code> 非必要，说明该script使用的shell名称，此处为bash</li>\n<li><code>#Program:</code> 非必要</li>\n<li><code>#History:</code> 非必要</li>\n<li><code>PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:usr/local/sbin:~/bin</code> 非必要，主要环境变量</li>\n<li>主程序</li>\n<li><code>exit 0</code> 回传值</li>\n</ol>\n<p>script三种执行方式</p>\n<ol>\n<li>sh 在新子bash中执行，结果无法返回到当前bash<ol>\n<li>在debian系，sh 调用为 dash 不是 bash</li>\n</ol>\n</li>\n<li>./<ol>\n<li>调用脚本开头<code>#!/bin/bash</code> 设定的shell</li>\n</ol>\n</li>\n<li>source 在当前bash中执行</li>\n</ol>\n<p>script的默认变量</p>\n<ol>\n<li>```bash<br>sh script arg1   arg2   arg3   arg4<pre><code> $0    $1     $2     $3     $4\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">2. $# 参数个数，此处为 4</span><br><span class=\"line\">3. $@ 代表&quot;$1&quot; &quot;$2&quot; &quot;$3&quot; &quot;$4&quot; 每个变量是独立的</span><br><span class=\"line\">4. $* 代表 &quot;$1 $2 $3 $4&quot;</span><br><span class=\"line\">5. 脚本中可用shift x 移除前x个参数，不加个数x时默认为1个</span><br><span class=\"line\"></span><br><span class=\"line\">条件</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;bash</span><br><span class=\"line\">if [condition]; then</span><br><span class=\"line\">    code</span><br><span class=\"line\">elif [condition]; then</span><br><span class=\"line\">    code</span><br><span class=\"line\">else</span><br><span class=\"line\">    code</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">case $var in</span><br><span class=\"line\">    &quot;xxx1&quot;)</span><br><span class=\"line\">    code</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">    &quot;xxx2&quot;)</span><br><span class=\"line\">    code</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">    code</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>循环</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> [condigion]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">until [condition]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> con1 con2 con3 ...</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>((初值; 条件; 变化))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>函数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> func()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    code</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">funct arg1 arg2</span><br></pre></td></tr></table></figure>\n<p>shell 的debug</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -nvx script.sh</span><br><span class=\"line\"><span class=\"comment\"># -n 仅检查语法不执行</span></span><br><span class=\"line\"><span class=\"comment\"># -v 执行前将脚本内容输出</span></span><br><span class=\"line\"><span class=\"comment\"># -x 将使用到的脚本内容输出</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":1667,"excerpt":"","more":"<h2 id=\"bash-变量\"><a href=\"#bash-变量\" class=\"headerlink\" title=\"bash 变量\"></a>bash 变量</h2><h3 id=\"设置规则\"><a href=\"#设置规则\" class=\"headerlink\" title=\"设置规则\"></a>设置规则</h3><ol>\n<li>变量与变量内容以 = 连接</li>\n<li>等号两边不能直接接空白字符</li>\n<li>变量名只能是英文字母和数字，且以字母开头</li>\n<li>变量内容若有空白字符可以使用双引号或单引号将变量内容结合起来<ol>\n<li>双引号<code>&quot;&quot;</code>内的特殊字符，保留原本的特性</li>\n<li>单引号<code>&#39;&#39;</code>内的特殊字符作为一般字符</li>\n</ol>\n</li>\n<li>可以用 \\ 将特殊字符变为一般字符</li>\n<li>在一串指令的执行中，还需要借由其他额外指令提供信息，可使用 $(指令)</li>\n<li>可累加内容<code>PATH=$PATH:newpath</code></li>\n<li>若该变量需要在其他子程序执行，则需要以export来使变量编程环境变量</li>\n<li>通常大写名称的变量为系统默认变量<ol>\n<li>PATH</li>\n<li>HOME</li>\n<li>SHELL</li>\n<li>HISTSIZE</li>\n<li>LANG</li>\n<li>PS1 提示符设置，就是命令行前的 $ 的设置</li>\n</ol>\n</li>\n<li>可使用 unset 变量名 取消变量设置</li>\n</ol>\n<h2 id=\"数据流重导向\"><a href=\"#数据流重导向\" class=\"headerlink\" title=\"数据流重导向\"></a>数据流重导向</h2><p><img src=\"https://s2.ax1x.com/2020/01/09/lfdiqS.png\" alt=\"数据流重导向\"></p>\n<ol>\n<li>标准输入 &lt; &lt;&lt; 两个箭头为累加，一个为覆盖</li>\n<li>标准输出 &gt; &gt;&gt;</li>\n<li>标准错误输出 &gt; &gt;&gt;</li>\n</ol>\n<h2 id=\"连续命令执行\"><a href=\"#连续命令执行\" class=\"headerlink\" title=\"连续命令执行\"></a>连续命令执行</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd1;cmd2 <span class=\"comment\"># 连续执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">cmd1&amp;&amp;cmd2 <span class=\"comment\"># 当cmd1执行且指令回传值 $?=0 即正常执行，执行cmd2</span></span><br><span class=\"line\"></span><br><span class=\"line\">cmd1||cmd2 <span class=\"comment\"># 若cmd正常执行cmd2不执行，否则cmd2执行</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"管线命令-pipe\"><a href=\"#管线命令-pipe\" class=\"headerlink\" title=\"管线命令 pipe\"></a>管线命令 pipe</h2><p>管线命令使用界定符 | 将上一次的输出作为下一次的输入</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/24/1VX9Re.png\" alt=\"pipe\"></p>\n<h2 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim hello.sh</span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#Program:</span></span><br><span class=\"line\"><span class=\"comment\">#       Print Hello World</span></span><br><span class=\"line\"><span class=\"comment\">#History:</span></span><br><span class=\"line\"><span class=\"comment\">#01/24/2020    username    v1.0</span></span><br><span class=\"line\">PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/<span class=\"built_in\">local</span>/bin:usr/<span class=\"built_in\">local</span>/sbin:~/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH</span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"Hello World!\\n\"</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"></span><br><span class=\"line\">sh hello.sh</span><br></pre></td></tr></table></figure>\n<p>程序说明</p>\n<ol>\n<li><code>#!/bin/bash</code> 非必要，说明该script使用的shell名称，此处为bash</li>\n<li><code>#Program:</code> 非必要</li>\n<li><code>#History:</code> 非必要</li>\n<li><code>PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:usr/local/sbin:~/bin</code> 非必要，主要环境变量</li>\n<li>主程序</li>\n<li><code>exit 0</code> 回传值</li>\n</ol>\n<p>script三种执行方式</p>\n<ol>\n<li>sh 在新子bash中执行，结果无法返回到当前bash<ol>\n<li>在debian系，sh 调用为 dash 不是 bash</li>\n</ol>\n</li>\n<li>./<ol>\n<li>调用脚本开头<code>#!/bin/bash</code> 设定的shell</li>\n</ol>\n</li>\n<li>source 在当前bash中执行</li>\n</ol>\n<p>script的默认变量</p>\n<ol>\n<li>```bash<br>sh script arg1   arg2   arg3   arg4<pre><code> $0    $1     $2     $3     $4\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">2. $# 参数个数，此处为 4</span><br><span class=\"line\">3. $@ 代表&quot;$1&quot; &quot;$2&quot; &quot;$3&quot; &quot;$4&quot; 每个变量是独立的</span><br><span class=\"line\">4. $* 代表 &quot;$1 $2 $3 $4&quot;</span><br><span class=\"line\">5. 脚本中可用shift x 移除前x个参数，不加个数x时默认为1个</span><br><span class=\"line\"></span><br><span class=\"line\">条件</span><br><span class=\"line\"></span><br><span class=\"line\">&#96;&#96;&#96;bash</span><br><span class=\"line\">if [condition]; then</span><br><span class=\"line\">    code</span><br><span class=\"line\">elif [condition]; then</span><br><span class=\"line\">    code</span><br><span class=\"line\">else</span><br><span class=\"line\">    code</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">case $var in</span><br><span class=\"line\">    &quot;xxx1&quot;)</span><br><span class=\"line\">    code</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">    &quot;xxx2&quot;)</span><br><span class=\"line\">    code</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">    *)</span><br><span class=\"line\">    code</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>循环</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> [condigion]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">until [condition]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> var <span class=\"keyword\">in</span> con1 con2 con3 ...</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>((初值; 条件; 变化))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    code</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<p>函数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> func()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    code</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">funct arg1 arg2</span><br></pre></td></tr></table></figure>\n<p>shell 的debug</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh -nvx script.sh</span><br><span class=\"line\"><span class=\"comment\"># -n 仅检查语法不执行</span></span><br><span class=\"line\"><span class=\"comment\"># -v 执行前将脚本内容输出</span></span><br><span class=\"line\"><span class=\"comment\"># -x 将使用到的脚本内容输出</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Linux文件系统","date":"2019-12-25T21:19:04.000Z","update":null,"description":"Linux文件系统","_content":"## Linux文件权限与目录配置\n\n### Linux文件属性\n\n[文件属性](![leFkHx.png](https://s2.ax1x.com/2019/12/28/leFkHx.png))\n\n1. 文件权限\n   1. 第一个字符 d 是目录，- 是文件，l 是链接文件，b 是\n   2. 后面每三个字符一组，代表文件所有者权限，用户组权限，其他人权限,rwx=4+2+1=7\n   3. 目录的 x 权限代表使用者能否进入该目录或成为工作目录的用途\n2. 链接数\n3. 所有者\n4. 所属群组\n5. 大小\n6. 最后修改时间\n7. 文件名\n\n### 目录配置（FHS 3.0）\n\n目录分类\n\n![目录分类](https://s2.ax1x.com/2019/12/28/leAaBn.png)\n\n目录树\n\n![目录树](https://s2.ax1x.com/2020/01/01/lJcuN9.png)\n\nThe following directories, or symbolic links to directories, are required in /.\n\n| Directory | Description                                       |\n| :-------- | :------------------------------------------------ |\n| bin       | Essential command binaries                        |\n| boot      | Static files of the boot loader                   |\n| dev       | Device files                                      |\n| etc       | Host-specific system configuration                |\n| lib       | Essential shared libraries and kernel modules     |\n| media     | Mount point for removable media                   |\n| mnt       | Mount point for mounting a filesystem temporarily |\n| opt       | Add-on application software packages              |\n| run       | Data relevant to running processes                |\n| sbin      | Essential system binaries                         |\n| srv       | Data for services provided by this system         |\n| tmp       | Temporary files                                   |\n| usr       | Secondary hierarchy                               |\n| var       | Variable data                                     |\n\n### 文件默认权限和隐藏属性\n\n```bash\numask\n# 0022\n# 0 特殊权限 0 拥有者 2 用户组 2 其他人\n\nlsattr\nchatter\n```\n\n### 文件特殊权限\n\nSUID=4，SGID=2，SBIT=1\n\n#### SUID\n\n```bash\n$ ls -l /usr/bin/passwd\n# -rwsr-xr-x 1 root root 63736 Jul 27  2018 /usr/bin/passwd\n```\n\n当 s 这个标志出现在文件拥有者的 x 权限上时,就被设施SUID特殊权限\n\n1. SUID 权限仅对二进制程序（binary program）有效\n2. 执行者对于该程序需要具有 x 的可执行权限\n3. 本权限仅在执行该程序的过程中有效 （run-time）\n4. 执行者将具有该程序拥有者 （owner） 的权限\n\n#### SGID\n\n1. SGID 对二进制程序有用；\n2. 程序执行者对于该程序来说，需具备 x 的权限；\n3. 执行者在执行的过程中将会获得该程序群组的支持！\n\n#### SBIT\n\nSticky Bit, SBIT 目前只针对目录有效\n\n1. 当使用者对于此目录具有 w, x 权限，亦即具有写入的权限时；\n2. 当使用者在该目录下创建文件或目录时，仅有自己与 root 才有权力删除该文件\n\n### 相关命令\n\n```bash\ncd # 跟换目录\npwd # 显示当前目录\n\nmkdir # 创建新目录\ntouch # 创建空文件或修改文件时间\n\nchmod\nchgown\nchgrp\n\ncp\nmv\nrm\n\nls\ncat\ntac\nnl\nmore\nless\nhead\ntail\nod # 以二进制显示\n\nfile # 查看文件类型\n\nwhich # 查找可执行文件\nwhereis # 在特定目录中查找文件\nlocate/updatedb # 在数据库中查找（/var/lib/mlocate）\nfind\n```\n\n## 文件系统与磁盘配置\n\n### 文件系统组成\n\n1. superblock 记录filesystem整体信息\n   1. block 与 inode 的总量；\n   2. 未使用与已使用的 inode / block 数量\n   3. block 与 inode 的大小 （block 为 1, 2, 4K，inode 为 128Bytes 或 256Bytes）\n   4. filesystem 的挂载时间、最近一次写入数据的时间、最近一次检验磁盘 （fsck） 的时间等文件系统的相关信息\n   5. 一个 valid bit 数值，若此文件系统已被挂载，则 valid bit 为 0 ，若未被挂载，则 valid bit为 1 \n   文件系统的格式与相关信息\n2. inode 记录文件的属性，一个文件占用一个inode，同时记录此文件数据所在的block号码\n3. block 实际记录文件内容，一个文件可能占用多个block\n\nExt4 文件为索引式文件系统，基本不需要磁盘整理\n\n![索引式](https://s2.ax1x.com/2020/01/02/lJ5R1J.png)\n\nFAT为顺序式\n\n![顺序式](https://s2.ax1x.com/2020/01/02/lJ5TAK.png)\n\n### 与目录树的关系\n\n* 目录：当我们在 Linux 下的文件系统创建一个目录时，文件系统会分配一个 inode 与至少一块 block\n给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码；\n而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据\n* 文件：当我们在 Linux 下的 ext2 创建一个一般文件时， ext2 会分配一个 inode 与相对于该文件大小\n的 block 数量给该文件。例如：假设我的一个 block 为 4 KBytes ，而我要创建一个 100\nKBytes 的文件，那么 linux 将分配一个 inode 与 25 个 block 来储存该文件！ 但同时请注意，\n由于 inode 仅有 12 个直接指向，因此还要多一个 block 来作为区块号码的记录\n\n### 软链接与硬链接\n\n* Symbolic Link\n  1. 就是创建一个独立的文件，而这个文件会让数据的读取指向它link的文件\n  2. Symbolic link 所创建的文件为一个独立的新的文件，所以会占用掉 inode 与 block\n  3. `ln -s [source] [target]`\n* Hard Link\n  1. 每个文件都会占用一个inode，文件内容由indoe的记录来指向\n  2. 读取文件时，必须经过目录记录的文件名来指向到正确的inode号码才能读取\n  3. 不能跨Filesystem，不能link目录\n  4. hard link 只是在某个目录下的 block 多写入一个关连数据而已，既不会增加 inode 也不会耗用 block 数量\n\n### 磁盘分区\n\n1. `lsblk` 列出系统上所有磁盘列表\n2. `gdisk`\n3. `mkfs.xfs/mkfs.ext4`\n4. 对于swap分区，可以使用实体分区，也可用一个大文件挂载代替`dd if=/dev/zero of=/tmp/swap bs=1M count=128`\n\n### 相关命令\n\n```bash\ndf # 列出文件系统的整体磁盘使用\ndu # 评估文件系统的磁盘使用量\n\ndd if=inputfile of=outputfile bs=blocksize\n\nmount/unmount\n```\n\n## 文件压缩与打包\n\n```bash\n# 压　缩 -czf\ntar -czv -f 压缩后文件名.tar.bz2 要被压缩的文件或目录名称\n\n# 查　询\ntar -ztv -f 文件名.tar.bz2\n\n# 解压缩 -xzf\ntar -xcv -f 被解压文件名.tar.bz2 -C 欲解压缩的目录（默认 .）\n\n\n# -z ：通过 gzip 的支持进行压缩/解压缩：此时文件名最好为 *.tar.gz\n# -j ：通过 bzip2 的支持进行压缩/解压缩：此时文件名最好为 *.tar.bz2\n# -J ：通过 xz 的支持进行压缩/解压缩：此时文件名最好为 *.tar.xz\n\n# -c ：创建打包文件，可搭配 -v 来察看过程中被打包的文件名（filename）\n# -t ：察看打包文件的内容含有哪些文件名，重点在察看“文件名”就是了；\n# -x ：解打包或解压缩的功能，可以搭配 -C （大写） 在特定目录解开\n# -v ：在压缩/解压缩的过程中，将正在处理的文件名显示出来\n\n# -p（小写） ：保留备份数据的原本权限与属性，常用于备份（-c）重要的配置文件\n# -P（大写） ：保留绝对路径，亦即允许备份数据中含有根目录存在之意!!!!! 具有绝对路径，可能发生覆盖\n# --exclude=FILE：在压缩的过程中，不要将 FILE 打包\n```\n","source":"_posts/Linux 文件系统.md","raw":"---\ntitle: Linux文件系统\ndate: 2019-12-25 16:19:04\nupdate: \ntags: [Linux]\ncategories: Linux\ndescription: Linux文件系统\n---\n## Linux文件权限与目录配置\n\n### Linux文件属性\n\n[文件属性](![leFkHx.png](https://s2.ax1x.com/2019/12/28/leFkHx.png))\n\n1. 文件权限\n   1. 第一个字符 d 是目录，- 是文件，l 是链接文件，b 是\n   2. 后面每三个字符一组，代表文件所有者权限，用户组权限，其他人权限,rwx=4+2+1=7\n   3. 目录的 x 权限代表使用者能否进入该目录或成为工作目录的用途\n2. 链接数\n3. 所有者\n4. 所属群组\n5. 大小\n6. 最后修改时间\n7. 文件名\n\n### 目录配置（FHS 3.0）\n\n目录分类\n\n![目录分类](https://s2.ax1x.com/2019/12/28/leAaBn.png)\n\n目录树\n\n![目录树](https://s2.ax1x.com/2020/01/01/lJcuN9.png)\n\nThe following directories, or symbolic links to directories, are required in /.\n\n| Directory | Description                                       |\n| :-------- | :------------------------------------------------ |\n| bin       | Essential command binaries                        |\n| boot      | Static files of the boot loader                   |\n| dev       | Device files                                      |\n| etc       | Host-specific system configuration                |\n| lib       | Essential shared libraries and kernel modules     |\n| media     | Mount point for removable media                   |\n| mnt       | Mount point for mounting a filesystem temporarily |\n| opt       | Add-on application software packages              |\n| run       | Data relevant to running processes                |\n| sbin      | Essential system binaries                         |\n| srv       | Data for services provided by this system         |\n| tmp       | Temporary files                                   |\n| usr       | Secondary hierarchy                               |\n| var       | Variable data                                     |\n\n### 文件默认权限和隐藏属性\n\n```bash\numask\n# 0022\n# 0 特殊权限 0 拥有者 2 用户组 2 其他人\n\nlsattr\nchatter\n```\n\n### 文件特殊权限\n\nSUID=4，SGID=2，SBIT=1\n\n#### SUID\n\n```bash\n$ ls -l /usr/bin/passwd\n# -rwsr-xr-x 1 root root 63736 Jul 27  2018 /usr/bin/passwd\n```\n\n当 s 这个标志出现在文件拥有者的 x 权限上时,就被设施SUID特殊权限\n\n1. SUID 权限仅对二进制程序（binary program）有效\n2. 执行者对于该程序需要具有 x 的可执行权限\n3. 本权限仅在执行该程序的过程中有效 （run-time）\n4. 执行者将具有该程序拥有者 （owner） 的权限\n\n#### SGID\n\n1. SGID 对二进制程序有用；\n2. 程序执行者对于该程序来说，需具备 x 的权限；\n3. 执行者在执行的过程中将会获得该程序群组的支持！\n\n#### SBIT\n\nSticky Bit, SBIT 目前只针对目录有效\n\n1. 当使用者对于此目录具有 w, x 权限，亦即具有写入的权限时；\n2. 当使用者在该目录下创建文件或目录时，仅有自己与 root 才有权力删除该文件\n\n### 相关命令\n\n```bash\ncd # 跟换目录\npwd # 显示当前目录\n\nmkdir # 创建新目录\ntouch # 创建空文件或修改文件时间\n\nchmod\nchgown\nchgrp\n\ncp\nmv\nrm\n\nls\ncat\ntac\nnl\nmore\nless\nhead\ntail\nod # 以二进制显示\n\nfile # 查看文件类型\n\nwhich # 查找可执行文件\nwhereis # 在特定目录中查找文件\nlocate/updatedb # 在数据库中查找（/var/lib/mlocate）\nfind\n```\n\n## 文件系统与磁盘配置\n\n### 文件系统组成\n\n1. superblock 记录filesystem整体信息\n   1. block 与 inode 的总量；\n   2. 未使用与已使用的 inode / block 数量\n   3. block 与 inode 的大小 （block 为 1, 2, 4K，inode 为 128Bytes 或 256Bytes）\n   4. filesystem 的挂载时间、最近一次写入数据的时间、最近一次检验磁盘 （fsck） 的时间等文件系统的相关信息\n   5. 一个 valid bit 数值，若此文件系统已被挂载，则 valid bit 为 0 ，若未被挂载，则 valid bit为 1 \n   文件系统的格式与相关信息\n2. inode 记录文件的属性，一个文件占用一个inode，同时记录此文件数据所在的block号码\n3. block 实际记录文件内容，一个文件可能占用多个block\n\nExt4 文件为索引式文件系统，基本不需要磁盘整理\n\n![索引式](https://s2.ax1x.com/2020/01/02/lJ5R1J.png)\n\nFAT为顺序式\n\n![顺序式](https://s2.ax1x.com/2020/01/02/lJ5TAK.png)\n\n### 与目录树的关系\n\n* 目录：当我们在 Linux 下的文件系统创建一个目录时，文件系统会分配一个 inode 与至少一块 block\n给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码；\n而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据\n* 文件：当我们在 Linux 下的 ext2 创建一个一般文件时， ext2 会分配一个 inode 与相对于该文件大小\n的 block 数量给该文件。例如：假设我的一个 block 为 4 KBytes ，而我要创建一个 100\nKBytes 的文件，那么 linux 将分配一个 inode 与 25 个 block 来储存该文件！ 但同时请注意，\n由于 inode 仅有 12 个直接指向，因此还要多一个 block 来作为区块号码的记录\n\n### 软链接与硬链接\n\n* Symbolic Link\n  1. 就是创建一个独立的文件，而这个文件会让数据的读取指向它link的文件\n  2. Symbolic link 所创建的文件为一个独立的新的文件，所以会占用掉 inode 与 block\n  3. `ln -s [source] [target]`\n* Hard Link\n  1. 每个文件都会占用一个inode，文件内容由indoe的记录来指向\n  2. 读取文件时，必须经过目录记录的文件名来指向到正确的inode号码才能读取\n  3. 不能跨Filesystem，不能link目录\n  4. hard link 只是在某个目录下的 block 多写入一个关连数据而已，既不会增加 inode 也不会耗用 block 数量\n\n### 磁盘分区\n\n1. `lsblk` 列出系统上所有磁盘列表\n2. `gdisk`\n3. `mkfs.xfs/mkfs.ext4`\n4. 对于swap分区，可以使用实体分区，也可用一个大文件挂载代替`dd if=/dev/zero of=/tmp/swap bs=1M count=128`\n\n### 相关命令\n\n```bash\ndf # 列出文件系统的整体磁盘使用\ndu # 评估文件系统的磁盘使用量\n\ndd if=inputfile of=outputfile bs=blocksize\n\nmount/unmount\n```\n\n## 文件压缩与打包\n\n```bash\n# 压　缩 -czf\ntar -czv -f 压缩后文件名.tar.bz2 要被压缩的文件或目录名称\n\n# 查　询\ntar -ztv -f 文件名.tar.bz2\n\n# 解压缩 -xzf\ntar -xcv -f 被解压文件名.tar.bz2 -C 欲解压缩的目录（默认 .）\n\n\n# -z ：通过 gzip 的支持进行压缩/解压缩：此时文件名最好为 *.tar.gz\n# -j ：通过 bzip2 的支持进行压缩/解压缩：此时文件名最好为 *.tar.bz2\n# -J ：通过 xz 的支持进行压缩/解压缩：此时文件名最好为 *.tar.xz\n\n# -c ：创建打包文件，可搭配 -v 来察看过程中被打包的文件名（filename）\n# -t ：察看打包文件的内容含有哪些文件名，重点在察看“文件名”就是了；\n# -x ：解打包或解压缩的功能，可以搭配 -C （大写） 在特定目录解开\n# -v ：在压缩/解压缩的过程中，将正在处理的文件名显示出来\n\n# -p（小写） ：保留备份数据的原本权限与属性，常用于备份（-c）重要的配置文件\n# -P（大写） ：保留绝对路径，亦即允许备份数据中含有根目录存在之意!!!!! 具有绝对路径，可能发生覆盖\n# --exclude=FILE：在压缩的过程中，不要将 FILE 打包\n```\n","slug":"Linux 文件系统","published":1,"updated":"2020-01-24T18:47:34.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9p8000zmou53o9affvi","content":"<h2 id=\"Linux文件权限与目录配置\"><a href=\"#Linux文件权限与目录配置\" class=\"headerlink\" title=\"Linux文件权限与目录配置\"></a>Linux文件权限与目录配置</h2><h3 id=\"Linux文件属性\"><a href=\"#Linux文件属性\" class=\"headerlink\" title=\"Linux文件属性\"></a>Linux文件属性</h3><p><a href=\"![leFkHx.png](https://s2.ax1x.com/2019/12/28/leFkHx.png\">文件属性</a>)</p>\n<ol>\n<li>文件权限<ol>\n<li>第一个字符 d 是目录，- 是文件，l 是链接文件，b 是</li>\n<li>后面每三个字符一组，代表文件所有者权限，用户组权限，其他人权限,rwx=4+2+1=7</li>\n<li>目录的 x 权限代表使用者能否进入该目录或成为工作目录的用途</li>\n</ol>\n</li>\n<li>链接数</li>\n<li>所有者</li>\n<li>所属群组</li>\n<li>大小</li>\n<li>最后修改时间</li>\n<li>文件名</li>\n</ol>\n<h3 id=\"目录配置（FHS-3-0）\"><a href=\"#目录配置（FHS-3-0）\" class=\"headerlink\" title=\"目录配置（FHS 3.0）\"></a>目录配置（FHS 3.0）</h3><p>目录分类</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/28/leAaBn.png\" alt=\"目录分类\"></p>\n<p>目录树</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/01/lJcuN9.png\" alt=\"目录树\"></p>\n<p>The following directories, or symbolic links to directories, are required in /.</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Directory</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">bin</td>\n<td style=\"text-align:left\">Essential command binaries</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">boot</td>\n<td style=\"text-align:left\">Static files of the boot loader</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dev</td>\n<td style=\"text-align:left\">Device files</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">etc</td>\n<td style=\"text-align:left\">Host-specific system configuration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lib</td>\n<td style=\"text-align:left\">Essential shared libraries and kernel modules</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">media</td>\n<td style=\"text-align:left\">Mount point for removable media</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mnt</td>\n<td style=\"text-align:left\">Mount point for mounting a filesystem temporarily</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">opt</td>\n<td style=\"text-align:left\">Add-on application software packages</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">run</td>\n<td style=\"text-align:left\">Data relevant to running processes</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sbin</td>\n<td style=\"text-align:left\">Essential system binaries</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">srv</td>\n<td style=\"text-align:left\">Data for services provided by this system</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tmp</td>\n<td style=\"text-align:left\">Temporary files</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">usr</td>\n<td style=\"text-align:left\">Secondary hierarchy</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">var</td>\n<td style=\"text-align:left\">Variable data</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"文件默认权限和隐藏属性\"><a href=\"#文件默认权限和隐藏属性\" class=\"headerlink\" title=\"文件默认权限和隐藏属性\"></a>文件默认权限和隐藏属性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">umask</span></span><br><span class=\"line\"><span class=\"comment\"># 0022</span></span><br><span class=\"line\"><span class=\"comment\"># 0 特殊权限 0 拥有者 2 用户组 2 其他人</span></span><br><span class=\"line\"></span><br><span class=\"line\">lsattr</span><br><span class=\"line\">chatter</span><br></pre></td></tr></table></figure>\n<h3 id=\"文件特殊权限\"><a href=\"#文件特殊权限\" class=\"headerlink\" title=\"文件特殊权限\"></a>文件特殊权限</h3><p>SUID=4，SGID=2，SBIT=1</p>\n<h4 id=\"SUID\"><a href=\"#SUID\" class=\"headerlink\" title=\"SUID\"></a>SUID</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls -l /usr/bin/passwd</span><br><span class=\"line\"><span class=\"comment\"># -rwsr-xr-x 1 root root 63736 Jul 27  2018 /usr/bin/passwd</span></span><br></pre></td></tr></table></figure>\n<p>当 s 这个标志出现在文件拥有者的 x 权限上时,就被设施SUID特殊权限</p>\n<ol>\n<li>SUID 权限仅对二进制程序（binary program）有效</li>\n<li>执行者对于该程序需要具有 x 的可执行权限</li>\n<li>本权限仅在执行该程序的过程中有效 （run-time）</li>\n<li>执行者将具有该程序拥有者 （owner） 的权限</li>\n</ol>\n<h4 id=\"SGID\"><a href=\"#SGID\" class=\"headerlink\" title=\"SGID\"></a>SGID</h4><ol>\n<li>SGID 对二进制程序有用；</li>\n<li>程序执行者对于该程序来说，需具备 x 的权限；</li>\n<li>执行者在执行的过程中将会获得该程序群组的支持！</li>\n</ol>\n<h4 id=\"SBIT\"><a href=\"#SBIT\" class=\"headerlink\" title=\"SBIT\"></a>SBIT</h4><p>Sticky Bit, SBIT 目前只针对目录有效</p>\n<ol>\n<li>当使用者对于此目录具有 w, x 权限，亦即具有写入的权限时；</li>\n<li>当使用者在该目录下创建文件或目录时，仅有自己与 root 才有权力删除该文件</li>\n</ol>\n<h3 id=\"相关命令\"><a href=\"#相关命令\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"comment\"># 跟换目录</span></span><br><span class=\"line\"><span class=\"built_in\">pwd</span> <span class=\"comment\"># 显示当前目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">mkdir <span class=\"comment\"># 创建新目录</span></span><br><span class=\"line\">touch <span class=\"comment\"># 创建空文件或修改文件时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod</span><br><span class=\"line\">chgown</span><br><span class=\"line\">chgrp</span><br><span class=\"line\"></span><br><span class=\"line\">cp</span><br><span class=\"line\">mv</span><br><span class=\"line\">rm</span><br><span class=\"line\"></span><br><span class=\"line\">ls</span><br><span class=\"line\">cat</span><br><span class=\"line\">tac</span><br><span class=\"line\">nl</span><br><span class=\"line\">more</span><br><span class=\"line\">less</span><br><span class=\"line\">head</span><br><span class=\"line\">tail</span><br><span class=\"line\">od <span class=\"comment\"># 以二进制显示</span></span><br><span class=\"line\"></span><br><span class=\"line\">file <span class=\"comment\"># 查看文件类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">which</span> <span class=\"comment\"># 查找可执行文件</span></span><br><span class=\"line\">whereis <span class=\"comment\"># 在特定目录中查找文件</span></span><br><span class=\"line\">locate/updatedb <span class=\"comment\"># 在数据库中查找（/var/lib/mlocate）</span></span><br><span class=\"line\">find</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件系统与磁盘配置\"><a href=\"#文件系统与磁盘配置\" class=\"headerlink\" title=\"文件系统与磁盘配置\"></a>文件系统与磁盘配置</h2><h3 id=\"文件系统组成\"><a href=\"#文件系统组成\" class=\"headerlink\" title=\"文件系统组成\"></a>文件系统组成</h3><ol>\n<li>superblock 记录filesystem整体信息<ol>\n<li>block 与 inode 的总量；</li>\n<li>未使用与已使用的 inode / block 数量</li>\n<li>block 与 inode 的大小 （block 为 1, 2, 4K，inode 为 128Bytes 或 256Bytes）</li>\n<li>filesystem 的挂载时间、最近一次写入数据的时间、最近一次检验磁盘 （fsck） 的时间等文件系统的相关信息</li>\n<li>一个 valid bit 数值，若此文件系统已被挂载，则 valid bit 为 0 ，若未被挂载，则 valid bit为 1<br>文件系统的格式与相关信息</li>\n</ol>\n</li>\n<li>inode 记录文件的属性，一个文件占用一个inode，同时记录此文件数据所在的block号码</li>\n<li>block 实际记录文件内容，一个文件可能占用多个block</li>\n</ol>\n<p>Ext4 文件为索引式文件系统，基本不需要磁盘整理</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/02/lJ5R1J.png\" alt=\"索引式\"></p>\n<p>FAT为顺序式</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/02/lJ5TAK.png\" alt=\"顺序式\"></p>\n<h3 id=\"与目录树的关系\"><a href=\"#与目录树的关系\" class=\"headerlink\" title=\"与目录树的关系\"></a>与目录树的关系</h3><ul>\n<li>目录：当我们在 Linux 下的文件系统创建一个目录时，文件系统会分配一个 inode 与至少一块 block<br>给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码；<br>而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据</li>\n<li>文件：当我们在 Linux 下的 ext2 创建一个一般文件时， ext2 会分配一个 inode 与相对于该文件大小<br>的 block 数量给该文件。例如：假设我的一个 block 为 4 KBytes ，而我要创建一个 100<br>KBytes 的文件，那么 linux 将分配一个 inode 与 25 个 block 来储存该文件！ 但同时请注意，<br>由于 inode 仅有 12 个直接指向，因此还要多一个 block 来作为区块号码的记录</li>\n</ul>\n<h3 id=\"软链接与硬链接\"><a href=\"#软链接与硬链接\" class=\"headerlink\" title=\"软链接与硬链接\"></a>软链接与硬链接</h3><ul>\n<li>Symbolic Link<ol>\n<li>就是创建一个独立的文件，而这个文件会让数据的读取指向它link的文件</li>\n<li>Symbolic link 所创建的文件为一个独立的新的文件，所以会占用掉 inode 与 block</li>\n<li><code>ln -s [source] [target]</code></li>\n</ol>\n</li>\n<li>Hard Link<ol>\n<li>每个文件都会占用一个inode，文件内容由indoe的记录来指向</li>\n<li>读取文件时，必须经过目录记录的文件名来指向到正确的inode号码才能读取</li>\n<li>不能跨Filesystem，不能link目录</li>\n<li>hard link 只是在某个目录下的 block 多写入一个关连数据而已，既不会增加 inode 也不会耗用 block 数量</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"磁盘分区\"><a href=\"#磁盘分区\" class=\"headerlink\" title=\"磁盘分区\"></a>磁盘分区</h3><ol>\n<li><code>lsblk</code> 列出系统上所有磁盘列表</li>\n<li><code>gdisk</code></li>\n<li><code>mkfs.xfs/mkfs.ext4</code></li>\n<li>对于swap分区，可以使用实体分区，也可用一个大文件挂载代替<code>dd if=/dev/zero of=/tmp/swap bs=1M count=128</code></li>\n</ol>\n<h3 id=\"相关命令-1\"><a href=\"#相关命令-1\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"comment\"># 列出文件系统的整体磁盘使用</span></span><br><span class=\"line\">du <span class=\"comment\"># 评估文件系统的磁盘使用量</span></span><br><span class=\"line\"></span><br><span class=\"line\">dd <span class=\"keyword\">if</span>=inputfile of=outputfile bs=blocksize</span><br><span class=\"line\"></span><br><span class=\"line\">mount/unmount</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件压缩与打包\"><a href=\"#文件压缩与打包\" class=\"headerlink\" title=\"文件压缩与打包\"></a>文件压缩与打包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压　缩 -czf</span></span><br><span class=\"line\">tar -czv -f 压缩后文件名.tar.bz2 要被压缩的文件或目录名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查　询</span></span><br><span class=\"line\">tar -ztv -f 文件名.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩 -xzf</span></span><br><span class=\"line\">tar -xcv -f 被解压文件名.tar.bz2 -C 欲解压缩的目录（默认 .）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -z ：通过 gzip 的支持进行压缩/解压缩：此时文件名最好为 *.tar.gz</span></span><br><span class=\"line\"><span class=\"comment\"># -j ：通过 bzip2 的支持进行压缩/解压缩：此时文件名最好为 *.tar.bz2</span></span><br><span class=\"line\"><span class=\"comment\"># -J ：通过 xz 的支持进行压缩/解压缩：此时文件名最好为 *.tar.xz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -c ：创建打包文件，可搭配 -v 来察看过程中被打包的文件名（filename）</span></span><br><span class=\"line\"><span class=\"comment\"># -t ：察看打包文件的内容含有哪些文件名，重点在察看“文件名”就是了；</span></span><br><span class=\"line\"><span class=\"comment\"># -x ：解打包或解压缩的功能，可以搭配 -C （大写） 在特定目录解开</span></span><br><span class=\"line\"><span class=\"comment\"># -v ：在压缩/解压缩的过程中，将正在处理的文件名显示出来</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -p（小写） ：保留备份数据的原本权限与属性，常用于备份（-c）重要的配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># -P（大写） ：保留绝对路径，亦即允许备份数据中含有根目录存在之意!!!!! 具有绝对路径，可能发生覆盖</span></span><br><span class=\"line\"><span class=\"comment\"># --exclude=FILE：在压缩的过程中，不要将 FILE 打包</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":3038,"excerpt":"","more":"<h2 id=\"Linux文件权限与目录配置\"><a href=\"#Linux文件权限与目录配置\" class=\"headerlink\" title=\"Linux文件权限与目录配置\"></a>Linux文件权限与目录配置</h2><h3 id=\"Linux文件属性\"><a href=\"#Linux文件属性\" class=\"headerlink\" title=\"Linux文件属性\"></a>Linux文件属性</h3><p><a href=\"![leFkHx.png](https://s2.ax1x.com/2019/12/28/leFkHx.png\">文件属性</a>)</p>\n<ol>\n<li>文件权限<ol>\n<li>第一个字符 d 是目录，- 是文件，l 是链接文件，b 是</li>\n<li>后面每三个字符一组，代表文件所有者权限，用户组权限，其他人权限,rwx=4+2+1=7</li>\n<li>目录的 x 权限代表使用者能否进入该目录或成为工作目录的用途</li>\n</ol>\n</li>\n<li>链接数</li>\n<li>所有者</li>\n<li>所属群组</li>\n<li>大小</li>\n<li>最后修改时间</li>\n<li>文件名</li>\n</ol>\n<h3 id=\"目录配置（FHS-3-0）\"><a href=\"#目录配置（FHS-3-0）\" class=\"headerlink\" title=\"目录配置（FHS 3.0）\"></a>目录配置（FHS 3.0）</h3><p>目录分类</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/28/leAaBn.png\" alt=\"目录分类\"></p>\n<p>目录树</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/01/lJcuN9.png\" alt=\"目录树\"></p>\n<p>The following directories, or symbolic links to directories, are required in /.</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Directory</th>\n<th style=\"text-align:left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">bin</td>\n<td style=\"text-align:left\">Essential command binaries</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">boot</td>\n<td style=\"text-align:left\">Static files of the boot loader</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dev</td>\n<td style=\"text-align:left\">Device files</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">etc</td>\n<td style=\"text-align:left\">Host-specific system configuration</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lib</td>\n<td style=\"text-align:left\">Essential shared libraries and kernel modules</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">media</td>\n<td style=\"text-align:left\">Mount point for removable media</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">mnt</td>\n<td style=\"text-align:left\">Mount point for mounting a filesystem temporarily</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">opt</td>\n<td style=\"text-align:left\">Add-on application software packages</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">run</td>\n<td style=\"text-align:left\">Data relevant to running processes</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sbin</td>\n<td style=\"text-align:left\">Essential system binaries</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">srv</td>\n<td style=\"text-align:left\">Data for services provided by this system</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">tmp</td>\n<td style=\"text-align:left\">Temporary files</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">usr</td>\n<td style=\"text-align:left\">Secondary hierarchy</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">var</td>\n<td style=\"text-align:left\">Variable data</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"文件默认权限和隐藏属性\"><a href=\"#文件默认权限和隐藏属性\" class=\"headerlink\" title=\"文件默认权限和隐藏属性\"></a>文件默认权限和隐藏属性</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">umask</span></span><br><span class=\"line\"><span class=\"comment\"># 0022</span></span><br><span class=\"line\"><span class=\"comment\"># 0 特殊权限 0 拥有者 2 用户组 2 其他人</span></span><br><span class=\"line\"></span><br><span class=\"line\">lsattr</span><br><span class=\"line\">chatter</span><br></pre></td></tr></table></figure>\n<h3 id=\"文件特殊权限\"><a href=\"#文件特殊权限\" class=\"headerlink\" title=\"文件特殊权限\"></a>文件特殊权限</h3><p>SUID=4，SGID=2，SBIT=1</p>\n<h4 id=\"SUID\"><a href=\"#SUID\" class=\"headerlink\" title=\"SUID\"></a>SUID</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls -l /usr/bin/passwd</span><br><span class=\"line\"><span class=\"comment\"># -rwsr-xr-x 1 root root 63736 Jul 27  2018 /usr/bin/passwd</span></span><br></pre></td></tr></table></figure>\n<p>当 s 这个标志出现在文件拥有者的 x 权限上时,就被设施SUID特殊权限</p>\n<ol>\n<li>SUID 权限仅对二进制程序（binary program）有效</li>\n<li>执行者对于该程序需要具有 x 的可执行权限</li>\n<li>本权限仅在执行该程序的过程中有效 （run-time）</li>\n<li>执行者将具有该程序拥有者 （owner） 的权限</li>\n</ol>\n<h4 id=\"SGID\"><a href=\"#SGID\" class=\"headerlink\" title=\"SGID\"></a>SGID</h4><ol>\n<li>SGID 对二进制程序有用；</li>\n<li>程序执行者对于该程序来说，需具备 x 的权限；</li>\n<li>执行者在执行的过程中将会获得该程序群组的支持！</li>\n</ol>\n<h4 id=\"SBIT\"><a href=\"#SBIT\" class=\"headerlink\" title=\"SBIT\"></a>SBIT</h4><p>Sticky Bit, SBIT 目前只针对目录有效</p>\n<ol>\n<li>当使用者对于此目录具有 w, x 权限，亦即具有写入的权限时；</li>\n<li>当使用者在该目录下创建文件或目录时，仅有自己与 root 才有权力删除该文件</li>\n</ol>\n<h3 id=\"相关命令\"><a href=\"#相关命令\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"comment\"># 跟换目录</span></span><br><span class=\"line\"><span class=\"built_in\">pwd</span> <span class=\"comment\"># 显示当前目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">mkdir <span class=\"comment\"># 创建新目录</span></span><br><span class=\"line\">touch <span class=\"comment\"># 创建空文件或修改文件时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod</span><br><span class=\"line\">chgown</span><br><span class=\"line\">chgrp</span><br><span class=\"line\"></span><br><span class=\"line\">cp</span><br><span class=\"line\">mv</span><br><span class=\"line\">rm</span><br><span class=\"line\"></span><br><span class=\"line\">ls</span><br><span class=\"line\">cat</span><br><span class=\"line\">tac</span><br><span class=\"line\">nl</span><br><span class=\"line\">more</span><br><span class=\"line\">less</span><br><span class=\"line\">head</span><br><span class=\"line\">tail</span><br><span class=\"line\">od <span class=\"comment\"># 以二进制显示</span></span><br><span class=\"line\"></span><br><span class=\"line\">file <span class=\"comment\"># 查看文件类型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">which</span> <span class=\"comment\"># 查找可执行文件</span></span><br><span class=\"line\">whereis <span class=\"comment\"># 在特定目录中查找文件</span></span><br><span class=\"line\">locate/updatedb <span class=\"comment\"># 在数据库中查找（/var/lib/mlocate）</span></span><br><span class=\"line\">find</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件系统与磁盘配置\"><a href=\"#文件系统与磁盘配置\" class=\"headerlink\" title=\"文件系统与磁盘配置\"></a>文件系统与磁盘配置</h2><h3 id=\"文件系统组成\"><a href=\"#文件系统组成\" class=\"headerlink\" title=\"文件系统组成\"></a>文件系统组成</h3><ol>\n<li>superblock 记录filesystem整体信息<ol>\n<li>block 与 inode 的总量；</li>\n<li>未使用与已使用的 inode / block 数量</li>\n<li>block 与 inode 的大小 （block 为 1, 2, 4K，inode 为 128Bytes 或 256Bytes）</li>\n<li>filesystem 的挂载时间、最近一次写入数据的时间、最近一次检验磁盘 （fsck） 的时间等文件系统的相关信息</li>\n<li>一个 valid bit 数值，若此文件系统已被挂载，则 valid bit 为 0 ，若未被挂载，则 valid bit为 1<br>文件系统的格式与相关信息</li>\n</ol>\n</li>\n<li>inode 记录文件的属性，一个文件占用一个inode，同时记录此文件数据所在的block号码</li>\n<li>block 实际记录文件内容，一个文件可能占用多个block</li>\n</ol>\n<p>Ext4 文件为索引式文件系统，基本不需要磁盘整理</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/02/lJ5R1J.png\" alt=\"索引式\"></p>\n<p>FAT为顺序式</p>\n<p><img src=\"https://s2.ax1x.com/2020/01/02/lJ5TAK.png\" alt=\"顺序式\"></p>\n<h3 id=\"与目录树的关系\"><a href=\"#与目录树的关系\" class=\"headerlink\" title=\"与目录树的关系\"></a>与目录树的关系</h3><ul>\n<li>目录：当我们在 Linux 下的文件系统创建一个目录时，文件系统会分配一个 inode 与至少一块 block<br>给该目录。其中，inode 记录该目录的相关权限与属性，并可记录分配到的那块 block 号码；<br>而 block 则是记录在这个目录下的文件名与该文件名占用的 inode 号码数据</li>\n<li>文件：当我们在 Linux 下的 ext2 创建一个一般文件时， ext2 会分配一个 inode 与相对于该文件大小<br>的 block 数量给该文件。例如：假设我的一个 block 为 4 KBytes ，而我要创建一个 100<br>KBytes 的文件，那么 linux 将分配一个 inode 与 25 个 block 来储存该文件！ 但同时请注意，<br>由于 inode 仅有 12 个直接指向，因此还要多一个 block 来作为区块号码的记录</li>\n</ul>\n<h3 id=\"软链接与硬链接\"><a href=\"#软链接与硬链接\" class=\"headerlink\" title=\"软链接与硬链接\"></a>软链接与硬链接</h3><ul>\n<li>Symbolic Link<ol>\n<li>就是创建一个独立的文件，而这个文件会让数据的读取指向它link的文件</li>\n<li>Symbolic link 所创建的文件为一个独立的新的文件，所以会占用掉 inode 与 block</li>\n<li><code>ln -s [source] [target]</code></li>\n</ol>\n</li>\n<li>Hard Link<ol>\n<li>每个文件都会占用一个inode，文件内容由indoe的记录来指向</li>\n<li>读取文件时，必须经过目录记录的文件名来指向到正确的inode号码才能读取</li>\n<li>不能跨Filesystem，不能link目录</li>\n<li>hard link 只是在某个目录下的 block 多写入一个关连数据而已，既不会增加 inode 也不会耗用 block 数量</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"磁盘分区\"><a href=\"#磁盘分区\" class=\"headerlink\" title=\"磁盘分区\"></a>磁盘分区</h3><ol>\n<li><code>lsblk</code> 列出系统上所有磁盘列表</li>\n<li><code>gdisk</code></li>\n<li><code>mkfs.xfs/mkfs.ext4</code></li>\n<li>对于swap分区，可以使用实体分区，也可用一个大文件挂载代替<code>dd if=/dev/zero of=/tmp/swap bs=1M count=128</code></li>\n</ol>\n<h3 id=\"相关命令-1\"><a href=\"#相关命令-1\" class=\"headerlink\" title=\"相关命令\"></a>相关命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df <span class=\"comment\"># 列出文件系统的整体磁盘使用</span></span><br><span class=\"line\">du <span class=\"comment\"># 评估文件系统的磁盘使用量</span></span><br><span class=\"line\"></span><br><span class=\"line\">dd <span class=\"keyword\">if</span>=inputfile of=outputfile bs=blocksize</span><br><span class=\"line\"></span><br><span class=\"line\">mount/unmount</span><br></pre></td></tr></table></figure>\n<h2 id=\"文件压缩与打包\"><a href=\"#文件压缩与打包\" class=\"headerlink\" title=\"文件压缩与打包\"></a>文件压缩与打包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压　缩 -czf</span></span><br><span class=\"line\">tar -czv -f 压缩后文件名.tar.bz2 要被压缩的文件或目录名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查　询</span></span><br><span class=\"line\">tar -ztv -f 文件名.tar.bz2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩 -xzf</span></span><br><span class=\"line\">tar -xcv -f 被解压文件名.tar.bz2 -C 欲解压缩的目录（默认 .）</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -z ：通过 gzip 的支持进行压缩/解压缩：此时文件名最好为 *.tar.gz</span></span><br><span class=\"line\"><span class=\"comment\"># -j ：通过 bzip2 的支持进行压缩/解压缩：此时文件名最好为 *.tar.bz2</span></span><br><span class=\"line\"><span class=\"comment\"># -J ：通过 xz 的支持进行压缩/解压缩：此时文件名最好为 *.tar.xz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -c ：创建打包文件，可搭配 -v 来察看过程中被打包的文件名（filename）</span></span><br><span class=\"line\"><span class=\"comment\"># -t ：察看打包文件的内容含有哪些文件名，重点在察看“文件名”就是了；</span></span><br><span class=\"line\"><span class=\"comment\"># -x ：解打包或解压缩的功能，可以搭配 -C （大写） 在特定目录解开</span></span><br><span class=\"line\"><span class=\"comment\"># -v ：在压缩/解压缩的过程中，将正在处理的文件名显示出来</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -p（小写） ：保留备份数据的原本权限与属性，常用于备份（-c）重要的配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># -P（大写） ：保留绝对路径，亦即允许备份数据中含有根目录存在之意!!!!! 具有绝对路径，可能发生覆盖</span></span><br><span class=\"line\"><span class=\"comment\"># --exclude=FILE：在压缩的过程中，不要将 FILE 打包</span></span><br></pre></td></tr></table></figure>\n"},{"title":"OS 虚拟内存","date":"2020-01-24T21:46:33.000Z","update":null,"description":null,"_content":"\n","source":"_posts/OS 虚拟内存.md","raw":"---\ntitle: OS 虚拟内存\ndate: 2020-01-24 16:46:33\nupdate:\ntags:\ncategories:\ndescription:\n---\n\n","slug":"OS 虚拟内存","published":1,"updated":"2020-01-24T21:46:33.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9p90012mou51s2l8kaj","content":"","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":0,"excerpt":"","more":""},{"title":"Tool VSCode+Latex","date":"2019-12-28T01:21:19.000Z","update":null,"description":"You do not need to be a martyr to MS Word.","_content":"\n## 下载与安装\n\n### Tex Live\n\n1. 下载[Tex Live](https://www.tug.org/texlive/)的[镜像文件](http://mirror.las.iastate.edu/tex-archive/systems/texlive/Images/)\n2. 安装，可一路默认\n\n### VSCode\n\n1. 下载[VS Code](https://code.visualstudio.com/)\n2. 安装，一路默认\n3. 安装插件 Latex Workshop\n4. 配置编译设置 file-> preference -> 搜索latex，可根据自己需要勾选\n   这里给出如何配置编译命令，recipes规定如何编译，tools对应每种编译方法的参数\n\n   *latex通常需要多次编译（如获得正确目录通常需要2次），中文推荐使用xelatex*\n\n   ![settings](https://s2.ax1x.com/2019/12/29/lnY3Xd.png)\n\n   ```json\n   \"latex-workshop.latex.recipes\": [\n        {\n            \"name\": \"pdflatex*2\",\n            \"tools\": [\n                \"pdflatex\",\n                \"pdflatex\"\n            ]\n        },\n        {\n            \"name\": \"xelatex*2\",\n            \"tools\": [\n                \"xelatex\",\n                \"xelatex\"\n            ]\n        },\n        {\n            \"name\": \"pdflatex ➞ bibtex ➞ pdflatex × 2\",\n            \"tools\": [\n                \"pdflatex\",\n                \"bibtex\",\n                \"pdflatex\",\n                \"pdflatex\"\n            ]\n        },\n        {\n            \"name\": \"xelatex ➞ bibtex ➞ xelatex × 2\",\n            \"tools\": [\n                \"xelatex\",\n                \"bibtex\",\n                \"xelatex\",\n                \"xelatex\"\n            ]\n        }\n    ],\n    \"latex-workshop.latex.tools\": [\n        {\n            \"name\": \"xelatex\",\n            \"command\": \"xelatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"%DOC%\"\n            ],\n            \"env\": {}\n        },\n        {\n            \"name\": \"latexmk\",\n            \"command\": \"latexmk\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"-pdf\",\n                \"-outdir=%OUTDIR%\",\n                \"%DOC%\"\n            ],\n            \"env\": {}\n        },\n        {\n            \"name\": \"pdflatex\",\n            \"command\": \"pdflatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"%DOC%\"\n            ],\n            \"env\": {}\n        },\n        {\n            \"name\": \"bibtex\",\n            \"command\": \"bibtex\",\n            \"args\": [\n                \"%DOCFILE%\"\n            ],\n            \"env\": {}\n        }\n    ],\n   ```\n\n## .tex 源文件\n\n### 基本规则\n\n1. 空格和制表符等空白字符再$\\Latex$中看作相同空白距离，连续多个空白字符视为一个\n2. 特殊字符 `# $ % ^ & _ {} \\`具有特殊含义，要表示这些字符本身在前面加反斜杠`\\#`\n3. latex命令以 \\ 开始\n4. latex环境`\\begin{environment} ... \\end{environment}`\n5. % 后接注释\n\n### 源文件的结构\n\n```tex\n% 文档类型\n\\documentclass[options]{class}\n\n% 需要的宏包\n\\usepackage[options]{class}\n\n\\title{example}\n\\author{author}\n\\date{date}\n\n\\begin{document}\n    \\maketitle %\n    \\tableofcontents % 目录\n\n    % 文档内容\n\n    \\part{}\n    \\chapter{}\n    \\section{}\n    \\subsection{}\n\n    \\include{filename} % 用来包含其他tex文件，会另起新的一页\n    \\input{filename} % 简单插入\n\\end{document}\n```\n\n### 常用文档类型\n\n1. article / ctexart ,ctex前缀类型支持中文\n2. report / ctexrep\n3. book / ctexbook\n\n### 常用命令与环境\n\n#### 换行、缩进、空格\n\n```tex\na \\quad\\quad\\quad\\quad\\quad b\n\n\\noindent % 无缩进\n\n\\newline\n\n\\newpage\n```\n\n#### 列表\n\n```tex\n% 无序列表\n\\begin{itemize}\n    \\item item 1\n    \\item[a] item a % 可以规定前面的标号\n\\end{itemize}\n\n% 有序列表\n\\begin{enumerate}\n    \\item item 1\n\\end{enumerate}\n```\n\n#### 表格\n\n```tex\n\\begin{tabular}{|l|c|r|} % | 为表格中的竖线，lcr为表格内容居左中或右\n    \\hline\n    l & c & r \\\\\n    \\hline\n\\end{tabular}\n```\n\n#### 等式和多行等式\n\n```tex\n\\begin{equation} % euqation* ，*号一般表示不需要序号\n    1+1=2\n\\end{equation}\n\n\\begin{align}\n    x&=1\\\\ % & 表明对齐点\n    y&=2\n\\end{align}\n```\n\n#### 图片\n\n```tex\n\\begin{figure}[H]\n    \\centering\n    \\includegraphics[width=\\textwidth]{img.jpg}\n    \\caption{caption}\n    \\label{Fig 1.}\n\\end{figure}\n```\n\n#### 引用\n\n```tex\n% 文章中引用\n\\cite{ref1}\n\n% 在文章末尾添加引用文献详情\n\\begin{thebibliography}{10}\n  \\bibitem{ref1} Dean, Jeffrey, and Sanjay Ghemawat. \"MapReduce: simplified data processing on large clusters.\" Communications of the ACM 51.1 (2008): 107-113.\n\\end{thebibliography}\n```\n\n#### 数学\n\n```tex\n% 段内数学文本\n$...$ or \\(...\\)\n% 段间\n$$...$$ or \\[...\\]\n\n% example\n$$\n\\hat{x}_{down}^{up}=\\frac{\\alpha\\times\\sum_{0}^{n}i}{\\infty}\n$$\n```\n\n$$\n\\hat{x}_{down}^{up}=\\frac{\\alpha\\times\\sum_{0}^{n}i}{\\infty}\n$$\n\n### 常用宏包\n\n#### 设置页边距\n\n```tex\n\\usepackage{geometry}\n\\geometry{top=3cm,bottom=3cm,left=1cm,right=1cm}\n```\n\n#### 设置页码形式\n\n```tex\n\\pagenumbering{arabic}\n% arabic - 阿拉伯数字\n% roman - 小写的罗马数字\n% Roman - 大写的罗马数字\n% alph - 小写的字符形式\n% Alph -大写的字符形式\n```\n\n#### 定制页眉和页脚\n\n```tex\n\\usepackage{fancyhdr}\n\\pagestyle{fancy} % change the style from “plain” to “fancy”\n% Latex预设的页眉页脚\n% empty 没有页眉页脚；\n% plain 没有页眉，页脚是居中的页码；\n% heading 没有页脚，页眉是章节名称的页码；\n% myheading 没有页脚，页眉是页码和用户自定义的内容\n\\fancyhead[LO]{\\leftmark}\n\\fancyhead[R]{\\rightmark}\n\\fancyfoot[C]{\\thepage}\n% E: Even page\n% O: Odd page\n% L: Left field\n% C: Center field\n% R: Right field\n% \\thepage\tnumber of the current page\n% \\leftmark\tcurrent chapter name printed like \"CHAPTER 3. THIS IS THE CHAPTER TITLE\"\n% \\rightmark\tcurrent section name printed like \"1.6. THIS IS THE SECTION TITLE\"\n% \\chaptername\tthe name chapter in the current language. If this is English, it will display \"Chapter\"\n% \\thechapter\tcurrent chapter number\n% \\thesection\tcurrent section number\n```\n\n#### 目录点击可达\n\n```tex\n\\usepackage{hyperref}\n```\n\n#### 使用图片\n\n```tex\n\\usepackage{graphicx}\n\n\\includegraphics[scale=.5\\textwidth]{xxx.img}\n```\n\n#### 数学包\n\n```tex\n\\usepackage{amsmath}\n\\usepackage{amssymb} % 包含常用数学字符运算符\n```\n\n#### 颜色\n\n```tex\n\\usepackage{color}\n\n\\definecolor{ColorName}{RGB}{0,123,255} % 可自己定义颜色\n\\textcolor{red}{123} % red blue 等颜色已被默认定义\n```\n\n#### 双栏\n\n```tex\n\\documentclass[twocolumn]{article} % method 1 直接设置文档,所有文档都双栏\n\n\\usepackage{multicol} % method 2 可具体控制\n\\begin{multicols}[2]\n\\end{multicols}\n```\n\n### 自定义命令和环境\n\n```tex\n% \\newcommand{name}[num]{definition}\n\\newcommand{\\textbfsl}[1]{\n    \\textbf{\\textsl{#1}}\n}\n\n% \\newenvironment{name}[num]{before}{after}\n% 在before 中的内容将在此环境包含的文本之前处理，\n% 而在after 中的内容将在遇到\\end{name} 命令时处理。\n\\newenvironment{textslbf}[1]{do before}{do after}\n```\n\n### 编写 .cls 文件\n\n可以自己编写 .cls 文件，提供一个文档类型，方便以后使用， .cls 文件放在与 .tex 文件同目录下\n\n```tex\n% Example\n% My document class for note\n\n\\ProvidesClass{note} % .tex 中使用，\\documentclass{note}\n\n\\LoadClass[a4paper,UTF8]{ctexbook}\n\n%Layout\n\\RequirePackage{hyperref,fancyhdr,geometry}\n\\geometry{\n    left=1cm,\n    right=1cm,\n    top=1cm,\n    bottom=1cm\n}\n\\setlength\\parindent{0pt}\n\n%Language\n\\RequirePackage{ctex,fontspec}\n%Color\n\\RequirePackage{xcolor}\n%Math\n\\RequirePackage{amsmath,amsthm,amsfonts,amssymb}\n%graph\n\\RequirePackage{graphicx}\n%Item\n\\RequirePackage{enumerate}\n%tabularx\n\\RequirePackage{tabularx,booktabs}\n%Code\n\\RequirePackage{listings}\n\n%define color\n\\definecolor{termgreen}{RGB}{0,100,0}\n\n% New Command\n\\newcommand*{\\cover}[1]{\n    \\title{#1}\n    \\author{Ruiji Wei}\n    \\maketitle\n    \\tableofcontents\n}\n\n\\newcommand*{\\centergpaph}[2]{\n    \\begin{center}\n        \\includegraphics[scale=#1]{#2}\n    \\end{center}\n}\n\n\\newcommand*{\\term}[2]{\n    \\textcolor{termgreen}{\\textbf{#1(#2)}} %Chinese and Engilish\n}\n\n\\newcommand{\\ra}{\n    \\(\\rightarrow\\)\n}\n\n\\newcommand{\\la}{\n    \\(\\leftarrow\\)\n}\n\n\n% New Environment\n\\newenvironment{pros}{\\paragraph{\\emph{Pros:}}\\begin{itemize}}{\\end{itemize}}\n\\newenvironment{cons}{\\paragraph{\\emph{Cons:}}\\begin{itemize}}{\\end{itemize}}\n```\n","source":"_posts/Tool VSCode+Latex.md","raw":"---\ntitle: Tool VSCode+Latex\ndate: 2019-12-27 20:21:19\nupdate:\ntags: [Latex,VSCode,Tool]\ncategories: [Tool]\ndescription: You do not need to be a martyr to MS Word.\n---\n\n## 下载与安装\n\n### Tex Live\n\n1. 下载[Tex Live](https://www.tug.org/texlive/)的[镜像文件](http://mirror.las.iastate.edu/tex-archive/systems/texlive/Images/)\n2. 安装，可一路默认\n\n### VSCode\n\n1. 下载[VS Code](https://code.visualstudio.com/)\n2. 安装，一路默认\n3. 安装插件 Latex Workshop\n4. 配置编译设置 file-> preference -> 搜索latex，可根据自己需要勾选\n   这里给出如何配置编译命令，recipes规定如何编译，tools对应每种编译方法的参数\n\n   *latex通常需要多次编译（如获得正确目录通常需要2次），中文推荐使用xelatex*\n\n   ![settings](https://s2.ax1x.com/2019/12/29/lnY3Xd.png)\n\n   ```json\n   \"latex-workshop.latex.recipes\": [\n        {\n            \"name\": \"pdflatex*2\",\n            \"tools\": [\n                \"pdflatex\",\n                \"pdflatex\"\n            ]\n        },\n        {\n            \"name\": \"xelatex*2\",\n            \"tools\": [\n                \"xelatex\",\n                \"xelatex\"\n            ]\n        },\n        {\n            \"name\": \"pdflatex ➞ bibtex ➞ pdflatex × 2\",\n            \"tools\": [\n                \"pdflatex\",\n                \"bibtex\",\n                \"pdflatex\",\n                \"pdflatex\"\n            ]\n        },\n        {\n            \"name\": \"xelatex ➞ bibtex ➞ xelatex × 2\",\n            \"tools\": [\n                \"xelatex\",\n                \"bibtex\",\n                \"xelatex\",\n                \"xelatex\"\n            ]\n        }\n    ],\n    \"latex-workshop.latex.tools\": [\n        {\n            \"name\": \"xelatex\",\n            \"command\": \"xelatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"%DOC%\"\n            ],\n            \"env\": {}\n        },\n        {\n            \"name\": \"latexmk\",\n            \"command\": \"latexmk\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"-pdf\",\n                \"-outdir=%OUTDIR%\",\n                \"%DOC%\"\n            ],\n            \"env\": {}\n        },\n        {\n            \"name\": \"pdflatex\",\n            \"command\": \"pdflatex\",\n            \"args\": [\n                \"-synctex=1\",\n                \"-interaction=nonstopmode\",\n                \"-file-line-error\",\n                \"%DOC%\"\n            ],\n            \"env\": {}\n        },\n        {\n            \"name\": \"bibtex\",\n            \"command\": \"bibtex\",\n            \"args\": [\n                \"%DOCFILE%\"\n            ],\n            \"env\": {}\n        }\n    ],\n   ```\n\n## .tex 源文件\n\n### 基本规则\n\n1. 空格和制表符等空白字符再$\\Latex$中看作相同空白距离，连续多个空白字符视为一个\n2. 特殊字符 `# $ % ^ & _ {} \\`具有特殊含义，要表示这些字符本身在前面加反斜杠`\\#`\n3. latex命令以 \\ 开始\n4. latex环境`\\begin{environment} ... \\end{environment}`\n5. % 后接注释\n\n### 源文件的结构\n\n```tex\n% 文档类型\n\\documentclass[options]{class}\n\n% 需要的宏包\n\\usepackage[options]{class}\n\n\\title{example}\n\\author{author}\n\\date{date}\n\n\\begin{document}\n    \\maketitle %\n    \\tableofcontents % 目录\n\n    % 文档内容\n\n    \\part{}\n    \\chapter{}\n    \\section{}\n    \\subsection{}\n\n    \\include{filename} % 用来包含其他tex文件，会另起新的一页\n    \\input{filename} % 简单插入\n\\end{document}\n```\n\n### 常用文档类型\n\n1. article / ctexart ,ctex前缀类型支持中文\n2. report / ctexrep\n3. book / ctexbook\n\n### 常用命令与环境\n\n#### 换行、缩进、空格\n\n```tex\na \\quad\\quad\\quad\\quad\\quad b\n\n\\noindent % 无缩进\n\n\\newline\n\n\\newpage\n```\n\n#### 列表\n\n```tex\n% 无序列表\n\\begin{itemize}\n    \\item item 1\n    \\item[a] item a % 可以规定前面的标号\n\\end{itemize}\n\n% 有序列表\n\\begin{enumerate}\n    \\item item 1\n\\end{enumerate}\n```\n\n#### 表格\n\n```tex\n\\begin{tabular}{|l|c|r|} % | 为表格中的竖线，lcr为表格内容居左中或右\n    \\hline\n    l & c & r \\\\\n    \\hline\n\\end{tabular}\n```\n\n#### 等式和多行等式\n\n```tex\n\\begin{equation} % euqation* ，*号一般表示不需要序号\n    1+1=2\n\\end{equation}\n\n\\begin{align}\n    x&=1\\\\ % & 表明对齐点\n    y&=2\n\\end{align}\n```\n\n#### 图片\n\n```tex\n\\begin{figure}[H]\n    \\centering\n    \\includegraphics[width=\\textwidth]{img.jpg}\n    \\caption{caption}\n    \\label{Fig 1.}\n\\end{figure}\n```\n\n#### 引用\n\n```tex\n% 文章中引用\n\\cite{ref1}\n\n% 在文章末尾添加引用文献详情\n\\begin{thebibliography}{10}\n  \\bibitem{ref1} Dean, Jeffrey, and Sanjay Ghemawat. \"MapReduce: simplified data processing on large clusters.\" Communications of the ACM 51.1 (2008): 107-113.\n\\end{thebibliography}\n```\n\n#### 数学\n\n```tex\n% 段内数学文本\n$...$ or \\(...\\)\n% 段间\n$$...$$ or \\[...\\]\n\n% example\n$$\n\\hat{x}_{down}^{up}=\\frac{\\alpha\\times\\sum_{0}^{n}i}{\\infty}\n$$\n```\n\n$$\n\\hat{x}_{down}^{up}=\\frac{\\alpha\\times\\sum_{0}^{n}i}{\\infty}\n$$\n\n### 常用宏包\n\n#### 设置页边距\n\n```tex\n\\usepackage{geometry}\n\\geometry{top=3cm,bottom=3cm,left=1cm,right=1cm}\n```\n\n#### 设置页码形式\n\n```tex\n\\pagenumbering{arabic}\n% arabic - 阿拉伯数字\n% roman - 小写的罗马数字\n% Roman - 大写的罗马数字\n% alph - 小写的字符形式\n% Alph -大写的字符形式\n```\n\n#### 定制页眉和页脚\n\n```tex\n\\usepackage{fancyhdr}\n\\pagestyle{fancy} % change the style from “plain” to “fancy”\n% Latex预设的页眉页脚\n% empty 没有页眉页脚；\n% plain 没有页眉，页脚是居中的页码；\n% heading 没有页脚，页眉是章节名称的页码；\n% myheading 没有页脚，页眉是页码和用户自定义的内容\n\\fancyhead[LO]{\\leftmark}\n\\fancyhead[R]{\\rightmark}\n\\fancyfoot[C]{\\thepage}\n% E: Even page\n% O: Odd page\n% L: Left field\n% C: Center field\n% R: Right field\n% \\thepage\tnumber of the current page\n% \\leftmark\tcurrent chapter name printed like \"CHAPTER 3. THIS IS THE CHAPTER TITLE\"\n% \\rightmark\tcurrent section name printed like \"1.6. THIS IS THE SECTION TITLE\"\n% \\chaptername\tthe name chapter in the current language. If this is English, it will display \"Chapter\"\n% \\thechapter\tcurrent chapter number\n% \\thesection\tcurrent section number\n```\n\n#### 目录点击可达\n\n```tex\n\\usepackage{hyperref}\n```\n\n#### 使用图片\n\n```tex\n\\usepackage{graphicx}\n\n\\includegraphics[scale=.5\\textwidth]{xxx.img}\n```\n\n#### 数学包\n\n```tex\n\\usepackage{amsmath}\n\\usepackage{amssymb} % 包含常用数学字符运算符\n```\n\n#### 颜色\n\n```tex\n\\usepackage{color}\n\n\\definecolor{ColorName}{RGB}{0,123,255} % 可自己定义颜色\n\\textcolor{red}{123} % red blue 等颜色已被默认定义\n```\n\n#### 双栏\n\n```tex\n\\documentclass[twocolumn]{article} % method 1 直接设置文档,所有文档都双栏\n\n\\usepackage{multicol} % method 2 可具体控制\n\\begin{multicols}[2]\n\\end{multicols}\n```\n\n### 自定义命令和环境\n\n```tex\n% \\newcommand{name}[num]{definition}\n\\newcommand{\\textbfsl}[1]{\n    \\textbf{\\textsl{#1}}\n}\n\n% \\newenvironment{name}[num]{before}{after}\n% 在before 中的内容将在此环境包含的文本之前处理，\n% 而在after 中的内容将在遇到\\end{name} 命令时处理。\n\\newenvironment{textslbf}[1]{do before}{do after}\n```\n\n### 编写 .cls 文件\n\n可以自己编写 .cls 文件，提供一个文档类型，方便以后使用， .cls 文件放在与 .tex 文件同目录下\n\n```tex\n% Example\n% My document class for note\n\n\\ProvidesClass{note} % .tex 中使用，\\documentclass{note}\n\n\\LoadClass[a4paper,UTF8]{ctexbook}\n\n%Layout\n\\RequirePackage{hyperref,fancyhdr,geometry}\n\\geometry{\n    left=1cm,\n    right=1cm,\n    top=1cm,\n    bottom=1cm\n}\n\\setlength\\parindent{0pt}\n\n%Language\n\\RequirePackage{ctex,fontspec}\n%Color\n\\RequirePackage{xcolor}\n%Math\n\\RequirePackage{amsmath,amsthm,amsfonts,amssymb}\n%graph\n\\RequirePackage{graphicx}\n%Item\n\\RequirePackage{enumerate}\n%tabularx\n\\RequirePackage{tabularx,booktabs}\n%Code\n\\RequirePackage{listings}\n\n%define color\n\\definecolor{termgreen}{RGB}{0,100,0}\n\n% New Command\n\\newcommand*{\\cover}[1]{\n    \\title{#1}\n    \\author{Ruiji Wei}\n    \\maketitle\n    \\tableofcontents\n}\n\n\\newcommand*{\\centergpaph}[2]{\n    \\begin{center}\n        \\includegraphics[scale=#1]{#2}\n    \\end{center}\n}\n\n\\newcommand*{\\term}[2]{\n    \\textcolor{termgreen}{\\textbf{#1(#2)}} %Chinese and Engilish\n}\n\n\\newcommand{\\ra}{\n    \\(\\rightarrow\\)\n}\n\n\\newcommand{\\la}{\n    \\(\\leftarrow\\)\n}\n\n\n% New Environment\n\\newenvironment{pros}{\\paragraph{\\emph{Pros:}}\\begin{itemize}}{\\end{itemize}}\n\\newenvironment{cons}{\\paragraph{\\emph{Cons:}}\\begin{itemize}}{\\end{itemize}}\n```\n","slug":"Tool VSCode+Latex","published":1,"updated":"2020-01-18T22:27:26.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9pa0016mou5cysucd6y","content":"<h2 id=\"下载与安装\"><a href=\"#下载与安装\" class=\"headerlink\" title=\"下载与安装\"></a>下载与安装</h2><h3 id=\"Tex-Live\"><a href=\"#Tex-Live\" class=\"headerlink\" title=\"Tex Live\"></a>Tex Live</h3><ol>\n<li>下载<a href=\"https://www.tug.org/texlive/\" target=\"_blank\" rel=\"noopener\">Tex Live</a>的<a href=\"http://mirror.las.iastate.edu/tex-archive/systems/texlive/Images/\" target=\"_blank\" rel=\"noopener\">镜像文件</a></li>\n<li>安装，可一路默认</li>\n</ol>\n<h3 id=\"VSCode\"><a href=\"#VSCode\" class=\"headerlink\" title=\"VSCode\"></a>VSCode</h3><ol>\n<li>下载<a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">VS Code</a></li>\n<li>安装，一路默认</li>\n<li>安装插件 Latex Workshop</li>\n<li><p>配置编译设置 file-&gt; preference -&gt; 搜索latex，可根据自己需要勾选<br>这里给出如何配置编译命令，recipes规定如何编译，tools对应每种编译方法的参数</p>\n<p><em>latex通常需要多次编译（如获得正确目录通常需要2次），中文推荐使用xelatex</em></p>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/lnY3Xd.png\" alt=\"settings\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"latex-workshop.latex.recipes\": [</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"pdflatex*2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"xelatex*2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"pdflatex ➞ bibtex ➞ pdflatex × 2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"xelatex ➞ bibtex ➞ xelatex × 2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> ],</span><br><span class=\"line\"> \"latex-workshop.latex.tools\": [</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"-synctex=1\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-interaction=nonstopmode\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-file-line-error\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"%DOC%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"latexmk\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"latexmk\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"-synctex=1\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-interaction=nonstopmode\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-file-line-error\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-pdf\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-outdir=%OUTDIR%\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"%DOC%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"-synctex=1\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-interaction=nonstopmode\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-file-line-error\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"%DOC%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"%DOCFILE%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> ],</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"tex-源文件\"><a href=\"#tex-源文件\" class=\"headerlink\" title=\".tex 源文件\"></a>.tex 源文件</h2><h3 id=\"基本规则\"><a href=\"#基本规则\" class=\"headerlink\" title=\"基本规则\"></a>基本规则</h3><ol>\n<li>空格和制表符等空白字符再$\\Latex$中看作相同空白距离，连续多个空白字符视为一个</li>\n<li>特殊字符 <code># $ % ^ &amp; _ {} \\</code>具有特殊含义，要表示这些字符本身在前面加反斜杠<code>\\#</code></li>\n<li>latex命令以 \\ 开始</li>\n<li>latex环境<code>\\begin{environment} ... \\end{environment}</code></li>\n<li>% 后接注释</li>\n</ol>\n<h3 id=\"源文件的结构\"><a href=\"#源文件的结构\" class=\"headerlink\" title=\"源文件的结构\"></a>源文件的结构</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 文档类型</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">documentclass</span><span class=\"string\">[options]</span><span class=\"string\">&#123;class&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 需要的宏包</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">[options]</span><span class=\"string\">&#123;class&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">title</span><span class=\"string\">&#123;example&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">author</span><span class=\"string\">&#123;author&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">date</span><span class=\"string\">&#123;date&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;document&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">maketitle</span></span> <span class=\"comment\">%</span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">tableofcontents</span></span> <span class=\"comment\">% 目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 文档内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">part</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">chapter</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">section</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">subsection</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">include</span><span class=\"string\">&#123;filename&#125;</span></span> <span class=\"comment\">% 用来包含其他tex文件，会另起新的一页</span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">input</span><span class=\"string\">&#123;filename&#125;</span></span> <span class=\"comment\">% 简单插入</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;document&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"常用文档类型\"><a href=\"#常用文档类型\" class=\"headerlink\" title=\"常用文档类型\"></a>常用文档类型</h3><ol>\n<li>article / ctexart ,ctex前缀类型支持中文</li>\n<li>report / ctexrep</li>\n<li>book / ctexbook</li>\n</ol>\n<h3 id=\"常用命令与环境\"><a href=\"#常用命令与环境\" class=\"headerlink\" title=\"常用命令与环境\"></a>常用命令与环境</h3><h4 id=\"换行、缩进、空格\"><a href=\"#换行、缩进、空格\" class=\"headerlink\" title=\"换行、缩进、空格\"></a>换行、缩进、空格</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span> b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">noindent</span></span> <span class=\"comment\">% 无缩进</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newline</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newpage</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 无序列表</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;itemize&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">item</span></span> item 1</span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">item</span><span class=\"string\">[a]</span></span> item a <span class=\"comment\">% 可以规定前面的标号</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;itemize&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 有序列表</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;enumerate&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">item</span></span> item 1</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;enumerate&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;tabular&#125;</span><span class=\"string\">&#123;|l|c|r|&#125;</span></span> <span class=\"comment\">% | 为表格中的竖线，lcr为表格内容居左中或右</span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">hline</span></span></span><br><span class=\"line\">    l &amp; c &amp; r <span class=\"tag\">\\<span class=\"name\">\\</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">hline</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;tabular&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"等式和多行等式\"><a href=\"#等式和多行等式\" class=\"headerlink\" title=\"等式和多行等式\"></a>等式和多行等式</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;equation&#125;</span></span> <span class=\"comment\">% euqation* ，*号一般表示不需要序号</span></span><br><span class=\"line\">    1+1=2</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;equation&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;align&#125;</span></span></span><br><span class=\"line\">    x&amp;=1<span class=\"tag\">\\<span class=\"name\">\\</span></span> <span class=\"comment\">% &amp; 表明对齐点</span></span><br><span class=\"line\">    y&amp;=2</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;align&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;figure&#125;</span><span class=\"string\">[H]</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">centering</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">includegraphics</span><span class=\"string\">[width=\\textwidth]</span><span class=\"string\">&#123;img.jpg&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">caption</span><span class=\"string\">&#123;caption&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">label</span><span class=\"string\">&#123;Fig 1.&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;figure&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 文章中引用</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">cite</span><span class=\"string\">&#123;ref1&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 在文章末尾添加引用文献详情</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;thebibliography&#125;</span><span class=\"string\">&#123;10&#125;</span></span></span><br><span class=\"line\">  <span class=\"tag\">\\<span class=\"name\">bibitem</span><span class=\"string\">&#123;ref1&#125;</span></span> Dean, Jeffrey, and Sanjay Ghemawat. \"MapReduce: simplified data processing on large clusters.\" Communications of the ACM 51.1 (2008): 107-113.</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;thebibliography&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"数学\"><a href=\"#数学\" class=\"headerlink\" title=\"数学\"></a>数学</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 段内数学文本</span></span><br><span class=\"line\"><span class=\"formula\">$...$</span> or <span class=\"tag\">\\<span class=\"name\">(</span></span>...<span class=\"tag\">\\<span class=\"name\">)</span></span></span><br><span class=\"line\"><span class=\"comment\">% 段间</span></span><br><span class=\"line\"><span class=\"formula\">$$...$$</span> or <span class=\"tag\">\\<span class=\"name\">[</span></span>...<span class=\"tag\">\\<span class=\"name\">]</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% example</span></span><br><span class=\"line\"><span class=\"formula\">$$</span></span><br><span class=\"line\"><span class=\"formula\"><span class=\"tag\">\\<span class=\"name\">hat</span><span class=\"string\">&#123;x&#125;</span></span>_&#123;down&#125;^&#123;up&#125;=<span class=\"tag\">\\<span class=\"name\">frac</span><span class=\"string\">&#123;\\alpha\\times\\sum_&#123;0&#125;</span></span>^&#123;n&#125;i&#125;&#123;<span class=\"tag\">\\<span class=\"name\">infty</span></span>&#125;</span></span><br><span class=\"line\"><span class=\"formula\">$$</span></span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\hat{x}_{down}^{up}=\\frac{\\alpha\\times\\sum_{0}^{n}i}{\\infty}</script><h3 id=\"常用宏包\"><a href=\"#常用宏包\" class=\"headerlink\" title=\"常用宏包\"></a>常用宏包</h3><h4 id=\"设置页边距\"><a href=\"#设置页边距\" class=\"headerlink\" title=\"设置页边距\"></a>设置页边距</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;geometry&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">geometry</span><span class=\"string\">&#123;top=3cm,bottom=3cm,left=1cm,right=1cm&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"设置页码形式\"><a href=\"#设置页码形式\" class=\"headerlink\" title=\"设置页码形式\"></a>设置页码形式</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">pagenumbering</span><span class=\"string\">&#123;arabic&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">% arabic - 阿拉伯数字</span></span><br><span class=\"line\"><span class=\"comment\">% roman - 小写的罗马数字</span></span><br><span class=\"line\"><span class=\"comment\">% Roman - 大写的罗马数字</span></span><br><span class=\"line\"><span class=\"comment\">% alph - 小写的字符形式</span></span><br><span class=\"line\"><span class=\"comment\">% Alph -大写的字符形式</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"定制页眉和页脚\"><a href=\"#定制页眉和页脚\" class=\"headerlink\" title=\"定制页眉和页脚\"></a>定制页眉和页脚</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;fancyhdr&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">pagestyle</span><span class=\"string\">&#123;fancy&#125;</span></span> <span class=\"comment\">% change the style from “plain” to “fancy”</span></span><br><span class=\"line\"><span class=\"comment\">% Latex预设的页眉页脚</span></span><br><span class=\"line\"><span class=\"comment\">% empty 没有页眉页脚；</span></span><br><span class=\"line\"><span class=\"comment\">% plain 没有页眉，页脚是居中的页码；</span></span><br><span class=\"line\"><span class=\"comment\">% heading 没有页脚，页眉是章节名称的页码；</span></span><br><span class=\"line\"><span class=\"comment\">% myheading 没有页脚，页眉是页码和用户自定义的内容</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">fancyhead</span><span class=\"string\">[LO]</span><span class=\"string\">&#123;\\leftmark&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">fancyhead</span><span class=\"string\">[R]</span><span class=\"string\">&#123;\\rightmark&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">fancyfoot</span><span class=\"string\">[C]</span><span class=\"string\">&#123;\\thepage&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">% E: Even page</span></span><br><span class=\"line\"><span class=\"comment\">% O: Odd page</span></span><br><span class=\"line\"><span class=\"comment\">% L: Left field</span></span><br><span class=\"line\"><span class=\"comment\">% C: Center field</span></span><br><span class=\"line\"><span class=\"comment\">% R: Right field</span></span><br><span class=\"line\"><span class=\"comment\">% \\thepage\tnumber of the current page</span></span><br><span class=\"line\"><span class=\"comment\">% \\leftmark\tcurrent chapter name printed like \"CHAPTER 3. THIS IS THE CHAPTER TITLE\"</span></span><br><span class=\"line\"><span class=\"comment\">% \\rightmark\tcurrent section name printed like \"1.6. THIS IS THE SECTION TITLE\"</span></span><br><span class=\"line\"><span class=\"comment\">% \\chaptername\tthe name chapter in the current language. If this is English, it will display \"Chapter\"</span></span><br><span class=\"line\"><span class=\"comment\">% \\thechapter\tcurrent chapter number</span></span><br><span class=\"line\"><span class=\"comment\">% \\thesection\tcurrent section number</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"目录点击可达\"><a href=\"#目录点击可达\" class=\"headerlink\" title=\"目录点击可达\"></a>目录点击可达</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;hyperref&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用图片\"><a href=\"#使用图片\" class=\"headerlink\" title=\"使用图片\"></a>使用图片</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;graphicx&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">includegraphics</span><span class=\"string\">[scale=.5\\textwidth]</span><span class=\"string\">&#123;xxx.img&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"数学包\"><a href=\"#数学包\" class=\"headerlink\" title=\"数学包\"></a>数学包</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;amsmath&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;amssymb&#125;</span></span> <span class=\"comment\">% 包含常用数学字符运算符</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;color&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">definecolor</span><span class=\"string\">&#123;ColorName&#125;</span><span class=\"string\">&#123;RGB&#125;</span><span class=\"string\">&#123;0,123,255&#125;</span></span> <span class=\"comment\">% 可自己定义颜色</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">textcolor</span><span class=\"string\">&#123;red&#125;</span><span class=\"string\">&#123;123&#125;</span></span> <span class=\"comment\">% red blue 等颜色已被默认定义</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"双栏\"><a href=\"#双栏\" class=\"headerlink\" title=\"双栏\"></a>双栏</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">documentclass</span><span class=\"string\">[twocolumn]</span><span class=\"string\">&#123;article&#125;</span></span> <span class=\"comment\">% method 1 直接设置文档,所有文档都双栏</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;multicol&#125;</span></span> <span class=\"comment\">% method 2 可具体控制</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;multicols&#125;</span><span class=\"string\">[2]</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;multicols&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义命令和环境\"><a href=\"#自定义命令和环境\" class=\"headerlink\" title=\"自定义命令和环境\"></a>自定义命令和环境</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% \\newcommand&#123;name&#125;[num]&#123;definition&#125;</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand</span><span class=\"string\">&#123;\\textbfsl&#125;</span><span class=\"string\">[1]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\textbf&#123;\\textsl&#123;#1&#125;</span></span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% \\newenvironment&#123;name&#125;[num]&#123;before&#125;&#123;after&#125;</span></span><br><span class=\"line\"><span class=\"comment\">% 在before 中的内容将在此环境包含的文本之前处理，</span></span><br><span class=\"line\"><span class=\"comment\">% 而在after 中的内容将在遇到\\end&#123;name&#125; 命令时处理。</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newenvironment</span><span class=\"string\">&#123;textslbf&#125;</span><span class=\"string\">[1]</span><span class=\"string\">&#123;do before&#125;</span><span class=\"string\">&#123;do after&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"编写-cls-文件\"><a href=\"#编写-cls-文件\" class=\"headerlink\" title=\"编写 .cls 文件\"></a>编写 .cls 文件</h3><p>可以自己编写 .cls 文件，提供一个文档类型，方便以后使用， .cls 文件放在与 .tex 文件同目录下</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% Example</span></span><br><span class=\"line\"><span class=\"comment\">% My document class for note</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">ProvidesClass</span><span class=\"string\">&#123;note&#125;</span></span> <span class=\"comment\">% .tex 中使用，\\documentclass&#123;note&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">LoadClass</span><span class=\"string\">[a4paper,UTF8]</span><span class=\"string\">&#123;ctexbook&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%Layout</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;hyperref,fancyhdr,geometry&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">geometry</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    left=1cm,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    right=1cm,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    top=1cm,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    bottom=1cm</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">setlength</span></span><span class=\"tag\">\\<span class=\"name\">parindent</span><span class=\"string\">&#123;0pt&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%Language</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;ctex,fontspec&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Color</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;xcolor&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Math</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;amsmath,amsthm,amsfonts,amssymb&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%graph</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;graphicx&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Item</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;enumerate&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%tabularx</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;tabularx,booktabs&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Code</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;listings&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%define color</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">definecolor</span><span class=\"string\">&#123;termgreen&#125;</span><span class=\"string\">&#123;RGB&#125;</span><span class=\"string\">&#123;0,100,0&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% New Command</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand*</span><span class=\"string\">&#123;\\cover&#125;</span><span class=\"string\">[1]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\title&#123;#1&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">author</span><span class=\"string\">&#123;Ruiji Wei&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">maketitle</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">tableofcontents</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand*</span><span class=\"string\">&#123;\\centergpaph&#125;</span><span class=\"string\">[2]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\begin&#123;center&#125;</span></span></span><br><span class=\"line\">        <span class=\"tag\">\\<span class=\"name\">includegraphics</span><span class=\"string\">[scale=#1]</span><span class=\"string\">&#123;#2&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;center&#125;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand*</span><span class=\"string\">&#123;\\term&#125;</span><span class=\"string\">[2]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\textcolor&#123;termgreen&#125;</span><span class=\"string\">&#123;\\textbf&#123;#1(#2)&#125;</span></span>&#125; <span class=\"comment\">%Chinese and Engilish</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand</span><span class=\"string\">&#123;\\ra&#125;</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\(\\rightarrow\\)</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand</span><span class=\"string\">&#123;\\la&#125;</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\(\\leftarrow\\)</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% New Environment</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newenvironment</span><span class=\"string\">&#123;pros&#125;</span><span class=\"string\">&#123;\\paragraph&#123;\\emph&#123;Pros:&#125;</span></span>&#125;<span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;&#123;<span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newenvironment</span><span class=\"string\">&#123;cons&#125;</span><span class=\"string\">&#123;\\paragraph&#123;\\emph&#123;Cons:&#125;</span></span>&#125;<span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;&#123;<span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":6722,"excerpt":"","more":"<h2 id=\"下载与安装\"><a href=\"#下载与安装\" class=\"headerlink\" title=\"下载与安装\"></a>下载与安装</h2><h3 id=\"Tex-Live\"><a href=\"#Tex-Live\" class=\"headerlink\" title=\"Tex Live\"></a>Tex Live</h3><ol>\n<li>下载<a href=\"https://www.tug.org/texlive/\" target=\"_blank\" rel=\"noopener\">Tex Live</a>的<a href=\"http://mirror.las.iastate.edu/tex-archive/systems/texlive/Images/\" target=\"_blank\" rel=\"noopener\">镜像文件</a></li>\n<li>安装，可一路默认</li>\n</ol>\n<h3 id=\"VSCode\"><a href=\"#VSCode\" class=\"headerlink\" title=\"VSCode\"></a>VSCode</h3><ol>\n<li>下载<a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">VS Code</a></li>\n<li>安装，一路默认</li>\n<li>安装插件 Latex Workshop</li>\n<li><p>配置编译设置 file-&gt; preference -&gt; 搜索latex，可根据自己需要勾选<br>这里给出如何配置编译命令，recipes规定如何编译，tools对应每种编译方法的参数</p>\n<p><em>latex通常需要多次编译（如获得正确目录通常需要2次），中文推荐使用xelatex</em></p>\n<p><img src=\"https://s2.ax1x.com/2019/12/29/lnY3Xd.png\" alt=\"settings\"></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"latex-workshop.latex.recipes\": [</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"pdflatex*2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"xelatex*2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"pdflatex ➞ bibtex ➞ pdflatex × 2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"pdflatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"xelatex ➞ bibtex ➞ xelatex × 2\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"tools\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"xelatex\"</span></span><br><span class=\"line\">         ]</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> ],</span><br><span class=\"line\"> \"latex-workshop.latex.tools\": [</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"xelatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"-synctex=1\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-interaction=nonstopmode\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-file-line-error\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"%DOC%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"latexmk\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"latexmk\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"-synctex=1\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-interaction=nonstopmode\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-file-line-error\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-pdf\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-outdir=%OUTDIR%\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"%DOC%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"pdflatex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"-synctex=1\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-interaction=nonstopmode\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"-file-line-error\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"%DOC%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">     &#123;</span><br><span class=\"line\">         <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"bibtex\"</span>,</span><br><span class=\"line\">         <span class=\"attr\">\"args\"</span>: [</span><br><span class=\"line\">             <span class=\"string\">\"%DOCFILE%\"</span></span><br><span class=\"line\">         ],</span><br><span class=\"line\">         <span class=\"attr\">\"env\"</span>: &#123;&#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> ],</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"tex-源文件\"><a href=\"#tex-源文件\" class=\"headerlink\" title=\".tex 源文件\"></a>.tex 源文件</h2><h3 id=\"基本规则\"><a href=\"#基本规则\" class=\"headerlink\" title=\"基本规则\"></a>基本规则</h3><ol>\n<li>空格和制表符等空白字符再$\\Latex$中看作相同空白距离，连续多个空白字符视为一个</li>\n<li>特殊字符 <code># $ % ^ &amp; _ {} \\</code>具有特殊含义，要表示这些字符本身在前面加反斜杠<code>\\#</code></li>\n<li>latex命令以 \\ 开始</li>\n<li>latex环境<code>\\begin{environment} ... \\end{environment}</code></li>\n<li>% 后接注释</li>\n</ol>\n<h3 id=\"源文件的结构\"><a href=\"#源文件的结构\" class=\"headerlink\" title=\"源文件的结构\"></a>源文件的结构</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 文档类型</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">documentclass</span><span class=\"string\">[options]</span><span class=\"string\">&#123;class&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 需要的宏包</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">[options]</span><span class=\"string\">&#123;class&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">title</span><span class=\"string\">&#123;example&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">author</span><span class=\"string\">&#123;author&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">date</span><span class=\"string\">&#123;date&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;document&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">maketitle</span></span> <span class=\"comment\">%</span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">tableofcontents</span></span> <span class=\"comment\">% 目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">% 文档内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">part</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">chapter</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">section</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">subsection</span><span class=\"string\">&#123;&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">include</span><span class=\"string\">&#123;filename&#125;</span></span> <span class=\"comment\">% 用来包含其他tex文件，会另起新的一页</span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">input</span><span class=\"string\">&#123;filename&#125;</span></span> <span class=\"comment\">% 简单插入</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;document&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"常用文档类型\"><a href=\"#常用文档类型\" class=\"headerlink\" title=\"常用文档类型\"></a>常用文档类型</h3><ol>\n<li>article / ctexart ,ctex前缀类型支持中文</li>\n<li>report / ctexrep</li>\n<li>book / ctexbook</li>\n</ol>\n<h3 id=\"常用命令与环境\"><a href=\"#常用命令与环境\" class=\"headerlink\" title=\"常用命令与环境\"></a>常用命令与环境</h3><h4 id=\"换行、缩进、空格\"><a href=\"#换行、缩进、空格\" class=\"headerlink\" title=\"换行、缩进、空格\"></a>换行、缩进、空格</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a <span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span><span class=\"tag\">\\<span class=\"name\">quad</span></span> b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">noindent</span></span> <span class=\"comment\">% 无缩进</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newline</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newpage</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 无序列表</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;itemize&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">item</span></span> item 1</span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">item</span><span class=\"string\">[a]</span></span> item a <span class=\"comment\">% 可以规定前面的标号</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;itemize&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 有序列表</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;enumerate&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">item</span></span> item 1</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;enumerate&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;tabular&#125;</span><span class=\"string\">&#123;|l|c|r|&#125;</span></span> <span class=\"comment\">% | 为表格中的竖线，lcr为表格内容居左中或右</span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">hline</span></span></span><br><span class=\"line\">    l &amp; c &amp; r <span class=\"tag\">\\<span class=\"name\">\\</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">hline</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;tabular&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"等式和多行等式\"><a href=\"#等式和多行等式\" class=\"headerlink\" title=\"等式和多行等式\"></a>等式和多行等式</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;equation&#125;</span></span> <span class=\"comment\">% euqation* ，*号一般表示不需要序号</span></span><br><span class=\"line\">    1+1=2</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;equation&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;align&#125;</span></span></span><br><span class=\"line\">    x&amp;=1<span class=\"tag\">\\<span class=\"name\">\\</span></span> <span class=\"comment\">% &amp; 表明对齐点</span></span><br><span class=\"line\">    y&amp;=2</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;align&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;figure&#125;</span><span class=\"string\">[H]</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">centering</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">includegraphics</span><span class=\"string\">[width=\\textwidth]</span><span class=\"string\">&#123;img.jpg&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">caption</span><span class=\"string\">&#123;caption&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">label</span><span class=\"string\">&#123;Fig 1.&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;figure&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 文章中引用</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">cite</span><span class=\"string\">&#123;ref1&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 在文章末尾添加引用文献详情</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;thebibliography&#125;</span><span class=\"string\">&#123;10&#125;</span></span></span><br><span class=\"line\">  <span class=\"tag\">\\<span class=\"name\">bibitem</span><span class=\"string\">&#123;ref1&#125;</span></span> Dean, Jeffrey, and Sanjay Ghemawat. \"MapReduce: simplified data processing on large clusters.\" Communications of the ACM 51.1 (2008): 107-113.</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;thebibliography&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"数学\"><a href=\"#数学\" class=\"headerlink\" title=\"数学\"></a>数学</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 段内数学文本</span></span><br><span class=\"line\"><span class=\"formula\">$...$</span> or <span class=\"tag\">\\<span class=\"name\">(</span></span>...<span class=\"tag\">\\<span class=\"name\">)</span></span></span><br><span class=\"line\"><span class=\"comment\">% 段间</span></span><br><span class=\"line\"><span class=\"formula\">$$...$$</span> or <span class=\"tag\">\\<span class=\"name\">[</span></span>...<span class=\"tag\">\\<span class=\"name\">]</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% example</span></span><br><span class=\"line\"><span class=\"formula\">$$</span></span><br><span class=\"line\"><span class=\"formula\"><span class=\"tag\">\\<span class=\"name\">hat</span><span class=\"string\">&#123;x&#125;</span></span>_&#123;down&#125;^&#123;up&#125;=<span class=\"tag\">\\<span class=\"name\">frac</span><span class=\"string\">&#123;\\alpha\\times\\sum_&#123;0&#125;</span></span>^&#123;n&#125;i&#125;&#123;<span class=\"tag\">\\<span class=\"name\">infty</span></span>&#125;</span></span><br><span class=\"line\"><span class=\"formula\">$$</span></span><br></pre></td></tr></table></figure>\n<script type=\"math/tex; mode=display\">\n\\hat{x}_{down}^{up}=\\frac{\\alpha\\times\\sum_{0}^{n}i}{\\infty}</script><h3 id=\"常用宏包\"><a href=\"#常用宏包\" class=\"headerlink\" title=\"常用宏包\"></a>常用宏包</h3><h4 id=\"设置页边距\"><a href=\"#设置页边距\" class=\"headerlink\" title=\"设置页边距\"></a>设置页边距</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;geometry&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">geometry</span><span class=\"string\">&#123;top=3cm,bottom=3cm,left=1cm,right=1cm&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"设置页码形式\"><a href=\"#设置页码形式\" class=\"headerlink\" title=\"设置页码形式\"></a>设置页码形式</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">pagenumbering</span><span class=\"string\">&#123;arabic&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">% arabic - 阿拉伯数字</span></span><br><span class=\"line\"><span class=\"comment\">% roman - 小写的罗马数字</span></span><br><span class=\"line\"><span class=\"comment\">% Roman - 大写的罗马数字</span></span><br><span class=\"line\"><span class=\"comment\">% alph - 小写的字符形式</span></span><br><span class=\"line\"><span class=\"comment\">% Alph -大写的字符形式</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"定制页眉和页脚\"><a href=\"#定制页眉和页脚\" class=\"headerlink\" title=\"定制页眉和页脚\"></a>定制页眉和页脚</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;fancyhdr&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">pagestyle</span><span class=\"string\">&#123;fancy&#125;</span></span> <span class=\"comment\">% change the style from “plain” to “fancy”</span></span><br><span class=\"line\"><span class=\"comment\">% Latex预设的页眉页脚</span></span><br><span class=\"line\"><span class=\"comment\">% empty 没有页眉页脚；</span></span><br><span class=\"line\"><span class=\"comment\">% plain 没有页眉，页脚是居中的页码；</span></span><br><span class=\"line\"><span class=\"comment\">% heading 没有页脚，页眉是章节名称的页码；</span></span><br><span class=\"line\"><span class=\"comment\">% myheading 没有页脚，页眉是页码和用户自定义的内容</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">fancyhead</span><span class=\"string\">[LO]</span><span class=\"string\">&#123;\\leftmark&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">fancyhead</span><span class=\"string\">[R]</span><span class=\"string\">&#123;\\rightmark&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">fancyfoot</span><span class=\"string\">[C]</span><span class=\"string\">&#123;\\thepage&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">% E: Even page</span></span><br><span class=\"line\"><span class=\"comment\">% O: Odd page</span></span><br><span class=\"line\"><span class=\"comment\">% L: Left field</span></span><br><span class=\"line\"><span class=\"comment\">% C: Center field</span></span><br><span class=\"line\"><span class=\"comment\">% R: Right field</span></span><br><span class=\"line\"><span class=\"comment\">% \\thepage\tnumber of the current page</span></span><br><span class=\"line\"><span class=\"comment\">% \\leftmark\tcurrent chapter name printed like \"CHAPTER 3. THIS IS THE CHAPTER TITLE\"</span></span><br><span class=\"line\"><span class=\"comment\">% \\rightmark\tcurrent section name printed like \"1.6. THIS IS THE SECTION TITLE\"</span></span><br><span class=\"line\"><span class=\"comment\">% \\chaptername\tthe name chapter in the current language. If this is English, it will display \"Chapter\"</span></span><br><span class=\"line\"><span class=\"comment\">% \\thechapter\tcurrent chapter number</span></span><br><span class=\"line\"><span class=\"comment\">% \\thesection\tcurrent section number</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"目录点击可达\"><a href=\"#目录点击可达\" class=\"headerlink\" title=\"目录点击可达\"></a>目录点击可达</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;hyperref&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用图片\"><a href=\"#使用图片\" class=\"headerlink\" title=\"使用图片\"></a>使用图片</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;graphicx&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">includegraphics</span><span class=\"string\">[scale=.5\\textwidth]</span><span class=\"string\">&#123;xxx.img&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h4 id=\"数学包\"><a href=\"#数学包\" class=\"headerlink\" title=\"数学包\"></a>数学包</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;amsmath&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;amssymb&#125;</span></span> <span class=\"comment\">% 包含常用数学字符运算符</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;color&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">definecolor</span><span class=\"string\">&#123;ColorName&#125;</span><span class=\"string\">&#123;RGB&#125;</span><span class=\"string\">&#123;0,123,255&#125;</span></span> <span class=\"comment\">% 可自己定义颜色</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">textcolor</span><span class=\"string\">&#123;red&#125;</span><span class=\"string\">&#123;123&#125;</span></span> <span class=\"comment\">% red blue 等颜色已被默认定义</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"双栏\"><a href=\"#双栏\" class=\"headerlink\" title=\"双栏\"></a>双栏</h4><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">documentclass</span><span class=\"string\">[twocolumn]</span><span class=\"string\">&#123;article&#125;</span></span> <span class=\"comment\">% method 1 直接设置文档,所有文档都双栏</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">usepackage</span><span class=\"string\">&#123;multicol&#125;</span></span> <span class=\"comment\">% method 2 可具体控制</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;multicols&#125;</span><span class=\"string\">[2]</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;multicols&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"自定义命令和环境\"><a href=\"#自定义命令和环境\" class=\"headerlink\" title=\"自定义命令和环境\"></a>自定义命令和环境</h3><figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% \\newcommand&#123;name&#125;[num]&#123;definition&#125;</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand</span><span class=\"string\">&#123;\\textbfsl&#125;</span><span class=\"string\">[1]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\textbf&#123;\\textsl&#123;#1&#125;</span></span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% \\newenvironment&#123;name&#125;[num]&#123;before&#125;&#123;after&#125;</span></span><br><span class=\"line\"><span class=\"comment\">% 在before 中的内容将在此环境包含的文本之前处理，</span></span><br><span class=\"line\"><span class=\"comment\">% 而在after 中的内容将在遇到\\end&#123;name&#125; 命令时处理。</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newenvironment</span><span class=\"string\">&#123;textslbf&#125;</span><span class=\"string\">[1]</span><span class=\"string\">&#123;do before&#125;</span><span class=\"string\">&#123;do after&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h3 id=\"编写-cls-文件\"><a href=\"#编写-cls-文件\" class=\"headerlink\" title=\"编写 .cls 文件\"></a>编写 .cls 文件</h3><p>可以自己编写 .cls 文件，提供一个文档类型，方便以后使用， .cls 文件放在与 .tex 文件同目录下</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% Example</span></span><br><span class=\"line\"><span class=\"comment\">% My document class for note</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">ProvidesClass</span><span class=\"string\">&#123;note&#125;</span></span> <span class=\"comment\">% .tex 中使用，\\documentclass&#123;note&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">LoadClass</span><span class=\"string\">[a4paper,UTF8]</span><span class=\"string\">&#123;ctexbook&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%Layout</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;hyperref,fancyhdr,geometry&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">geometry</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    left=1cm,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    right=1cm,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    top=1cm,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    bottom=1cm</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">setlength</span></span><span class=\"tag\">\\<span class=\"name\">parindent</span><span class=\"string\">&#123;0pt&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%Language</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;ctex,fontspec&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Color</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;xcolor&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Math</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;amsmath,amsthm,amsfonts,amssymb&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%graph</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;graphicx&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Item</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;enumerate&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%tabularx</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;tabularx,booktabs&#125;</span></span></span><br><span class=\"line\"><span class=\"comment\">%Code</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">RequirePackage</span><span class=\"string\">&#123;listings&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%define color</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">definecolor</span><span class=\"string\">&#123;termgreen&#125;</span><span class=\"string\">&#123;RGB&#125;</span><span class=\"string\">&#123;0,100,0&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% New Command</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand*</span><span class=\"string\">&#123;\\cover&#125;</span><span class=\"string\">[1]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\title&#123;#1&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">author</span><span class=\"string\">&#123;Ruiji Wei&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">maketitle</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">tableofcontents</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand*</span><span class=\"string\">&#123;\\centergpaph&#125;</span><span class=\"string\">[2]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\begin&#123;center&#125;</span></span></span><br><span class=\"line\">        <span class=\"tag\">\\<span class=\"name\">includegraphics</span><span class=\"string\">[scale=#1]</span><span class=\"string\">&#123;#2&#125;</span></span></span><br><span class=\"line\">    <span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;center&#125;</span></span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand*</span><span class=\"string\">&#123;\\term&#125;</span><span class=\"string\">[2]</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\textcolor&#123;termgreen&#125;</span><span class=\"string\">&#123;\\textbf&#123;#1(#2)&#125;</span></span>&#125; <span class=\"comment\">%Chinese and Engilish</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand</span><span class=\"string\">&#123;\\ra&#125;</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\(\\rightarrow\\)</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newcommand</span><span class=\"string\">&#123;\\la&#125;</span><span class=\"string\">&#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">    \\(\\leftarrow\\)</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">&#125;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% New Environment</span></span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newenvironment</span><span class=\"string\">&#123;pros&#125;</span><span class=\"string\">&#123;\\paragraph&#123;\\emph&#123;Pros:&#125;</span></span>&#125;<span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;&#123;<span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;</span><br><span class=\"line\"><span class=\"tag\">\\<span class=\"name\">newenvironment</span><span class=\"string\">&#123;cons&#125;</span><span class=\"string\">&#123;\\paragraph&#123;\\emph&#123;Cons:&#125;</span></span>&#125;<span class=\"tag\">\\<span class=\"name\">begin</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;&#123;<span class=\"tag\">\\<span class=\"name\">end</span><span class=\"string\">&#123;itemize&#125;</span></span>&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Network 基础","date":"2020-01-16T22:43:59.000Z","update":null,"description":"Network basics","_content":"\n## 网络模型\n\n## 应用层\n\n## 运输层\n\n## 网络层\n\n## 数据链路层\n\n## 物理层","source":"_posts/Network 基础.md","raw":"---\ntitle: Network 基础\ndate: 2020-01-16 17:43:59\nupdate:\ntags: [Network]\ncategories: [Network]\ndescription: Network basics\n---\n\n## 网络模型\n\n## 应用层\n\n## 运输层\n\n## 网络层\n\n## 数据链路层\n\n## 物理层","slug":"Network 基础","published":1,"updated":"2020-01-24T21:45:57.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9pb0018mou5egr49fbz","content":"<h2 id=\"网络模型\"><a href=\"#网络模型\" class=\"headerlink\" title=\"网络模型\"></a>网络模型</h2><h2 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h2><h2 id=\"运输层\"><a href=\"#运输层\" class=\"headerlink\" title=\"运输层\"></a>运输层</h2><h2 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h2><h2 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h2><h2 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h2>","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":21,"excerpt":"","more":"<h2 id=\"网络模型\"><a href=\"#网络模型\" class=\"headerlink\" title=\"网络模型\"></a>网络模型</h2><h2 id=\"应用层\"><a href=\"#应用层\" class=\"headerlink\" title=\"应用层\"></a>应用层</h2><h2 id=\"运输层\"><a href=\"#运输层\" class=\"headerlink\" title=\"运输层\"></a>运输层</h2><h2 id=\"网络层\"><a href=\"#网络层\" class=\"headerlink\" title=\"网络层\"></a>网络层</h2><h2 id=\"数据链路层\"><a href=\"#数据链路层\" class=\"headerlink\" title=\"数据链路层\"></a>数据链路层</h2><h2 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h2>"},{"title":"git","date":"2019-12-26T15:17:12.000Z","update":null,"description":"能用众力,则无敌于天下矣；能用众智,则无畏于圣人矣。","_content":"\n## Git\n\n[Git Docs](https://git-scm.com/book/zh/v2)\n\n## 概念\n\n### 文件存储方式\n\n![文件存储方式](https://s2.ax1x.com/2019/12/27/lE4UL6.png)\n\nGit 更像是把数据看作是对小型文件系统的一组快照。 每次你提交更新，或在 Git 中保存项目状态时，\n它主要对当时的全部文件制作一个快照并保存这个快照的索引。 \n为了高效，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。 \nGit 对待数据更像是一个 快照流。\n\n### 文件的三种状态\n\n![文件三种状态](https://s2.ax1x.com/2019/12/27/lE4byq.png)\n\n1. 已提交的 cmooitted\n2. 已修改的 modified\n3. 已暂存 staged\n\n### 基本Git流程\n\n1. 在**工作目录**中修改文件\n2. 暂存文件，将文件的快照放入**暂存区域**\n3. 提交更新，找到暂存区的文件，将快照永久性存储到**Git仓库**\n\n## Git配置\n\n1. 用户信息\n\n   ```bash\n   git config --global user.name \"John Doe\"\n   git config --global user.email johndoe@example.com\n   # check config info\n   git config --list\n   ```\n\n## 获取Git仓库\n\n1. 从现有项目或目录创建\n\n   ```bash\n   git init\n\n   # git add .\n   # git commit -m \"initial\"\n   ```\n\n2. 克隆仓库\n\n   ```bash\n   git clone [url]\n   ```\n\n## 基本使用\n\n![文件的状态变化周期](https://s2.ax1x.com/2019/12/27/lE4jTU.png)\n\n### 检查当前文件状态\n\n```bash\ngit status\n\n# 状态简览\ngit status -s\n#  M README             -> 右边 M 文件已修改但未暂存\n# MM Rakefile           -> 左边 M 文件已暂存\n# A  lib/git.rb         -> A 新添加到暂存区的文件\n# ?? LICENSE.txt        -> ?? 新添加的问跟踪文件\n```\n\n### 跟踪文件或暂存修改\n\ngit add 是多功能命令，相当于添加内容到下一次提交中，可用来\n\n1. 开始跟踪新文件\n2. 把一跟踪文件放到暂存区\n3. 合并时把有冲突的文件标记为已解决状态\n\n```bash\ngit add [file]\n```\n\n### 忽略文件\n\n使用 .gitignore 文件忽略不需要的文件\n\n### 查看已暂存和未暂存的修改\n\n使用 git diff 可查看\n\n1. 当前那些更新未被暂存\n2. 哪些更新已经暂存准备好下次提交\n\n```bash\ngit diff # 查看尚未暂存的文件更新了哪些部分\n\ngit diff --staged # 查看已暂存的更改 \n```\n\n### 提交更新\n\n```bash\ngit commit -m \"message\"\n\ngit commit -a # 跳过使用暂存区，将所有已跟踪文件暂存并提交\n```\n\n### 移除文件\n\n```bash\ngit rm -f [file] # 同时删除文件\n\ngit rm --cached [file] # 从git仓库中删除，但任然保留在工作目录中\n```\n\n### 移动文件\n\n```bash\ngit mv [file_from] [file_to]\n\n# equal to\nmv [file_from] [file_to]\ngit rm [file_from]\ngit rm [file_to]\n```\n\n### 查看提交历史\n\n```bash\ngit log\n```\n\n### 撤销操作\n\n#### commit后发现，遗留文件没有添加或提交信息错误\n\n```bash\ngit commit --amend # 该命令将暂存区的文件提交\n                   # 如果自上次提交未做任何修改，那么快照不变，仅修改提交信息\n```\n\n#### 取消暂存的文件\n\n```bash\ngit reset HEAD [file]\n```\n\n#### 撤销对文件的修改\n\n```bash\ngit checkout -- [file]\n```\n\n### 远程仓库\n\n远程仓库是指托管在因特网或其他网络中的你的项目的版本库。\n你可以有好几个远程仓库，通常有些仓库对你只读，有些则可以读写\n\n```bash\n# 查看远程仓库\ngit remote -v # origin是git给clone的仓库服务器的默认名称\n\n# 添加远程\ngit remote add [remote-name] [url]\n\n# 从远程仓库抓取与拉取\ngit fetch [remote-name]\n\n# 推送到远程仓库\ngit push [remote-name] [branch-name]\n\n# 查看某个远程仓库\ngit remote show [remote-name]\n\n# 远程仓库移除和重命名\ngit remote rm [remote-name]\ngit remote rename [old_name] [new_name]\n```\n\n### 打标签\n\nGit 可以给历史中的某一个提交打上标签，以示重要。 比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 等等）\n\n两种类型标签\n\n1. 轻量标签（lightweight），一个轻量标签很像一个不会改变的分支——它只是一个特定提交的引用\n2. 附注标签（annotated），附注标签是存储在 Git 数据库中的一个完整对象。 它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用 GNU Privacy Guard （GPG）签名与验证。 通常建议创建附注标签\n\n```bash\n# 轻量标签\ngit tag v1.0-lw\n\n# 附注标签 -a\ngit tag -a v1.0 -m \"message\"\n\n# 后期打标签\ngit log --pretty=oneline\ngit tag -a v1.0 9fceb02\n\n# 共享标签\n# 默认情况下，git push 命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上\ngit push origin v1.0\ngit push origin --tags # 一次推送多个标签\n\n# 删除标签\ngit tag -d <tagname>\n```\n\n## 分支branch\n\n![分支](https://s2.ax1x.com/2019/12/27/lEIyrt.png)\n\nGit 的分支，其实本质上仅仅是指向提交对象的可变指针。 Git 的默认分支名字是 master。 在多次提交操作之后，你其实已经有一个指向最后那个提交对象的 master 分支。 它会在每次的提交操作中自动向前移动.HEAD记录当前位于哪个分支\n\n```bash\n# 创建分支\ngit branch [newbranch]\n\n# 切换分支\ngit checkout [branch]\n\n# 查看项目分叉历史\ngit log --oneline --decorate --graph --all\n\n# 合并分支\ngit checkout master\ngit merge hotfix\ngit branch -d hotfix\n\n# 合并冲突\n# 当两个分支同时对同一个文件的同一部分做了修改，git无法干净的的合并\ngit status # 可以查看包含合并冲突而处于未合并状态的文件\ngit mergetool\n```\n\n## Github\n\n### 添加SSH公钥\n\n1. 生成SSH `$ ssh-keygen`\n2. 添加到github\n   ![Github添加SSH](https://s2.ax1x.com/2019/12/27/lEITrq.png)\n\n### Fork\n\n要参与某个项目，但是并没有推送权限，这时可以对这个项目进行“派生”。 派生的意思是指，GitHub 将在你的空间中创建一个完全属于你的项目副本，且你对其具有推送权限\n\n1. 将派生出的副本克隆到本地\n2. 创建出名称有意义的分支\n3. 修改代码\n4. 检查改动\n5. 将改动提交到分支中\n6. 将新分支推送到 GitHub 的副本中\n7. 在fork的副本中可看到`Compare & pull request`\n\n### 添加合作者\n\n在项目settings中设置collaborators\n\n### 组织管理\n\n创建一个组织，只需要点击任意 GitHub 页面右上角的“+”图标，在菜单中选择“New organization”","source":"_posts/Tool git.md","raw":"---\ntitle: git\ndate: 2019-12-26 10:17:12\nupdate:\ntags: [Git,Tool]\ncategories: Tool\ndescription: 能用众力,则无敌于天下矣；能用众智,则无畏于圣人矣。\n---\n\n## Git\n\n[Git Docs](https://git-scm.com/book/zh/v2)\n\n## 概念\n\n### 文件存储方式\n\n![文件存储方式](https://s2.ax1x.com/2019/12/27/lE4UL6.png)\n\nGit 更像是把数据看作是对小型文件系统的一组快照。 每次你提交更新，或在 Git 中保存项目状态时，\n它主要对当时的全部文件制作一个快照并保存这个快照的索引。 \n为了高效，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。 \nGit 对待数据更像是一个 快照流。\n\n### 文件的三种状态\n\n![文件三种状态](https://s2.ax1x.com/2019/12/27/lE4byq.png)\n\n1. 已提交的 cmooitted\n2. 已修改的 modified\n3. 已暂存 staged\n\n### 基本Git流程\n\n1. 在**工作目录**中修改文件\n2. 暂存文件，将文件的快照放入**暂存区域**\n3. 提交更新，找到暂存区的文件，将快照永久性存储到**Git仓库**\n\n## Git配置\n\n1. 用户信息\n\n   ```bash\n   git config --global user.name \"John Doe\"\n   git config --global user.email johndoe@example.com\n   # check config info\n   git config --list\n   ```\n\n## 获取Git仓库\n\n1. 从现有项目或目录创建\n\n   ```bash\n   git init\n\n   # git add .\n   # git commit -m \"initial\"\n   ```\n\n2. 克隆仓库\n\n   ```bash\n   git clone [url]\n   ```\n\n## 基本使用\n\n![文件的状态变化周期](https://s2.ax1x.com/2019/12/27/lE4jTU.png)\n\n### 检查当前文件状态\n\n```bash\ngit status\n\n# 状态简览\ngit status -s\n#  M README             -> 右边 M 文件已修改但未暂存\n# MM Rakefile           -> 左边 M 文件已暂存\n# A  lib/git.rb         -> A 新添加到暂存区的文件\n# ?? LICENSE.txt        -> ?? 新添加的问跟踪文件\n```\n\n### 跟踪文件或暂存修改\n\ngit add 是多功能命令，相当于添加内容到下一次提交中，可用来\n\n1. 开始跟踪新文件\n2. 把一跟踪文件放到暂存区\n3. 合并时把有冲突的文件标记为已解决状态\n\n```bash\ngit add [file]\n```\n\n### 忽略文件\n\n使用 .gitignore 文件忽略不需要的文件\n\n### 查看已暂存和未暂存的修改\n\n使用 git diff 可查看\n\n1. 当前那些更新未被暂存\n2. 哪些更新已经暂存准备好下次提交\n\n```bash\ngit diff # 查看尚未暂存的文件更新了哪些部分\n\ngit diff --staged # 查看已暂存的更改 \n```\n\n### 提交更新\n\n```bash\ngit commit -m \"message\"\n\ngit commit -a # 跳过使用暂存区，将所有已跟踪文件暂存并提交\n```\n\n### 移除文件\n\n```bash\ngit rm -f [file] # 同时删除文件\n\ngit rm --cached [file] # 从git仓库中删除，但任然保留在工作目录中\n```\n\n### 移动文件\n\n```bash\ngit mv [file_from] [file_to]\n\n# equal to\nmv [file_from] [file_to]\ngit rm [file_from]\ngit rm [file_to]\n```\n\n### 查看提交历史\n\n```bash\ngit log\n```\n\n### 撤销操作\n\n#### commit后发现，遗留文件没有添加或提交信息错误\n\n```bash\ngit commit --amend # 该命令将暂存区的文件提交\n                   # 如果自上次提交未做任何修改，那么快照不变，仅修改提交信息\n```\n\n#### 取消暂存的文件\n\n```bash\ngit reset HEAD [file]\n```\n\n#### 撤销对文件的修改\n\n```bash\ngit checkout -- [file]\n```\n\n### 远程仓库\n\n远程仓库是指托管在因特网或其他网络中的你的项目的版本库。\n你可以有好几个远程仓库，通常有些仓库对你只读，有些则可以读写\n\n```bash\n# 查看远程仓库\ngit remote -v # origin是git给clone的仓库服务器的默认名称\n\n# 添加远程\ngit remote add [remote-name] [url]\n\n# 从远程仓库抓取与拉取\ngit fetch [remote-name]\n\n# 推送到远程仓库\ngit push [remote-name] [branch-name]\n\n# 查看某个远程仓库\ngit remote show [remote-name]\n\n# 远程仓库移除和重命名\ngit remote rm [remote-name]\ngit remote rename [old_name] [new_name]\n```\n\n### 打标签\n\nGit 可以给历史中的某一个提交打上标签，以示重要。 比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 等等）\n\n两种类型标签\n\n1. 轻量标签（lightweight），一个轻量标签很像一个不会改变的分支——它只是一个特定提交的引用\n2. 附注标签（annotated），附注标签是存储在 Git 数据库中的一个完整对象。 它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用 GNU Privacy Guard （GPG）签名与验证。 通常建议创建附注标签\n\n```bash\n# 轻量标签\ngit tag v1.0-lw\n\n# 附注标签 -a\ngit tag -a v1.0 -m \"message\"\n\n# 后期打标签\ngit log --pretty=oneline\ngit tag -a v1.0 9fceb02\n\n# 共享标签\n# 默认情况下，git push 命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上\ngit push origin v1.0\ngit push origin --tags # 一次推送多个标签\n\n# 删除标签\ngit tag -d <tagname>\n```\n\n## 分支branch\n\n![分支](https://s2.ax1x.com/2019/12/27/lEIyrt.png)\n\nGit 的分支，其实本质上仅仅是指向提交对象的可变指针。 Git 的默认分支名字是 master。 在多次提交操作之后，你其实已经有一个指向最后那个提交对象的 master 分支。 它会在每次的提交操作中自动向前移动.HEAD记录当前位于哪个分支\n\n```bash\n# 创建分支\ngit branch [newbranch]\n\n# 切换分支\ngit checkout [branch]\n\n# 查看项目分叉历史\ngit log --oneline --decorate --graph --all\n\n# 合并分支\ngit checkout master\ngit merge hotfix\ngit branch -d hotfix\n\n# 合并冲突\n# 当两个分支同时对同一个文件的同一部分做了修改，git无法干净的的合并\ngit status # 可以查看包含合并冲突而处于未合并状态的文件\ngit mergetool\n```\n\n## Github\n\n### 添加SSH公钥\n\n1. 生成SSH `$ ssh-keygen`\n2. 添加到github\n   ![Github添加SSH](https://s2.ax1x.com/2019/12/27/lEITrq.png)\n\n### Fork\n\n要参与某个项目，但是并没有推送权限，这时可以对这个项目进行“派生”。 派生的意思是指，GitHub 将在你的空间中创建一个完全属于你的项目副本，且你对其具有推送权限\n\n1. 将派生出的副本克隆到本地\n2. 创建出名称有意义的分支\n3. 修改代码\n4. 检查改动\n5. 将改动提交到分支中\n6. 将新分支推送到 GitHub 的副本中\n7. 在fork的副本中可看到`Compare & pull request`\n\n### 添加合作者\n\n在项目settings中设置collaborators\n\n### 组织管理\n\n创建一个组织，只需要点击任意 GitHub 页面右上角的“+”图标，在菜单中选择“New organization”","slug":"Tool git","published":1,"updated":"2020-01-29T15:52:05.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9pd001cmou5filp7fkh","content":"<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Git Docs</a></p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><h3 id=\"文件存储方式\"><a href=\"#文件存储方式\" class=\"headerlink\" title=\"文件存储方式\"></a>文件存储方式</h3><p><img src=\"https://s2.ax1x.com/2019/12/27/lE4UL6.png\" alt=\"文件存储方式\"></p>\n<p>Git 更像是把数据看作是对小型文件系统的一组快照。 每次你提交更新，或在 Git 中保存项目状态时，<br>它主要对当时的全部文件制作一个快照并保存这个快照的索引。<br>为了高效，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。<br>Git 对待数据更像是一个 快照流。</p>\n<h3 id=\"文件的三种状态\"><a href=\"#文件的三种状态\" class=\"headerlink\" title=\"文件的三种状态\"></a>文件的三种状态</h3><p><img src=\"https://s2.ax1x.com/2019/12/27/lE4byq.png\" alt=\"文件三种状态\"></p>\n<ol>\n<li>已提交的 cmooitted</li>\n<li>已修改的 modified</li>\n<li>已暂存 staged</li>\n</ol>\n<h3 id=\"基本Git流程\"><a href=\"#基本Git流程\" class=\"headerlink\" title=\"基本Git流程\"></a>基本Git流程</h3><ol>\n<li>在<strong>工作目录</strong>中修改文件</li>\n<li>暂存文件，将文件的快照放入<strong>暂存区域</strong></li>\n<li>提交更新，找到暂存区的文件，将快照永久性存储到<strong>Git仓库</strong></li>\n</ol>\n<h2 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h2><ol>\n<li><p>用户信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"John Doe\"</span></span><br><span class=\"line\">git config --global user.email johndoe@example.com</span><br><span class=\"line\"><span class=\"comment\"># check config info</span></span><br><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"获取Git仓库\"><a href=\"#获取Git仓库\" class=\"headerlink\" title=\"获取Git仓库\"></a>获取Git仓库</h2><ol>\n<li><p>从现有项目或目录创建</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># git add .</span></span><br><span class=\"line\"><span class=\"comment\"># git commit -m \"initial\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>克隆仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> [url]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h2><p><img src=\"https://s2.ax1x.com/2019/12/27/lE4jTU.png\" alt=\"文件的状态变化周期\"></p>\n<h3 id=\"检查当前文件状态\"><a href=\"#检查当前文件状态\" class=\"headerlink\" title=\"检查当前文件状态\"></a>检查当前文件状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 状态简览</span></span><br><span class=\"line\">git status -s</span><br><span class=\"line\"><span class=\"comment\">#  M README             -&gt; 右边 M 文件已修改但未暂存</span></span><br><span class=\"line\"><span class=\"comment\"># MM Rakefile           -&gt; 左边 M 文件已暂存</span></span><br><span class=\"line\"><span class=\"comment\"># A  lib/git.rb         -&gt; A 新添加到暂存区的文件</span></span><br><span class=\"line\"><span class=\"comment\"># ?? LICENSE.txt        -&gt; ?? 新添加的问跟踪文件</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"跟踪文件或暂存修改\"><a href=\"#跟踪文件或暂存修改\" class=\"headerlink\" title=\"跟踪文件或暂存修改\"></a>跟踪文件或暂存修改</h3><p>git add 是多功能命令，相当于添加内容到下一次提交中，可用来</p>\n<ol>\n<li>开始跟踪新文件</li>\n<li>把一跟踪文件放到暂存区</li>\n<li>合并时把有冲突的文件标记为已解决状态</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add [file]</span><br></pre></td></tr></table></figure>\n<h3 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h3><p>使用 .gitignore 文件忽略不需要的文件</p>\n<h3 id=\"查看已暂存和未暂存的修改\"><a href=\"#查看已暂存和未暂存的修改\" class=\"headerlink\" title=\"查看已暂存和未暂存的修改\"></a>查看已暂存和未暂存的修改</h3><p>使用 git diff 可查看</p>\n<ol>\n<li>当前那些更新未被暂存</li>\n<li>哪些更新已经暂存准备好下次提交</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff <span class=\"comment\"># 查看尚未暂存的文件更新了哪些部分</span></span><br><span class=\"line\"></span><br><span class=\"line\">git diff --staged <span class=\"comment\"># 查看已暂存的更改</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"提交更新\"><a href=\"#提交更新\" class=\"headerlink\" title=\"提交更新\"></a>提交更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"message\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">git commit -a <span class=\"comment\"># 跳过使用暂存区，将所有已跟踪文件暂存并提交</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"移除文件\"><a href=\"#移除文件\" class=\"headerlink\" title=\"移除文件\"></a>移除文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -f [file] <span class=\"comment\"># 同时删除文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">git rm --cached [file] <span class=\"comment\"># 从git仓库中删除，但任然保留在工作目录中</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"移动文件\"><a href=\"#移动文件\" class=\"headerlink\" title=\"移动文件\"></a>移动文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git mv [file_from] [file_to]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># equal to</span></span><br><span class=\"line\">mv [file_from] [file_to]</span><br><span class=\"line\">git rm [file_from]</span><br><span class=\"line\">git rm [file_to]</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"撤销操作\"><a href=\"#撤销操作\" class=\"headerlink\" title=\"撤销操作\"></a>撤销操作</h3><h4 id=\"commit后发现，遗留文件没有添加或提交信息错误\"><a href=\"#commit后发现，遗留文件没有添加或提交信息错误\" class=\"headerlink\" title=\"commit后发现，遗留文件没有添加或提交信息错误\"></a>commit后发现，遗留文件没有添加或提交信息错误</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit --amend <span class=\"comment\"># 该命令将暂存区的文件提交</span></span><br><span class=\"line\">                   <span class=\"comment\"># 如果自上次提交未做任何修改，那么快照不变，仅修改提交信息</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"取消暂存的文件\"><a href=\"#取消暂存的文件\" class=\"headerlink\" title=\"取消暂存的文件\"></a>取消暂存的文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD [file]</span><br></pre></td></tr></table></figure>\n<h4 id=\"撤销对文件的修改\"><a href=\"#撤销对文件的修改\" class=\"headerlink\" title=\"撤销对文件的修改\"></a>撤销对文件的修改</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- [file]</span><br></pre></td></tr></table></figure>\n<h3 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h3><p>远程仓库是指托管在因特网或其他网络中的你的项目的版本库。<br>你可以有好几个远程仓库，通常有些仓库对你只读，有些则可以读写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看远程仓库</span></span><br><span class=\"line\">git remote -v <span class=\"comment\"># origin是git给clone的仓库服务器的默认名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加远程</span></span><br><span class=\"line\">git remote add [remote-name] [url]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从远程仓库抓取与拉取</span></span><br><span class=\"line\">git fetch [remote-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 推送到远程仓库</span></span><br><span class=\"line\">git push [remote-name] [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看某个远程仓库</span></span><br><span class=\"line\">git remote show [remote-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 远程仓库移除和重命名</span></span><br><span class=\"line\">git remote rm [remote-name]</span><br><span class=\"line\">git remote rename [old_name] [new_name]</span><br></pre></td></tr></table></figure>\n<h3 id=\"打标签\"><a href=\"#打标签\" class=\"headerlink\" title=\"打标签\"></a>打标签</h3><p>Git 可以给历史中的某一个提交打上标签，以示重要。 比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 等等）</p>\n<p>两种类型标签</p>\n<ol>\n<li>轻量标签（lightweight），一个轻量标签很像一个不会改变的分支——它只是一个特定提交的引用</li>\n<li>附注标签（annotated），附注标签是存储在 Git 数据库中的一个完整对象。 它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用 GNU Privacy Guard （GPG）签名与验证。 通常建议创建附注标签</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 轻量标签</span></span><br><span class=\"line\">git tag v1.0-lw</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 附注标签 -a</span></span><br><span class=\"line\">git tag -a v1.0 -m <span class=\"string\">\"message\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后期打标签</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --pretty=oneline</span><br><span class=\"line\">git tag -a v1.0 9fceb02</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 共享标签</span></span><br><span class=\"line\"><span class=\"comment\"># 默认情况下，git push 命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上</span></span><br><span class=\"line\">git push origin v1.0</span><br><span class=\"line\">git push origin --tags <span class=\"comment\"># 一次推送多个标签</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除标签</span></span><br><span class=\"line\">git tag -d &lt;tagname&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"分支branch\"><a href=\"#分支branch\" class=\"headerlink\" title=\"分支branch\"></a>分支branch</h2><p><img src=\"https://s2.ax1x.com/2019/12/27/lEIyrt.png\" alt=\"分支\"></p>\n<p>Git 的分支，其实本质上仅仅是指向提交对象的可变指针。 Git 的默认分支名字是 master。 在多次提交操作之后，你其实已经有一个指向最后那个提交对象的 master 分支。 它会在每次的提交操作中自动向前移动.HEAD记录当前位于哪个分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建分支</span></span><br><span class=\"line\">git branch [newbranch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换分支</span></span><br><span class=\"line\">git checkout [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看项目分叉历史</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --oneline --decorate --graph --all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并分支</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge hotfix</span><br><span class=\"line\">git branch -d hotfix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并冲突</span></span><br><span class=\"line\"><span class=\"comment\"># 当两个分支同时对同一个文件的同一部分做了修改，git无法干净的的合并</span></span><br><span class=\"line\">git status <span class=\"comment\"># 可以查看包含合并冲突而处于未合并状态的文件</span></span><br><span class=\"line\">git mergetool</span><br></pre></td></tr></table></figure>\n<h2 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h2><h3 id=\"添加SSH公钥\"><a href=\"#添加SSH公钥\" class=\"headerlink\" title=\"添加SSH公钥\"></a>添加SSH公钥</h3><ol>\n<li>生成SSH <code>$ ssh-keygen</code></li>\n<li>添加到github<br><img src=\"https://s2.ax1x.com/2019/12/27/lEITrq.png\" alt=\"Github添加SSH\"></li>\n</ol>\n<h3 id=\"Fork\"><a href=\"#Fork\" class=\"headerlink\" title=\"Fork\"></a>Fork</h3><p>要参与某个项目，但是并没有推送权限，这时可以对这个项目进行“派生”。 派生的意思是指，GitHub 将在你的空间中创建一个完全属于你的项目副本，且你对其具有推送权限</p>\n<ol>\n<li>将派生出的副本克隆到本地</li>\n<li>创建出名称有意义的分支</li>\n<li>修改代码</li>\n<li>检查改动</li>\n<li>将改动提交到分支中</li>\n<li>将新分支推送到 GitHub 的副本中</li>\n<li>在fork的副本中可看到<code>Compare &amp; pull request</code></li>\n</ol>\n<h3 id=\"添加合作者\"><a href=\"#添加合作者\" class=\"headerlink\" title=\"添加合作者\"></a>添加合作者</h3><p>在项目settings中设置collaborators</p>\n<h3 id=\"组织管理\"><a href=\"#组织管理\" class=\"headerlink\" title=\"组织管理\"></a>组织管理</h3><p>创建一个组织，只需要点击任意 GitHub 页面右上角的“+”图标，在菜单中选择“New organization”</p>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":2732,"excerpt":"","more":"<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p><a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" rel=\"noopener\">Git Docs</a></p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><h3 id=\"文件存储方式\"><a href=\"#文件存储方式\" class=\"headerlink\" title=\"文件存储方式\"></a>文件存储方式</h3><p><img src=\"https://s2.ax1x.com/2019/12/27/lE4UL6.png\" alt=\"文件存储方式\"></p>\n<p>Git 更像是把数据看作是对小型文件系统的一组快照。 每次你提交更新，或在 Git 中保存项目状态时，<br>它主要对当时的全部文件制作一个快照并保存这个快照的索引。<br>为了高效，如果文件没有修改，Git 不再重新存储该文件，而是只保留一个链接指向之前存储的文件。<br>Git 对待数据更像是一个 快照流。</p>\n<h3 id=\"文件的三种状态\"><a href=\"#文件的三种状态\" class=\"headerlink\" title=\"文件的三种状态\"></a>文件的三种状态</h3><p><img src=\"https://s2.ax1x.com/2019/12/27/lE4byq.png\" alt=\"文件三种状态\"></p>\n<ol>\n<li>已提交的 cmooitted</li>\n<li>已修改的 modified</li>\n<li>已暂存 staged</li>\n</ol>\n<h3 id=\"基本Git流程\"><a href=\"#基本Git流程\" class=\"headerlink\" title=\"基本Git流程\"></a>基本Git流程</h3><ol>\n<li>在<strong>工作目录</strong>中修改文件</li>\n<li>暂存文件，将文件的快照放入<strong>暂存区域</strong></li>\n<li>提交更新，找到暂存区的文件，将快照永久性存储到<strong>Git仓库</strong></li>\n</ol>\n<h2 id=\"Git配置\"><a href=\"#Git配置\" class=\"headerlink\" title=\"Git配置\"></a>Git配置</h2><ol>\n<li><p>用户信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"John Doe\"</span></span><br><span class=\"line\">git config --global user.email johndoe@example.com</span><br><span class=\"line\"><span class=\"comment\"># check config info</span></span><br><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"获取Git仓库\"><a href=\"#获取Git仓库\" class=\"headerlink\" title=\"获取Git仓库\"></a>获取Git仓库</h2><ol>\n<li><p>从现有项目或目录创建</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># git add .</span></span><br><span class=\"line\"><span class=\"comment\"># git commit -m \"initial\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>克隆仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> [url]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a>基本使用</h2><p><img src=\"https://s2.ax1x.com/2019/12/27/lE4jTU.png\" alt=\"文件的状态变化周期\"></p>\n<h3 id=\"检查当前文件状态\"><a href=\"#检查当前文件状态\" class=\"headerlink\" title=\"检查当前文件状态\"></a>检查当前文件状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 状态简览</span></span><br><span class=\"line\">git status -s</span><br><span class=\"line\"><span class=\"comment\">#  M README             -&gt; 右边 M 文件已修改但未暂存</span></span><br><span class=\"line\"><span class=\"comment\"># MM Rakefile           -&gt; 左边 M 文件已暂存</span></span><br><span class=\"line\"><span class=\"comment\"># A  lib/git.rb         -&gt; A 新添加到暂存区的文件</span></span><br><span class=\"line\"><span class=\"comment\"># ?? LICENSE.txt        -&gt; ?? 新添加的问跟踪文件</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"跟踪文件或暂存修改\"><a href=\"#跟踪文件或暂存修改\" class=\"headerlink\" title=\"跟踪文件或暂存修改\"></a>跟踪文件或暂存修改</h3><p>git add 是多功能命令，相当于添加内容到下一次提交中，可用来</p>\n<ol>\n<li>开始跟踪新文件</li>\n<li>把一跟踪文件放到暂存区</li>\n<li>合并时把有冲突的文件标记为已解决状态</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add [file]</span><br></pre></td></tr></table></figure>\n<h3 id=\"忽略文件\"><a href=\"#忽略文件\" class=\"headerlink\" title=\"忽略文件\"></a>忽略文件</h3><p>使用 .gitignore 文件忽略不需要的文件</p>\n<h3 id=\"查看已暂存和未暂存的修改\"><a href=\"#查看已暂存和未暂存的修改\" class=\"headerlink\" title=\"查看已暂存和未暂存的修改\"></a>查看已暂存和未暂存的修改</h3><p>使用 git diff 可查看</p>\n<ol>\n<li>当前那些更新未被暂存</li>\n<li>哪些更新已经暂存准备好下次提交</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff <span class=\"comment\"># 查看尚未暂存的文件更新了哪些部分</span></span><br><span class=\"line\"></span><br><span class=\"line\">git diff --staged <span class=\"comment\"># 查看已暂存的更改</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"提交更新\"><a href=\"#提交更新\" class=\"headerlink\" title=\"提交更新\"></a>提交更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">\"message\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">git commit -a <span class=\"comment\"># 跳过使用暂存区，将所有已跟踪文件暂存并提交</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"移除文件\"><a href=\"#移除文件\" class=\"headerlink\" title=\"移除文件\"></a>移除文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -f [file] <span class=\"comment\"># 同时删除文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">git rm --cached [file] <span class=\"comment\"># 从git仓库中删除，但任然保留在工作目录中</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"移动文件\"><a href=\"#移动文件\" class=\"headerlink\" title=\"移动文件\"></a>移动文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git mv [file_from] [file_to]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># equal to</span></span><br><span class=\"line\">mv [file_from] [file_to]</span><br><span class=\"line\">git rm [file_from]</span><br><span class=\"line\">git rm [file_to]</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"撤销操作\"><a href=\"#撤销操作\" class=\"headerlink\" title=\"撤销操作\"></a>撤销操作</h3><h4 id=\"commit后发现，遗留文件没有添加或提交信息错误\"><a href=\"#commit后发现，遗留文件没有添加或提交信息错误\" class=\"headerlink\" title=\"commit后发现，遗留文件没有添加或提交信息错误\"></a>commit后发现，遗留文件没有添加或提交信息错误</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit --amend <span class=\"comment\"># 该命令将暂存区的文件提交</span></span><br><span class=\"line\">                   <span class=\"comment\"># 如果自上次提交未做任何修改，那么快照不变，仅修改提交信息</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"取消暂存的文件\"><a href=\"#取消暂存的文件\" class=\"headerlink\" title=\"取消暂存的文件\"></a>取消暂存的文件</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD [file]</span><br></pre></td></tr></table></figure>\n<h4 id=\"撤销对文件的修改\"><a href=\"#撤销对文件的修改\" class=\"headerlink\" title=\"撤销对文件的修改\"></a>撤销对文件的修改</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- [file]</span><br></pre></td></tr></table></figure>\n<h3 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h3><p>远程仓库是指托管在因特网或其他网络中的你的项目的版本库。<br>你可以有好几个远程仓库，通常有些仓库对你只读，有些则可以读写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看远程仓库</span></span><br><span class=\"line\">git remote -v <span class=\"comment\"># origin是git给clone的仓库服务器的默认名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加远程</span></span><br><span class=\"line\">git remote add [remote-name] [url]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从远程仓库抓取与拉取</span></span><br><span class=\"line\">git fetch [remote-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 推送到远程仓库</span></span><br><span class=\"line\">git push [remote-name] [branch-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看某个远程仓库</span></span><br><span class=\"line\">git remote show [remote-name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 远程仓库移除和重命名</span></span><br><span class=\"line\">git remote rm [remote-name]</span><br><span class=\"line\">git remote rename [old_name] [new_name]</span><br></pre></td></tr></table></figure>\n<h3 id=\"打标签\"><a href=\"#打标签\" class=\"headerlink\" title=\"打标签\"></a>打标签</h3><p>Git 可以给历史中的某一个提交打上标签，以示重要。 比较有代表性的是人们会使用这个功能来标记发布结点（v1.0 等等）</p>\n<p>两种类型标签</p>\n<ol>\n<li>轻量标签（lightweight），一个轻量标签很像一个不会改变的分支——它只是一个特定提交的引用</li>\n<li>附注标签（annotated），附注标签是存储在 Git 数据库中的一个完整对象。 它们是可以被校验的；其中包含打标签者的名字、电子邮件地址、日期时间；还有一个标签信息；并且可以使用 GNU Privacy Guard （GPG）签名与验证。 通常建议创建附注标签</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 轻量标签</span></span><br><span class=\"line\">git tag v1.0-lw</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 附注标签 -a</span></span><br><span class=\"line\">git tag -a v1.0 -m <span class=\"string\">\"message\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后期打标签</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --pretty=oneline</span><br><span class=\"line\">git tag -a v1.0 9fceb02</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 共享标签</span></span><br><span class=\"line\"><span class=\"comment\"># 默认情况下，git push 命令并不会传送标签到远程仓库服务器上。 在创建完标签后你必须显式地推送标签到共享服务器上</span></span><br><span class=\"line\">git push origin v1.0</span><br><span class=\"line\">git push origin --tags <span class=\"comment\"># 一次推送多个标签</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除标签</span></span><br><span class=\"line\">git tag -d &lt;tagname&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"分支branch\"><a href=\"#分支branch\" class=\"headerlink\" title=\"分支branch\"></a>分支branch</h2><p><img src=\"https://s2.ax1x.com/2019/12/27/lEIyrt.png\" alt=\"分支\"></p>\n<p>Git 的分支，其实本质上仅仅是指向提交对象的可变指针。 Git 的默认分支名字是 master。 在多次提交操作之后，你其实已经有一个指向最后那个提交对象的 master 分支。 它会在每次的提交操作中自动向前移动.HEAD记录当前位于哪个分支</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建分支</span></span><br><span class=\"line\">git branch [newbranch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换分支</span></span><br><span class=\"line\">git checkout [branch]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看项目分叉历史</span></span><br><span class=\"line\">git <span class=\"built_in\">log</span> --oneline --decorate --graph --all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并分支</span></span><br><span class=\"line\">git checkout master</span><br><span class=\"line\">git merge hotfix</span><br><span class=\"line\">git branch -d hotfix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并冲突</span></span><br><span class=\"line\"><span class=\"comment\"># 当两个分支同时对同一个文件的同一部分做了修改，git无法干净的的合并</span></span><br><span class=\"line\">git status <span class=\"comment\"># 可以查看包含合并冲突而处于未合并状态的文件</span></span><br><span class=\"line\">git mergetool</span><br></pre></td></tr></table></figure>\n<h2 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h2><h3 id=\"添加SSH公钥\"><a href=\"#添加SSH公钥\" class=\"headerlink\" title=\"添加SSH公钥\"></a>添加SSH公钥</h3><ol>\n<li>生成SSH <code>$ ssh-keygen</code></li>\n<li>添加到github<br><img src=\"https://s2.ax1x.com/2019/12/27/lEITrq.png\" alt=\"Github添加SSH\"></li>\n</ol>\n<h3 id=\"Fork\"><a href=\"#Fork\" class=\"headerlink\" title=\"Fork\"></a>Fork</h3><p>要参与某个项目，但是并没有推送权限，这时可以对这个项目进行“派生”。 派生的意思是指，GitHub 将在你的空间中创建一个完全属于你的项目副本，且你对其具有推送权限</p>\n<ol>\n<li>将派生出的副本克隆到本地</li>\n<li>创建出名称有意义的分支</li>\n<li>修改代码</li>\n<li>检查改动</li>\n<li>将改动提交到分支中</li>\n<li>将新分支推送到 GitHub 的副本中</li>\n<li>在fork的副本中可看到<code>Compare &amp; pull request</code></li>\n</ol>\n<h3 id=\"添加合作者\"><a href=\"#添加合作者\" class=\"headerlink\" title=\"添加合作者\"></a>添加合作者</h3><p>在项目settings中设置collaborators</p>\n<h3 id=\"组织管理\"><a href=\"#组织管理\" class=\"headerlink\" title=\"组织管理\"></a>组织管理</h3><p>创建一个组织，只需要点击任意 GitHub 页面右上角的“+”图标，在菜单中选择“New organization”</p>\n"},{"title":"github,hexo搭建博客","date":"2019-12-26T01:01:43.000Z","update":null,"description":"使用github，hexo搭建个人blog","_content":"\n## github\n\n1. github pages分为个人，组织和项目页面（前两个有数量限制，这里采取项目页面）\n2. new repository\n3. 创建新分支 gh-pages\n\n## hexo\n\n[hexo docs](https://hexo.io/zh-cn/docs/)\n\n### install\n\n1. install nodejs\n2. install hexo\n\n```bash\nnpm install -g hexo-cli\n```\n\n### 建站\n\n```bash\nhexo init <folder>\n# folder中包含\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### 配置\n\n[配置参考](https://hexo.io/zh-cn/docs/configuration)\n\n### 部署\n\n1. install [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)\n\n   ```bash\n   npm install hexo-deployer-git --save\n   ```\n\n2. add following configurations to _config.yml\n\n   ```yml\n   deploy:\n     type: git\n     repo: https://github.com/<username>/<project>\n     # example, https://github.com/hexojs/hexojs.github.io\n     branch: gh-pages\n   ```\n\n3. run\n\n   ```bash\n   hexo clean && hexo deploy\n   ```\n\n### 使用主题\n\n1. 将主题放置与 themes 文件夹内，修改 _config.yml 内的 theme 设定\n2. 这里使用[hexo-theme-next](https://github.com/theme-next/hexo-theme-next)\n\n   ```bash\n   git clone https://github.com/theme-next/hexo-theme-next.git\n   # delete .git .github docs folders\n   ```\n\n3. 美化和添加功能\n   > [参考1](http://eternalzttz.com/hexo-next.html)\n\n   > [参考2](http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html)\n\n   > [参考3](https://io-oi.me/tech/hexo-next-optimization/)\n","source":"_posts/Tool github-hexo搭建博客.md","raw":"---\ntitle: github,hexo搭建博客\ndate: 2019-12-25 20:01:43\nupdate:\ntags: [Git,github,hexo,Next,Node.js]\ncategories: Tool\ndescription: 使用github，hexo搭建个人blog\n---\n\n## github\n\n1. github pages分为个人，组织和项目页面（前两个有数量限制，这里采取项目页面）\n2. new repository\n3. 创建新分支 gh-pages\n\n## hexo\n\n[hexo docs](https://hexo.io/zh-cn/docs/)\n\n### install\n\n1. install nodejs\n2. install hexo\n\n```bash\nnpm install -g hexo-cli\n```\n\n### 建站\n\n```bash\nhexo init <folder>\n# folder中包含\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### 配置\n\n[配置参考](https://hexo.io/zh-cn/docs/configuration)\n\n### 部署\n\n1. install [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)\n\n   ```bash\n   npm install hexo-deployer-git --save\n   ```\n\n2. add following configurations to _config.yml\n\n   ```yml\n   deploy:\n     type: git\n     repo: https://github.com/<username>/<project>\n     # example, https://github.com/hexojs/hexojs.github.io\n     branch: gh-pages\n   ```\n\n3. run\n\n   ```bash\n   hexo clean && hexo deploy\n   ```\n\n### 使用主题\n\n1. 将主题放置与 themes 文件夹内，修改 _config.yml 内的 theme 设定\n2. 这里使用[hexo-theme-next](https://github.com/theme-next/hexo-theme-next)\n\n   ```bash\n   git clone https://github.com/theme-next/hexo-theme-next.git\n   # delete .git .github docs folders\n   ```\n\n3. 美化和添加功能\n   > [参考1](http://eternalzttz.com/hexo-next.html)\n\n   > [参考2](http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html)\n\n   > [参考3](https://io-oi.me/tech/hexo-next-optimization/)\n","slug":"Tool github-hexo搭建博客","published":1,"updated":"2020-01-18T22:29:21.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9pf001emou5axgsh20u","content":"<h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><ol>\n<li>github pages分为个人，组织和项目页面（前两个有数量限制，这里采取项目页面）</li>\n<li>new repository</li>\n<li>创建新分支 gh-pages</li>\n</ol>\n<h2 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h2><p><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo docs</a></p>\n<h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><ol>\n<li>install nodejs</li>\n<li>install hexo</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"comment\"># folder中包含</span></span><br><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── <span class=\"built_in\">source</span></span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p><a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">配置参考</a></p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><ol>\n<li><p>install <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>add following configurations to _config.yml</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>run</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用主题\"><a href=\"#使用主题\" class=\"headerlink\" title=\"使用主题\"></a>使用主题</h3><ol>\n<li>将主题放置与 themes 文件夹内，修改 _config.yml 内的 theme 设定</li>\n<li><p>这里使用<a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-theme-next</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next.git</span><br><span class=\"line\"><span class=\"comment\"># delete .git .github docs folders</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>美化和添加功能</p>\n<blockquote>\n<p><a href=\"http://eternalzttz.com/hexo-next.html\" target=\"_blank\" rel=\"noopener\">参考1</a></p>\n<p><a href=\"http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html\" target=\"_blank\" rel=\"noopener\">参考2</a></p>\n<p><a href=\"https://io-oi.me/tech/hexo-next-optimization/\" target=\"_blank\" rel=\"noopener\">参考3</a></p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":710,"excerpt":"","more":"<h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><ol>\n<li>github pages分为个人，组织和项目页面（前两个有数量限制，这里采取项目页面）</li>\n<li>new repository</li>\n<li>创建新分支 gh-pages</li>\n</ol>\n<h2 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h2><p><a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">hexo docs</a></p>\n<h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><ol>\n<li>install nodejs</li>\n<li>install hexo</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\"><span class=\"comment\"># folder中包含</span></span><br><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── <span class=\"built_in\">source</span></span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p><a href=\"https://hexo.io/zh-cn/docs/configuration\" target=\"_blank\" rel=\"noopener\">配置参考</a></p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><ol>\n<li><p>install <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>add following configurations to _config.yml</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>run</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"使用主题\"><a href=\"#使用主题\" class=\"headerlink\" title=\"使用主题\"></a>使用主题</h3><ol>\n<li>将主题放置与 themes 文件夹内，修改 _config.yml 内的 theme 设定</li>\n<li><p>这里使用<a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-theme-next</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/theme-next/hexo-theme-next.git</span><br><span class=\"line\"><span class=\"comment\"># delete .git .github docs folders</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>美化和添加功能</p>\n<blockquote>\n<p><a href=\"http://eternalzttz.com/hexo-next.html\" target=\"_blank\" rel=\"noopener\">参考1</a></p>\n<p><a href=\"http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html\" target=\"_blank\" rel=\"noopener\">参考2</a></p>\n<p><a href=\"https://io-oi.me/tech/hexo-next-optimization/\" target=\"_blank\" rel=\"noopener\">参考3</a></p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"Tool 正则表达式","date":"2020-01-02T03:22:16.000Z","update":null,"description":"Regular Expression","_content":"\n## 表达式全集\n\n| 字符                                                                                                                                                              | 描述                                                                                                                                                                                                                                             |\n| :---------------------------------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| \\\\|将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\\\”匹配“\\”而“\\(”则匹配“(”。 |\n| ^                                                                                                                                                                 | 匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\\n”或“\\r”之后的位置。                                                                                                                                                     |\n| $                                                                                                                                                                 | 匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。                                                                                                                                                     |\n| *                                                                                                                                                                 | 匹配前面的子表达式零次或多次。例如，zo*能匹配“z”以及“zoo”。*等价于{0,}。                                                                                                                                                                         |\n| +                                                                                                                                                                 | 匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。                                                                                                                                                       |\n| ?                                                                                                                                                                 | 匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。                                                                                                                                                      |\n| {n}                                                                                                                                                               | n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。                                                                                                                                                    |\n| {n,}                                                                                                                                                              | n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。                                                                                                            |\n| {n,m}                                                                                                                                                             | m和n均为非负整数，其中n<=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。                                                                                        |\n| ?                                                                                                                                                                 | 当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。 |\n| .                                                                                                                                                                 | 匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.                                                                                                                                                                          | \\n)”的模式。                                         |\n| (pattern)                                                                                                                                                         | 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\\(”或“\\)”。                                                                             |\n| (?:pattern)                                                                                                                                                       | 匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(                                                                                                                                                  | )”来组合一个模式的各个部分是很有用。例如“industr(?:y | ies)”就是一个比“industry    | industries”更简略的表达式。                                                                                                                                                                           |\n| (?=pattern)                                                                                                                                                       | 正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95                                                                                                       | 98                                                   | NT                          | 2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。 |\n| (?!pattern)                                                                                                                                                       | 正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95                                                                                                       | 98                                                   | NT                          | 2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始   |\n| (?<=pattern)                                                                                                                                                      | 反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?<=95                                                                                                                                                                                    | 98                                                   | NT                          | 2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。                                                                                                                  |\n| (?<!pattern)                                                                                                                                                      | 反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?<!95                                                                                                                                                                                      | 98                                                   | NT                          | 2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。                                                                                                                  |\n| x                                                                                                                                                                 | y                                                                                                                                                                                                                                                | 匹配x或y。例如，“z                                   | food”能匹配“z”或“food”。“(z | f)ood”则匹配“zood”或“food”。                                                                                                                                                                          |\n| [xyz]                                                                                                                                                             | 字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。                                                                                                                                                                        |\n| [^xyz]                                                                                                                                                            | 负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。                                                                                                                                                                       |\n| [a-z]                                                                                                                                                             | 字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。                                                                                                                                                      |\n| [^a-z]                                                                                                                                                            | 负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。                                                                                                                                         |\n| \\b                                                                                                                                                                | 匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。                                                                                                                                    |\n| \\B                                                                                                                                                                | 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。                                                                                                                                                                          |\n| \\cx                                                                                                                                                               | 匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。                                                                                                                             |\n| \\d                                                                                                                                                                | 匹配一个数字字符。等价于[0-9]。                                                                                                                                                                                                                  |\n| \\D                                                                                                                                                                | 匹配一个非数字字符。等价于[^0-9]。                                                                                                                                                                                                               |\n| \\f                                                                                                                                                                | 匹配一个换页符。等价于\\x0c和\\cL。                                                                                                                                                                                                                |\n| \\n                                                                                                                                                                | 匹配一个换行符。等价于\\x0a和\\cJ。                                                                                                                                                                                                                |\n| \\r                                                                                                                                                                | 匹配一个回车符。等价于\\x0d和\\cM。                                                                                                                                                                                                                |\n| \\s                                                                                                                                                                | 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。                                                                                                                                                                            |\n| \\S                                                                                                                                                                | 匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。                                                                                                                                                                                                       |\n| \\t                                                                                                                                                                | 匹配一个制表符。等价于\\x09和\\cI。                                                                                                                                                                                                                |\n| \\v                                                                                                                                                                | 匹配一个垂直制表符。等价于\\x0b和\\cK。                                                                                                                                                                                                            |\n| \\w                                                                                                                                                                | 匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。                                                                                                                                                                                             |\n| \\W                                                                                                                                                                | 匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。                                                                                                                                                                                                      |\n| \\xn                                                                                                                                                               | 匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&1”。正则表达式中可以使用ASCII编码。.                                                                                               |\n| \\num                                                                                                                                                              | 匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。                                                                                                                                                        |\n| \\n                                                                                                                                                                | 标识一个八进制转义值或一个向后引用。如果\\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。                                                                                                      |\n| \\nm                                                                                                                                                               | 标识一个八进制转义值或一个向后引用。如果\\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则                                           |\n| \\nm                                                                                                                                                               | 将匹配八进制转义值nm。                                                                                                                                                                                                                           |\n| \\nml                                                                                                                                                              | 如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。                                                                                                                                                                   |\n| \\un                                                                                                                                                               | 匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）                                                                                                                                                             |\n","source":"_posts/Tool 正则表达式.md","raw":"---\ntitle: Tool 正则表达式\ndate: 2020-01-01 22:22:16\nupdate:\ntags: [Regular Expression,Tool]\ncategories: [Tool]\ndescription: Regular Expression\n---\n\n## 表达式全集\n\n| 字符                                                                                                                                                              | 描述                                                                                                                                                                                                                                             |\n| :---------------------------------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| \\\\|将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\\\”匹配“\\”而“\\(”则匹配“(”。 |\n| ^                                                                                                                                                                 | 匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\\n”或“\\r”之后的位置。                                                                                                                                                     |\n| $                                                                                                                                                                 | 匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。                                                                                                                                                     |\n| *                                                                                                                                                                 | 匹配前面的子表达式零次或多次。例如，zo*能匹配“z”以及“zoo”。*等价于{0,}。                                                                                                                                                                         |\n| +                                                                                                                                                                 | 匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。                                                                                                                                                       |\n| ?                                                                                                                                                                 | 匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。                                                                                                                                                      |\n| {n}                                                                                                                                                               | n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。                                                                                                                                                    |\n| {n,}                                                                                                                                                              | n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。                                                                                                            |\n| {n,m}                                                                                                                                                             | m和n均为非负整数，其中n<=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。                                                                                        |\n| ?                                                                                                                                                                 | 当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。 |\n| .                                                                                                                                                                 | 匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.                                                                                                                                                                          | \\n)”的模式。                                         |\n| (pattern)                                                                                                                                                         | 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\\(”或“\\)”。                                                                             |\n| (?:pattern)                                                                                                                                                       | 匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(                                                                                                                                                  | )”来组合一个模式的各个部分是很有用。例如“industr(?:y | ies)”就是一个比“industry    | industries”更简略的表达式。                                                                                                                                                                           |\n| (?=pattern)                                                                                                                                                       | 正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95                                                                                                       | 98                                                   | NT                          | 2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。 |\n| (?!pattern)                                                                                                                                                       | 正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95                                                                                                       | 98                                                   | NT                          | 2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始   |\n| (?<=pattern)                                                                                                                                                      | 反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?<=95                                                                                                                                                                                    | 98                                                   | NT                          | 2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。                                                                                                                  |\n| (?<!pattern)                                                                                                                                                      | 反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?<!95                                                                                                                                                                                      | 98                                                   | NT                          | 2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。                                                                                                                  |\n| x                                                                                                                                                                 | y                                                                                                                                                                                                                                                | 匹配x或y。例如，“z                                   | food”能匹配“z”或“food”。“(z | f)ood”则匹配“zood”或“food”。                                                                                                                                                                          |\n| [xyz]                                                                                                                                                             | 字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。                                                                                                                                                                        |\n| [^xyz]                                                                                                                                                            | 负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。                                                                                                                                                                       |\n| [a-z]                                                                                                                                                             | 字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。                                                                                                                                                      |\n| [^a-z]                                                                                                                                                            | 负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。                                                                                                                                         |\n| \\b                                                                                                                                                                | 匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。                                                                                                                                    |\n| \\B                                                                                                                                                                | 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。                                                                                                                                                                          |\n| \\cx                                                                                                                                                               | 匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。                                                                                                                             |\n| \\d                                                                                                                                                                | 匹配一个数字字符。等价于[0-9]。                                                                                                                                                                                                                  |\n| \\D                                                                                                                                                                | 匹配一个非数字字符。等价于[^0-9]。                                                                                                                                                                                                               |\n| \\f                                                                                                                                                                | 匹配一个换页符。等价于\\x0c和\\cL。                                                                                                                                                                                                                |\n| \\n                                                                                                                                                                | 匹配一个换行符。等价于\\x0a和\\cJ。                                                                                                                                                                                                                |\n| \\r                                                                                                                                                                | 匹配一个回车符。等价于\\x0d和\\cM。                                                                                                                                                                                                                |\n| \\s                                                                                                                                                                | 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。                                                                                                                                                                            |\n| \\S                                                                                                                                                                | 匹配任何非空白字符。等价于[^ \\f\\n\\r\\t\\v]。                                                                                                                                                                                                       |\n| \\t                                                                                                                                                                | 匹配一个制表符。等价于\\x09和\\cI。                                                                                                                                                                                                                |\n| \\v                                                                                                                                                                | 匹配一个垂直制表符。等价于\\x0b和\\cK。                                                                                                                                                                                                            |\n| \\w                                                                                                                                                                | 匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。                                                                                                                                                                                             |\n| \\W                                                                                                                                                                | 匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。                                                                                                                                                                                                      |\n| \\xn                                                                                                                                                               | 匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&1”。正则表达式中可以使用ASCII编码。.                                                                                               |\n| \\num                                                                                                                                                              | 匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。                                                                                                                                                        |\n| \\n                                                                                                                                                                | 标识一个八进制转义值或一个向后引用。如果\\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。                                                                                                      |\n| \\nm                                                                                                                                                               | 标识一个八进制转义值或一个向后引用。如果\\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则                                           |\n| \\nm                                                                                                                                                               | 将匹配八进制转义值nm。                                                                                                                                                                                                                           |\n| \\nml                                                                                                                                                              | 如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。                                                                                                                                                                   |\n| \\un                                                                                                                                                               | 匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）                                                                                                                                                             |\n","slug":"Tool 正则表达式","published":1,"updated":"2020-01-18T22:35:30.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9pg001jmou58n934q60","content":"<h2 id=\"表达式全集\"><a href=\"#表达式全集\" class=\"headerlink\" title=\"表达式全集\"></a>表达式全集</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\\\</td>\n<td style=\"text-align:left\">将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\\\”匹配“\\”而“(”则匹配“(”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\\n”或“\\r”之后的位置。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$</td>\n<td style=\"text-align:left\">匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">匹配前面的子表达式零次或多次。例如，zo<em>能匹配“z”以及“zoo”。</em>等价于{0,}。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{n}</td>\n<td style=\"text-align:left\">n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{n,}</td>\n<td style=\"text-align:left\">n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{n,m}</td>\n<td style=\"text-align:left\">m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.</td>\n<td>\\n)”的模式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(pattern)</td>\n<td style=\"text-align:left\">匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“(”或“)”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?:pattern)</td>\n<td style=\"text-align:left\">匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(</td>\n<td>)”来组合一个模式的各个部分是很有用。例如“industr(?:y</td>\n<td>ies)”就是一个比“industry</td>\n<td>industries”更简略的表达式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?=pattern)</td>\n<td style=\"text-align:left\">正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?!pattern)</td>\n<td style=\"text-align:left\">正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?&lt;=pattern)</td>\n<td style=\"text-align:left\">反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?&lt;=95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?&lt;!pattern)</td>\n<td style=\"text-align:left\">反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?&lt;!95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">x</td>\n<td style=\"text-align:left\">y</td>\n<td>匹配x或y。例如，“z</td>\n<td>food”能匹配“z”或“food”。“(z</td>\n<td>f)ood”则匹配“zood”或“food”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[xyz]</td>\n<td style=\"text-align:left\">字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><sup><a href=\"#fn_xyz\" id=\"reffn_xyz\">xyz</a></sup></td>\n<td style=\"text-align:left\">负值字符集合。匹配未包含的任意字符。例如，“<sup><a href=\"#fn_abc\" id=\"reffn_abc\">abc</a></sup>”可以匹配“plain”中的“p”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[a-z]</td>\n<td style=\"text-align:left\">字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><sup><a href=\"#fn_a-z\" id=\"reffn_a-z\">a-z</a></sup></td>\n<td style=\"text-align:left\">负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<sup><a href=\"#fn_a-z\" id=\"reffn_a-z\">a-z</a></sup>”可以匹配任何不在“a”到“z”范围内的任意字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\b</td>\n<td style=\"text-align:left\">匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\B</td>\n<td style=\"text-align:left\">匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\cx</td>\n<td style=\"text-align:left\">匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">匹配一个数字字符。等价于[0-9]。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\D</td>\n<td style=\"text-align:left\">匹配一个非数字字符。等价于<sup><a href=\"#fn_0-9\" id=\"reffn_0-9\">0-9</a></sup>。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\f</td>\n<td style=\"text-align:left\">匹配一个换页符。等价于\\x0c和\\cL。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\n</td>\n<td style=\"text-align:left\">匹配一个换行符。等价于\\x0a和\\cJ。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\r</td>\n<td style=\"text-align:left\">匹配一个回车符。等价于\\x0d和\\cM。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\s</td>\n<td style=\"text-align:left\">匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\S</td>\n<td style=\"text-align:left\">匹配任何非空白字符。等价于<sup><a href=\"#fn_ \\f\\n\\r\\t\\v\" id=\"reffn_ \\f\\n\\r\\t\\v\"> \\f\\n\\r\\t\\v</a></sup>。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\t</td>\n<td style=\"text-align:left\">匹配一个制表符。等价于\\x09和\\cI。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\v</td>\n<td style=\"text-align:left\">匹配一个垂直制表符。等价于\\x0b和\\cK。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\W</td>\n<td style=\"text-align:left\">匹配任何非单词字符。等价于“<sup><a href=\"#fn_A-Za-z0-9_\" id=\"reffn_A-Za-z0-9_\">A-Za-z0-9_</a></sup>”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\xn</td>\n<td style=\"text-align:left\">匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&amp;1”。正则表达式中可以使用ASCII编码。.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\num</td>\n<td style=\"text-align:left\">匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\n</td>\n<td style=\"text-align:left\">标识一个八进制转义值或一个向后引用。如果\\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\nm</td>\n<td style=\"text-align:left\">标识一个八进制转义值或一个向后引用。如果\\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\nm</td>\n<td style=\"text-align:left\">将匹配八进制转义值nm。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\nml</td>\n<td style=\"text-align:left\">如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\un</td>\n<td style=\"text-align:left\">匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":2965,"excerpt":"","more":"<h2 id=\"表达式全集\"><a href=\"#表达式全集\" class=\"headerlink\" title=\"表达式全集\"></a>表达式全集</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">字符</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">\\\\</td>\n<td style=\"text-align:left\">将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\\n”匹配一个换行符。串行“\\\\”匹配“\\”而“(”则匹配“(”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\\n”或“\\r”之后的位置。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">$</td>\n<td style=\"text-align:left\">匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">匹配前面的子表达式零次或多次。例如，zo<em>能匹配“z”以及“zoo”。</em>等价于{0,}。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{n}</td>\n<td style=\"text-align:left\">n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{n,}</td>\n<td style=\"text-align:left\">n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">{n,m}</td>\n<td style=\"text-align:left\">m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?</td>\n<td style=\"text-align:left\">当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.</td>\n<td style=\"text-align:left\">匹配除“\\n”之外的任何单个字符。要匹配包括“\\n”在内的任何字符，请使用像“(.</td>\n<td>\\n)”的模式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(pattern)</td>\n<td style=\"text-align:left\">匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“(”或“)”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?:pattern)</td>\n<td style=\"text-align:left\">匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(</td>\n<td>)”来组合一个模式的各个部分是很有用。例如“industr(?:y</td>\n<td>ies)”就是一个比“industry</td>\n<td>industries”更简略的表达式。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?=pattern)</td>\n<td style=\"text-align:left\">正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?!pattern)</td>\n<td style=\"text-align:left\">正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?&lt;=pattern)</td>\n<td style=\"text-align:left\">反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?&lt;=95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">(?&lt;!pattern)</td>\n<td style=\"text-align:left\">反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?&lt;!95</td>\n<td>98</td>\n<td>NT</td>\n<td>2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">x</td>\n<td style=\"text-align:left\">y</td>\n<td>匹配x或y。例如，“z</td>\n<td>food”能匹配“z”或“food”。“(z</td>\n<td>f)ood”则匹配“zood”或“food”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[xyz]</td>\n<td style=\"text-align:left\">字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><sup><a href=\"#fn_xyz\" id=\"reffn_xyz\">xyz</a></sup></td>\n<td style=\"text-align:left\">负值字符集合。匹配未包含的任意字符。例如，“<sup><a href=\"#fn_abc\" id=\"reffn_abc\">abc</a></sup>”可以匹配“plain”中的“p”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">[a-z]</td>\n<td style=\"text-align:left\">字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><sup><a href=\"#fn_a-z\" id=\"reffn_a-z\">a-z</a></sup></td>\n<td style=\"text-align:left\">负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<sup><a href=\"#fn_a-z\" id=\"reffn_a-z\">a-z</a></sup>”可以匹配任何不在“a”到“z”范围内的任意字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\b</td>\n<td style=\"text-align:left\">匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\B</td>\n<td style=\"text-align:left\">匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\cx</td>\n<td style=\"text-align:left\">匹配由x指明的控制字符。例如，\\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\d</td>\n<td style=\"text-align:left\">匹配一个数字字符。等价于[0-9]。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\D</td>\n<td style=\"text-align:left\">匹配一个非数字字符。等价于<sup><a href=\"#fn_0-9\" id=\"reffn_0-9\">0-9</a></sup>。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\f</td>\n<td style=\"text-align:left\">匹配一个换页符。等价于\\x0c和\\cL。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\n</td>\n<td style=\"text-align:left\">匹配一个换行符。等价于\\x0a和\\cJ。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\r</td>\n<td style=\"text-align:left\">匹配一个回车符。等价于\\x0d和\\cM。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\s</td>\n<td style=\"text-align:left\">匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\S</td>\n<td style=\"text-align:left\">匹配任何非空白字符。等价于<sup><a href=\"#fn_ \\f\\n\\r\\t\\v\" id=\"reffn_ \\f\\n\\r\\t\\v\"> \\f\\n\\r\\t\\v</a></sup>。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\t</td>\n<td style=\"text-align:left\">匹配一个制表符。等价于\\x09和\\cI。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\v</td>\n<td style=\"text-align:left\">匹配一个垂直制表符。等价于\\x0b和\\cK。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\w</td>\n<td style=\"text-align:left\">匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\W</td>\n<td style=\"text-align:left\">匹配任何非单词字符。等价于“<sup><a href=\"#fn_A-Za-z0-9_\" id=\"reffn_A-Za-z0-9_\">A-Za-z0-9_</a></sup>”。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\xn</td>\n<td style=\"text-align:left\">匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\\x41”匹配“A”。“\\x041”则等价于“\\x04&amp;1”。正则表达式中可以使用ASCII编码。.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\num</td>\n<td style=\"text-align:left\">匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\\1”匹配两个连续的相同字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\n</td>\n<td style=\"text-align:left\">标识一个八进制转义值或一个向后引用。如果\\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\nm</td>\n<td style=\"text-align:left\">标识一个八进制转义值或一个向后引用。如果\\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\nm</td>\n<td style=\"text-align:left\">将匹配八进制转义值nm。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\nml</td>\n<td style=\"text-align:left\">如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">\\un</td>\n<td style=\"text-align:left\">匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\\u00A9匹配版权符号（©）</td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"title":"Tool shadowsocks搭建","date":"2019-12-26T02:55:53.000Z","update":null,"description":"有时你需要一把梯子","_content":"\n## Shadowsocks\n\n```bash\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython get-pip.py\npip install shadowsocks\n\nvi /etc/shadowsocks.json\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":50013,\n    \"local_port\":1080,\n    \"password\":\"1234567890\",\n    \"timeout\":600,\n    \"method\":\"aes-256-cfb\"\n}\n\nvi /etc/systemd/system/shadowsocks.service\n[Unit]\nDescription=Shadowsocks\n[Service]\nTimeoutStartSec=0\nExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json\n[Install]\nWantedBy=multi-user.target\n\n# 设置开机自启命令\nsystemctl enable shadowsocks\n# 启动命令\nsystemctl start shadowsocks\n#查看状态命令\nsystemctl status shadowsocks\n\n\n#过程有2步，第1步安装相应的内核，第2步开启内核对应的加速\nwget -N --no-check-certificate \"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\" && chmod +x tcp.sh && ./tcp.sh\n```\n","source":"_posts/Tool shadowsocks搭建.md","raw":"---\ntitle: Tool shadowsocks搭建\ndate: 2019-12-25 21:55:53\nupdate:\ntags: [Shadowsocks,Linux,Network,Tool]\ncategories: [Tool]\ndescription: 有时你需要一把梯子\n---\n\n## Shadowsocks\n\n```bash\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython get-pip.py\npip install shadowsocks\n\nvi /etc/shadowsocks.json\n{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":50013,\n    \"local_port\":1080,\n    \"password\":\"1234567890\",\n    \"timeout\":600,\n    \"method\":\"aes-256-cfb\"\n}\n\nvi /etc/systemd/system/shadowsocks.service\n[Unit]\nDescription=Shadowsocks\n[Service]\nTimeoutStartSec=0\nExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json\n[Install]\nWantedBy=multi-user.target\n\n# 设置开机自启命令\nsystemctl enable shadowsocks\n# 启动命令\nsystemctl start shadowsocks\n#查看状态命令\nsystemctl status shadowsocks\n\n\n#过程有2步，第1步安装相应的内核，第2步开启内核对应的加速\nwget -N --no-check-certificate \"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\" && chmod +x tcp.sh && ./tcp.sh\n```\n","slug":"Tool shadowsocks搭建","published":1,"updated":"2020-01-18T22:27:14.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5zhz9ph001kmou5hdfzeedk","content":"<h2 id=\"Shadowsocks\"><a href=\"#Shadowsocks\" class=\"headerlink\" title=\"Shadowsocks\"></a>Shadowsocks</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/shadowsocks.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"0.0.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:50013,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"1234567890\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/systemd/system/shadowsocks.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Shadowsocks</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">TimeoutStartSec=0</span><br><span class=\"line\">ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置开机自启命令</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> shadowsocks</span><br><span class=\"line\"><span class=\"comment\"># 启动命令</span></span><br><span class=\"line\">systemctl start shadowsocks</span><br><span class=\"line\"><span class=\"comment\">#查看状态命令</span></span><br><span class=\"line\">systemctl status shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#过程有2步，第1步安装相应的内核，第2步开启内核对应的加速</span></span><br><span class=\"line\">wget -N --no-check-certificate <span class=\"string\">\"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>\n","site":{"data":{"styles":".post {\n  margin-top: 60px;\n  margin-bottom: 60px;\n  padding: 25px;\n  -webkit-box-shadow: 0 0 5px rgba(202,203,203,0.5);\n  -moz-box-shadow: 0 0 5px rgba(202,203,204,0.5);\n}\n"}},"length":759,"excerpt":"","more":"<h2 id=\"Shadowsocks\"><a href=\"#Shadowsocks\" class=\"headerlink\" title=\"Shadowsocks\"></a>Shadowsocks</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">pip install shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/shadowsocks.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>:<span class=\"string\">\"0.0.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server_port\"</span>:50013,</span><br><span class=\"line\">    <span class=\"string\">\"local_port\"</span>:1080,</span><br><span class=\"line\">    <span class=\"string\">\"password\"</span>:<span class=\"string\">\"1234567890\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"timeout\"</span>:600,</span><br><span class=\"line\">    <span class=\"string\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/systemd/system/shadowsocks.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Shadowsocks</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">TimeoutStartSec=0</span><br><span class=\"line\">ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置开机自启命令</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> shadowsocks</span><br><span class=\"line\"><span class=\"comment\"># 启动命令</span></span><br><span class=\"line\">systemctl start shadowsocks</span><br><span class=\"line\"><span class=\"comment\">#查看状态命令</span></span><br><span class=\"line\">systemctl status shadowsocks</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#过程有2步，第1步安装相应的内核，第2步开启内核对应的加速</span></span><br><span class=\"line\">wget -N --no-check-certificate <span class=\"string\">\"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\"</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/C++ 静态和动态链接库/create static library.jpg","post":"ck5zhz9p0000imou5hfdm3n47","slug":"create static library.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Tool VSCode+Latex/settings.jpg","post":"ck5zhz9pa0016mou5cysucd6y","slug":"settings.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Algorithm 字符串匹配KMP/kmp.jpg","post":"ck5zhz9oh0002mou55lrm0t3w","slug":"kmp.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Algorithm 字符串匹配KMP/next.png","post":"ck5zhz9oh0002mou55lrm0t3w","slug":"next.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux bash&shell/pipe.jpg","post":"ck5zhz9p6000umou5gnekere6","slug":"pipe.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux bash&shell/数据流重导向.jpg","post":"ck5zhz9p6000umou5gnekere6","slug":"数据流重导向.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux Debian10网络配置/adapter1.jpg","post":"ck5zhz9p4000rmou52qen5api","slug":"adapter1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux Debian10网络配置/adapter2.jpg","post":"ck5zhz9p4000rmou52qen5api","slug":"adapter2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux Debian10网络配置/config.jpg","post":"ck5zhz9p4000rmou52qen5api","slug":"config.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux Debian10网络配置/ipaddr.jpg","post":"ck5zhz9p4000rmou52qen5api","slug":"ipaddr.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux 文件系统/tree.png","post":"ck5zhz9p8000zmou53o9affvi","slug":"tree.png","modified":1,"renderable":1},{"_id":"source/_posts/Linux 文件系统/文件属性.jpg","post":"ck5zhz9p8000zmou53o9affvi","slug":"文件属性.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux 文件系统/目录分类.jpg","post":"ck5zhz9p8000zmou53o9affvi","slug":"目录分类.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux 文件系统/索引式.jpg","post":"ck5zhz9p8000zmou53o9affvi","slug":"索引式.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Linux 文件系统/顺序式.jpg","post":"ck5zhz9p8000zmou53o9affvi","slug":"顺序式.jpg","modified":1,"renderable":1},{"_id":"source/_posts/Tool git/1checkinsOverTime.png","post":"ck5zhz9pd001cmou5filp7fkh","slug":"1checkinsOverTime.png","modified":1,"renderable":1},{"_id":"source/_posts/Tool git/2status.png","post":"ck5zhz9pd001cmou5filp7fkh","slug":"2status.png","modified":1,"renderable":1},{"_id":"source/_posts/Tool git/3lifecycle.png","post":"ck5zhz9pd001cmou5filp7fkh","slug":"3lifecycle.png","modified":1,"renderable":1},{"_id":"source/_posts/Tool git/branch-and-history.png","post":"ck5zhz9pd001cmou5filp7fkh","slug":"branch-and-history.png","modified":1,"renderable":1},{"_id":"source/_posts/Tool git/ssh-keys.png","post":"ck5zhz9pd001cmou5filp7fkh","slug":"ssh-keys.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ck5zhz9od0001mou5bvcx2ah1","category_id":"ck5zhz9oj0003mou599tmhcsv","_id":"ck5zhz9oy000emou5d27igabc"},{"post_id":"ck5zhz9oh0002mou55lrm0t3w","category_id":"ck5zhz9oj0003mou599tmhcsv","_id":"ck5zhz9p1000jmou56szr1khw"},{"post_id":"ck5zhz9oz000hmou5g9w41snk","category_id":"ck5zhz9ox000dmou5e0b59vsr","_id":"ck5zhz9p3000omou5b6lecop3"},{"post_id":"ck5zhz9om0006mou56cjafcvx","category_id":"ck5zhz9ox000dmou5e0b59vsr","_id":"ck5zhz9p5000smou5csvf7hbp"},{"post_id":"ck5zhz9p0000imou5hfdm3n47","category_id":"ck5zhz9ox000dmou5e0b59vsr","_id":"ck5zhz9p6000vmou54vodb91s"},{"post_id":"ck5zhz9oo0007mou54klj7lai","category_id":"ck5zhz9ox000dmou5e0b59vsr","_id":"ck5zhz9p80010mou54emdel21"},{"post_id":"ck5zhz9p3000nmou5d0u7068i","category_id":"ck5zhz9ox000dmou5e0b59vsr","_id":"ck5zhz9p90013mou5goht4non"},{"post_id":"ck5zhz9ov000bmou5fvr89x0f","category_id":"ck5zhz9ox000dmou5e0b59vsr","_id":"ck5zhz9pb0017mou54z611smw"},{"post_id":"ck5zhz9ow000cmou51bqd8flb","category_id":"ck5zhz9ox000dmou5e0b59vsr","_id":"ck5zhz9pc0019mou54vgah8jp"},{"post_id":"ck5zhz9p4000rmou52qen5api","category_id":"ck5zhz9pa0014mou5elz3cwqc","_id":"ck5zhz9pg001hmou5aqjh8avs"},{"post_id":"ck5zhz9p6000umou5gnekere6","category_id":"ck5zhz9pa0014mou5elz3cwqc","_id":"ck5zhz9pj001mmou56cf87r7b"},{"post_id":"ck5zhz9p8000zmou53o9affvi","category_id":"ck5zhz9pa0014mou5elz3cwqc","_id":"ck5zhz9pk001pmou56l9i3j1b"},{"post_id":"ck5zhz9pa0016mou5cysucd6y","category_id":"ck5zhz9pi001lmou56lribown","_id":"ck5zhz9pl001vmou5gcxl8gva"},{"post_id":"ck5zhz9pb0018mou5egr49fbz","category_id":"ck5zhz9pk001rmou5bt0wbuaf","_id":"ck5zhz9po001zmou53lo9a3aw"},{"post_id":"ck5zhz9pd001cmou5filp7fkh","category_id":"ck5zhz9pi001lmou56lribown","_id":"ck5zhz9pp0022mou5al6d6mkx"},{"post_id":"ck5zhz9pf001emou5axgsh20u","category_id":"ck5zhz9pi001lmou56lribown","_id":"ck5zhz9pq0025mou5ax5q5eyn"},{"post_id":"ck5zhz9pg001jmou58n934q60","category_id":"ck5zhz9pi001lmou56lribown","_id":"ck5zhz9pr0027mou52xbghswo"},{"post_id":"ck5zhz9ph001kmou5hdfzeedk","category_id":"ck5zhz9pi001lmou56lribown","_id":"ck5zhz9pr0029mou5ewzv8ir6"}],"PostTag":[{"post_id":"ck5zhz9od0001mou5bvcx2ah1","tag_id":"ck5zhz9ok0004mou501vvdulp","_id":"ck5zhz9ou000amou59xqwaf7a"},{"post_id":"ck5zhz9oh0002mou55lrm0t3w","tag_id":"ck5zhz9ok0004mou501vvdulp","_id":"ck5zhz9oz000gmou5fqao7qfm"},{"post_id":"ck5zhz9om0006mou56cjafcvx","tag_id":"ck5zhz9oy000fmou55ne7h9m4","_id":"ck5zhz9p5000tmou55jeocde3"},{"post_id":"ck5zhz9om0006mou56cjafcvx","tag_id":"ck5zhz9p1000lmou54phu00bf","_id":"ck5zhz9p7000xmou52mhuhzfv"},{"post_id":"ck5zhz9oo0007mou54klj7lai","tag_id":"ck5zhz9p1000lmou54phu00bf","_id":"ck5zhz9p90011mou516948zoy"},{"post_id":"ck5zhz9ov000bmou5fvr89x0f","tag_id":"ck5zhz9oy000fmou55ne7h9m4","_id":"ck5zhz9pe001dmou55lxec2zd"},{"post_id":"ck5zhz9ov000bmou5fvr89x0f","tag_id":"ck5zhz9p1000lmou54phu00bf","_id":"ck5zhz9pg001fmou5b3gb6ryk"},{"post_id":"ck5zhz9ow000cmou51bqd8flb","tag_id":"ck5zhz9p1000lmou54phu00bf","_id":"ck5zhz9pj001omou53k1k5l7c"},{"post_id":"ck5zhz9ow000cmou51bqd8flb","tag_id":"ck5zhz9pg001imou5cqnad5d5","_id":"ck5zhz9pk001qmou59txzc1mp"},{"post_id":"ck5zhz9oz000hmou5g9w41snk","tag_id":"ck5zhz9oy000fmou55ne7h9m4","_id":"ck5zhz9pl001tmou5bhr1dq0d"},{"post_id":"ck5zhz9oz000hmou5g9w41snk","tag_id":"ck5zhz9p1000lmou54phu00bf","_id":"ck5zhz9pl001umou5dcfadmze"},{"post_id":"ck5zhz9p0000imou5hfdm3n47","tag_id":"ck5zhz9p1000lmou54phu00bf","_id":"ck5zhz9ps002bmou5c92w4xm9"},{"post_id":"ck5zhz9p0000imou5hfdm3n47","tag_id":"ck5zhz9pl001wmou5fcknaxrh","_id":"ck5zhz9ps002cmou585bf6xig"},{"post_id":"ck5zhz9p0000imou5hfdm3n47","tag_id":"ck5zhz9pp0020mou5axpo6zwr","_id":"ck5zhz9ps002emou5clmudmt6"},{"post_id":"ck5zhz9p0000imou5hfdm3n47","tag_id":"ck5zhz9pq0023mou5b2jgc863","_id":"ck5zhz9pt002fmou53ejc57b9"},{"post_id":"ck5zhz9p0000imou5hfdm3n47","tag_id":"ck5zhz9pr0026mou54fkzh4w7","_id":"ck5zhz9pt002hmou5dj7o5pan"},{"post_id":"ck5zhz9p0000imou5hfdm3n47","tag_id":"ck5zhz9pr0028mou58iby7up9","_id":"ck5zhz9pt002imou5g94a59xc"},{"post_id":"ck5zhz9p3000nmou5d0u7068i","tag_id":"ck5zhz9pr002amou580d266yy","_id":"ck5zhz9pu002kmou53z1ue30g"},{"post_id":"ck5zhz9p3000nmou5d0u7068i","tag_id":"ck5zhz9p1000lmou54phu00bf","_id":"ck5zhz9pu002lmou5808natkc"},{"post_id":"ck5zhz9p4000rmou52qen5api","tag_id":"ck5zhz9pq0023mou5b2jgc863","_id":"ck5zhz9pv002omou51o9p78kh"},{"post_id":"ck5zhz9p4000rmou52qen5api","tag_id":"ck5zhz9pt002gmou5cqemc7zo","_id":"ck5zhz9pv002pmou51l8i08i1"},{"post_id":"ck5zhz9p4000rmou52qen5api","tag_id":"ck5zhz9pt002jmou53htp20dn","_id":"ck5zhz9pv002rmou5buy11ppg"},{"post_id":"ck5zhz9p4000rmou52qen5api","tag_id":"ck5zhz9pu002mmou5hrb88xqq","_id":"ck5zhz9pv002smou53az37y0u"},{"post_id":"ck5zhz9p6000umou5gnekere6","tag_id":"ck5zhz9pq0023mou5b2jgc863","_id":"ck5zhz9pw002vmou5azpxgwy7"},{"post_id":"ck5zhz9p6000umou5gnekere6","tag_id":"ck5zhz9pv002qmou5gxz0cm30","_id":"ck5zhz9pw002wmou5c4hgf5kh"},{"post_id":"ck5zhz9p6000umou5gnekere6","tag_id":"ck5zhz9pv002tmou51uk3ho1x","_id":"ck5zhz9px002ymou5g79eb6he"},{"post_id":"ck5zhz9p8000zmou53o9affvi","tag_id":"ck5zhz9pq0023mou5b2jgc863","_id":"ck5zhz9px002zmou5ah7kcm9e"},{"post_id":"ck5zhz9pa0016mou5cysucd6y","tag_id":"ck5zhz9pw002xmou533vcfxyn","_id":"ck5zhz9py0033mou51xd5hr4n"},{"post_id":"ck5zhz9pa0016mou5cysucd6y","tag_id":"ck5zhz9px0030mou5682c6807","_id":"ck5zhz9py0034mou5dybn1x7u"},{"post_id":"ck5zhz9pa0016mou5cysucd6y","tag_id":"ck5zhz9px0031mou53nm4h0aq","_id":"ck5zhz9py0036mou52w4g013q"},{"post_id":"ck5zhz9pb0018mou5egr49fbz","tag_id":"ck5zhz9pt002jmou53htp20dn","_id":"ck5zhz9pz0037mou56htubzsi"},{"post_id":"ck5zhz9pd001cmou5filp7fkh","tag_id":"ck5zhz9py0035mou564ic8i70","_id":"ck5zhz9pz003amou55dmdbcyn"},{"post_id":"ck5zhz9pd001cmou5filp7fkh","tag_id":"ck5zhz9px0031mou53nm4h0aq","_id":"ck5zhz9q0003bmou5gr4869jj"},{"post_id":"ck5zhz9pf001emou5axgsh20u","tag_id":"ck5zhz9py0035mou564ic8i70","_id":"ck5zhz9q2003hmou58mdq2czh"},{"post_id":"ck5zhz9pf001emou5axgsh20u","tag_id":"ck5zhz9q0003cmou5hvq2ddkd","_id":"ck5zhz9q2003imou5gy3n20p3"},{"post_id":"ck5zhz9pf001emou5axgsh20u","tag_id":"ck5zhz9q0003dmou5f8np7zzc","_id":"ck5zhz9q2003kmou54fxfalbz"},{"post_id":"ck5zhz9pf001emou5axgsh20u","tag_id":"ck5zhz9q0003emou5ecgqh0y6","_id":"ck5zhz9q2003lmou58odgd6jo"},{"post_id":"ck5zhz9pf001emou5axgsh20u","tag_id":"ck5zhz9q1003fmou56akx5294","_id":"ck5zhz9q3003nmou549jf2moc"},{"post_id":"ck5zhz9pg001jmou58n934q60","tag_id":"ck5zhz9q1003gmou5hjwo1n69","_id":"ck5zhz9q3003omou5d89b6peo"},{"post_id":"ck5zhz9pg001jmou58n934q60","tag_id":"ck5zhz9px0031mou53nm4h0aq","_id":"ck5zhz9q3003qmou57buce4hb"},{"post_id":"ck5zhz9ph001kmou5hdfzeedk","tag_id":"ck5zhz9q2003mmou5hthcavxm","_id":"ck5zhz9q4003tmou5hkcy6omv"},{"post_id":"ck5zhz9ph001kmou5hdfzeedk","tag_id":"ck5zhz9pq0023mou5b2jgc863","_id":"ck5zhz9q4003umou5gv9b8scc"},{"post_id":"ck5zhz9ph001kmou5hdfzeedk","tag_id":"ck5zhz9pt002jmou53htp20dn","_id":"ck5zhz9q4003vmou54tkwg65s"},{"post_id":"ck5zhz9ph001kmou5hdfzeedk","tag_id":"ck5zhz9px0031mou53nm4h0aq","_id":"ck5zhz9q4003wmou533ml088l"}],"Tag":[{"name":"Algorithm","_id":"ck5zhz9ok0004mou501vvdulp"},{"name":"C","_id":"ck5zhz9oy000fmou55ne7h9m4"},{"name":"C++","_id":"ck5zhz9p1000lmou54phu00bf"},{"name":"Multithreading","_id":"ck5zhz9pg001imou5cqnad5d5"},{"name":"gcc","_id":"ck5zhz9pl001wmou5fcknaxrh"},{"name":"g++","_id":"ck5zhz9pp0020mou5axpo6zwr"},{"name":"Linux","_id":"ck5zhz9pq0023mou5b2jgc863"},{"name":"Visual Studio","_id":"ck5zhz9pr0026mou54fkzh4w7"},{"name":"Windows","_id":"ck5zhz9pr0028mou58iby7up9"},{"name":"LeetCode","_id":"ck5zhz9pr002amou580d266yy"},{"name":"Debian","_id":"ck5zhz9pt002gmou5cqemc7zo"},{"name":"Network","_id":"ck5zhz9pt002jmou53htp20dn"},{"name":"Virtual Box","_id":"ck5zhz9pu002mmou5hrb88xqq"},{"name":"bash","_id":"ck5zhz9pv002qmou5gxz0cm30"},{"name":"shell","_id":"ck5zhz9pv002tmou51uk3ho1x"},{"name":"Latex","_id":"ck5zhz9pw002xmou533vcfxyn"},{"name":"VSCode","_id":"ck5zhz9px0030mou5682c6807"},{"name":"Tool","_id":"ck5zhz9px0031mou53nm4h0aq"},{"name":"Git","_id":"ck5zhz9py0035mou564ic8i70"},{"name":"github","_id":"ck5zhz9q0003cmou5hvq2ddkd"},{"name":"hexo","_id":"ck5zhz9q0003dmou5f8np7zzc"},{"name":"Next","_id":"ck5zhz9q0003emou5ecgqh0y6"},{"name":"Node.js","_id":"ck5zhz9q1003fmou56akx5294"},{"name":"Regular Expression","_id":"ck5zhz9q1003gmou5hjwo1n69"},{"name":"Shadowsocks","_id":"ck5zhz9q2003mmou5hthcavxm"}]}}